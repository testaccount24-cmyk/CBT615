./ ADD NAME=$$DOC    0100-03065-03065-2223-04691-04691-00000-ISPFDYN
1

















                         ISPF Dialog Manager Assembler Macros
                                     Version 2.0













                                                   Bob Zimmerman
                                                   Development Technical Support
                                                   CNA Insurance
                                                   CNA Plaza - 8cs
                                                   Chicago, Illinois 60685
                                                   (312) 822 - 5719
1


      ISPF Dialog Manager Assembler Macros                                Page i




                                                               TABLE OF CONTENTS
+                                                              _________________







      ISPF Dialog Manager Assembler Macros - Overview . . . . . . . . . . . .  1

           About Version 2.0  . . . . . . . . . . . . . . . . . . . . . . . .  2

           Compatability and Restrictions . . . . . . . . . . . . . . . . . .  3



      ISPF Dialog Manager Assembler Macros - General Syntax . . . . . . . . .  4

           General Syntax . . . . . . . . . . . . . . . . . . . . . . . . . .  5

           Macro Format (Standard, List and Execute form) . . . . . . . . . .  6

           Accessing ISPLINK and ISPEXEC (CALL, LINK or LOAD) . . . . . . . .  7



      ISPF Dialog Manager Assembler Macros - ISPF Macro . . . . . . . . . . .  8

           Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  9

           ISPF DELETE  . . . . . . . . . . . . . . . . . . . . . . . . . . . 10

           ISPF LOAD  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12

           ISPF PARMS . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14

           ISPF SET . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17

           ISPF SUPPRESS  . . . . . . . . . . . . . . . . . . . . . . . . . . 18



      ISPF Dialog Manager Assembler Macros - Macro Syntax . . . . . . . . . . 20

           BROWSE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21

           CONTROL  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23

           DISPLAY  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24

           EDIT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25

           FTCLOSE  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27

           FTERASE  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28
1


      ISPF Dialog Manager Assembler Macros                               Page ii




           FTINCL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29

           FTOPEN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30

           GETMSG . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31

           ISPEXEC  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33

           ISREDIT  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35

           LOG  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36

           SELECT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37

           SETMSG . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39

           TBADD  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40

           TBBOTTOM . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41

           TBCLOSE  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43

           TBCREATE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45

           TBDELETE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47

           TBDISPL  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48

           TBEND  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50

           TBERASE  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51

           TBEXIST  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52

           TBGET  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53

           TBMOD  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54

           TBOPEN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55

           TBPUT  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56

           TBQUERY  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57

           TBSARG . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58

           TBSAVE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59

           TBSCAN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60

           TBSKIP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62

           TBSORT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63

           TBSTATS  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64
1


      ISPF Dialog Manager Assembler Macros                              Page iii




           TBTOP  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66

           TBVCLEAR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67

           VCOPY  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68

           VDEFINE  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70

           VDELETE  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72

           VGET . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73

           VPUT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74

           VREPLACE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75

           VRESET . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76



      ISPF Dialog Manager Assembler Macros - Library Access Services  . . . . 77

           LMCLOSE  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78

           LMERASE  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79

           LMFREE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80

           LMGET  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81

           LMINIT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82

           LMMADD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84

           LMMDEL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85

           LMMFIND  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86

           LMMLIST  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87

           LMMREN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88

           LMMREP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89

           LMOPEN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90

           LMPUT  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91

           LMQUERY  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92



      ISPF Dialog Manager Assembler Macros - Appendices . . . . . . . . . . . 94

           Appendix A - Example Program . . . . . . . . . . . . . . . . . . . 95
1


      ISPF Dialog Manager Assembler Macros                               Page iv




           Appendix B - Using the macros with existing programs . . . . . . . 97
1


      ISPF Dialog Manager Assembler Macros                                Page 1










      _________________________________________________________________________
      |                                                                       |
      |                                                                       |
      |            ISPF Dialog Manager Assembler Macros - Overview            |
      |                              Version 2.0                              |
      |                                                                       |
      |_______________________________________________________________________|
1


      ISPF Dialog Manager Assembler Macros                                Page 2
      About Version 2.0



      _______________________
      |                     |
      |                     |
      |  About Version 2.0  |
      |                     |
      |_____________________|




      _________________________________________________________________________


      Because this is Version 2.0 of these macros, I am attempting to use them
      as often as possible in my own installation, so I may "debug" them as
      thoroughly as possible.  As IBM will attest, no amount of testing can take
      out all of the bugs in a given product. Therefore, I encourage any users
      making modifications or finding a bug to contact me.

      The following is a history of the modifications throughout releases:

            1.1 - Corrected internal dummy paramter problem.
                  In ISPF Version II, when passing a dummy parameter that is
                  expected to be numeric, for example, the TBSKIP operand, you
                  must pass 4 bytes of spaces. This was corrected wherever
                  applicable.

            2.0 - Add all LAS and ISPF Version II services and support Keywords.
                  TBSTATS, TBSORT and all LAS services are now supported.

                  A user now specifies the macro using keywords, not positional
                  parameters.  For example, instead of knowing the the 9th posi-
                  tional parameter of the LMINIT service is the dataset name, a
                  user can code DSN=.


                  In addition, all services are now invoked using keywords.
                  Instead of a user coding

                       TBQUERY ,,,,,,,,CRP

                  to retrieve the current CRP value, he must now code

                       TBQUERY POSITION=CRP

                  similar to the ISPEXEC interface.  The syntax of all macros
                  are now identical to CLIST syntax.  For compatability with
                  Version 1 of these macros, see the new macro ISPF SET in this
                  manual.
1


      ISPF Dialog Manager Assembler Macros                                Page 3
      Compatability and Restrictions



      ____________________________________
      |                                  |
      |                                  |
      |  Compatability and Restrictions  |
      |                                  |
      |__________________________________|




      _________________________________________________________________________


      The syntax of these macros has been designed so they are extremely flexi-
      ble, and can be used with existing applications with no modification to
      existing code.

      There is one restriction with the use of these macros:  Assembler Version
      H or later must be used because the internal symbols (global and local)
      are longer than 8 bytes. I used these long symbols to simplify mainte-
      nance.  In addition, they should not conflict with any other macro symbols
      currently in use at an installation.


      These macros support ISPF Version 2. They are fully compatible with ISPF
      Version 1.  The macro set with this release does not include all of the
      services available in ISPF Version 2. These services will be included in
      future releases.
1


      ISPF Dialog Manager Assembler Macros                                Page 4










      _________________________________________________________________________
      |                                                                       |
      |                                                                       |
      |         ISPF Dialog Manager Assembler Macros - General Syntax         |
      |                              Version 2.0                              |
      |                                                                       |
      |_______________________________________________________________________|
1


      ISPF Dialog Manager Assembler Macros                                Page 5
      General Syntax



      ____________________
      |                  |
      |                  |
      |  General Syntax  |
      |                  |
      |__________________|




      _________________________________________________________________________


      The ISPF Dialog Manager Assembler Macro syntax follows IBM conventions
      found in XA Supervisor Services and Macro Instructions (GC28-1154-0).  A
      synopsis of the important rules follows.


          1.  All parameters listed in lowercase are to be replaced with a user
              value.

          2.  All parameters listed in uppercase are coded as shown. No user
              symbol or value may be used.

          3.  All parameters aligned on the left margin are required.

          4.  All parameters indented from the left margin are optional.

          5.  When a dataset name is required as an operand, the macro expects
              standard TSO dsname syntax; i.e., dsname is either fully qualified
              within apostrophes or unquoted (TSO prefix is automatically
              inserted).


      NOTE: This manual does not include description of the ISPF service func-
            tions with the syntax of each macro.  For a full description of ISPF
            Services, see the IBM manual Interactive System Productivity Facil-
            ity - Dialog Management Services (SC34-2137-0).
1


      ISPF Dialog Manager Assembler Macros                                Page 6
      Macro Format (Standard, List and Execute form)



      ____________________________________________________
      |                                                  |
      |                                                  |
      |  Macro Format (Standard, List and Execute form)  |
      |                                                  |
      |__________________________________________________|




      _________________________________________________________________________


      Standard form of the macros generates an in-line parameter list for all
      calls to ISPLINK, like standard IBM macros.

      The list form of all ISPF macros would be a standard "CALL" parameter-
      list.  To simplify coding, the ISPF PARMS macro is provided to generate a
      common parameter-list for all of the ISPF macros.  See the documentation
      of ISPF PARMS macro in this manual for a full description of its uses.

      The execute form of any macro may be selected by using the MF=E or
      MF=(E,parmlist) keywords.  Parmlist is a symbol representing a list of
      fullwords used to create a standard parameter-list.  If parmlist is omit-
      ted, the default symbol SPFPARMS will be used.  This symbol is automati-
      cally generated, with the appropriate number of fullwords, when using the
      ISPF PARMS macro (documented elsewhere in this manual).

      The parmlist option of MF=(E,parmlist) is available for compatability rea-
      sons (in case you would like to incorporate these macros with existing
      code).

       ********  NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE  *********
       *                                                                    *
       *                                                                    *
       *   In general, only request the execute form of the macro if you    *
       *   are coding a reentrant program, or addressing a relocatable      *
       *   storage area; then I recommend the MF=E format of the macro.     *
       *   The MF=(E,parmlist) format was supplied for only to allow adding *
       *   these macros to existing programs!!!!                            *
       *                                                                    *
       *                                                                    *
       **********************************************************************
1


      ISPF Dialog Manager Assembler Macros                                Page 7
      Accessing ISPLINK and ISPEXEC (CALL, LINK or LOAD)



      ________________________________________________________
      |                                                      |
      |                                                      |
      |  Accessing ISPLINK and ISPEXEC (CALL, LINK or LOAD)  |
      |                                                      |
      |______________________________________________________|




      _________________________________________________________________________


      When invoking an ISPF service from a dialog program, ISPLINK or ISPEXEC
      may be accessed via a CALL, LINK, or LOAD.  Using the CALL macro requires
      the ISPLINK module to be included in the load module composite.  Most
      installations already have ISPLINK in its LPA and therefore this technique
      can be a waste of storage.  In addition, if in a future release of ISPF,
      ISPLINK is changed, you would have to relink all the existing dialogs.

      Using the LINK or LOAD macro eliminates the above problem.  My recommenda-
      tion is to do an initial LOAD of ISPLINK and save the entry address.

      I have designed each macro with the special keyword LOAD to specify where
      you have stored the entry address of the ISPLINK module.

      In addition, the ISPF LOAD and ISPF DELETE macros (documented in this man-
      ual) will LOAD and DELETE the ISPLINK module. Appendix A has a complete
      example of how a typical program would LOAD ISPLINK, access ISPF services
      and DELETE the ISPLINK module.
1


      ISPF Dialog Manager Assembler Macros                                Page 8










      _________________________________________________________________________
      |                                                                       |
      |                                                                       |
      |           ISPF Dialog Manager Assembler Macros - ISPF Macro           |
      |                              Version 2.0                              |
      |                                                                       |
      |_______________________________________________________________________|
1


      ISPF Dialog Manager Assembler Macros                                Page 9
      Overview



      ______________
      |            |
      |            |
      |  Overview  |
      |            |
      |____________|




      _________________________________________________________________________


      Certain common needs are found when coding any Dialog Program.  One need
      is the access to the ISPF interfaces ISPLINK and ISPEXEC.  The ISPF macro
      is designed as an 'environment' macro.  Some of its functions are listed
      below.


          1.  LOAD and DELETE the ISPF modules ISPLINK and ISPEXEC.

          2.  Generate the List form of all ISPF macros.

          3.  Supply all 'working-storage' needed for the ISPF environment.

          4.  Suppress the generation of constants for compatability with exist-
              ing programs.
              (e.g. DISPLAY DC CL8'DISPLAY')
1


      ISPF Dialog Manager Assembler Macros                               Page 10
      ISPF DELETE



      _________________
      |               |
      |               |
      |  ISPF DELETE  |
      |               |
      |_______________|




      This ISPF macro will issue a DELETE for the ISPLINK and ISPEXEC modules.
      This macro complements the ISPF LOAD macro used to LOAD the ISPLINK and
      ISPEXEC modules for program access.

      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede ISPF.
      ISPF
      b                  one or more blanks must follow ISPF.

      _________________________________________________________________________

      DELETE             DELETE: Required keyword coded as shown.

          ,ISPLINK=NO    default: YES
          ,ISPLINK=YES

          ,ISPEXEC=NO    default: NO
          ,ISPEXEC=YES


      _________________________________________________________________________

                         The parameters are explained as follows:

      DELETE             This keyword identifies the function of the ISPF
                         macro.

      ,ISPLINK=NO
      ,ISPLINK=YES       This parameter specifies whether the ISPLINK module
                         should be deleted or not. If it was never loaded it
                         must not be deleted.

                         The default is ISPLINK=YES. This corresponds to the
                         default for the ISPF LOAD macro. See Appendix A for
                         an example.

      ,ISPEXEC=NO
      ,ISPEXEC=YES       This parameter specifies whether the ISPEXEC module
                         should be deleted or not. If it was never loaded it
                         must not be deleted.

                         The default is ISPEXEC=NO. This corresponds to the
1


      ISPF Dialog Manager Assembler Macros                               Page 11
      ISPF DELETE



                         default for the ISPF LOAD macro. See Appendix A for
                         an example.


      _________________________________________________________________________

      Example 1:         Operation: Delete the ISPLINK module.

                                 ISPF DELETE

      Example 2:         Operation: Delete only the ISPEXEC module.

                                 ISPF DELETE,ISPLINK=NO,ISPEXEC=YES
1


      ISPF Dialog Manager Assembler Macros                               Page 12
      ISPF LOAD



      _______________
      |             |
      |             |
      |  ISPF LOAD  |
      |             |
      |_____________|




      This ISPF macro will issue a LOAD for the ISPLINK and ISPEXEC modules. In
      addition it will store the entry address(es) of ISPLINK and ISPEXEC into
      fullwords.

      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede ISPF.
      ISPF
      b                  one or more blanks must follow ISPF.

      _________________________________________________________________________

      LOAD               LOAD: Required keyword coded as shown.

          ,ISPLINK=NO
          ,ISPLINK=(YES,symbol)
                         symbol: Address of a fullword used to store ISPLINK
                         entry address.
                         default: (YES,ISPLINK)

          ,ISPEXEC=NO
          ,ISPEXEC=(YES,symbol)
                         symbol: Address of a fullword used to store ISPEXEC
                         entry address.
                         default: NO


      _________________________________________________________________________

                         The parameters are explained as follows:

      LOAD               This keyword identifies the function of the ISPF
                         macro.

      ,ISPLINK=NO
      ,ISPLINK=(YES,symbol)
                         This parameter specifies whether the ISPLINK module
                         should be loaded or not. After it is loaded, it will
                         store the entry address into the fullword at the
                         location of 'symbol'.

                         The default is ISPLINK=(YES,ISPLINK). The symbol
                         ISPLINK is generated by the ISPF PARMS macro. See
1


      ISPF Dialog Manager Assembler Macros                               Page 13
      ISPF LOAD



                         See Appendix A for an example.

      ,ISPEXEC=NO
      ,ISPEXEC=(YES,symbol)
                         This parameter specifies whether the ISPEXEC module
                         should be loaded or not. After it is loaded, it will
                         store the entry address into the fullword at the
                         location of 'symbol'.

                         The default is ISPEXEC=NO. The symbol ISPEXEC is
                         generated by the ISPF PARMS macro. See Appendix A
                         for an example.


      _________________________________________________________________________

      Example 1:         Operation: Load ISPLINK and store its entry point
                         into the fullword labeled ISPLINK.

                                 ISPF LOAD

      Example 2:         Operation: Load only the ISPEXEC module. Store its
                         entry point into the fullword labeled ISPFEP.

                                 ISPF LOAD,ISPLINK=NO,ISPEXEC=(YES,ISPFEP)
                         ISPFEP  DS   A               ISPEXEC ENTRY POINT
1


      ISPF Dialog Manager Assembler Macros                               Page 14
      ISPF PARMS



      ________________
      |              |
      |              |
      |  ISPF PARMS  |
      |              |
      |______________|




      For any dialog program, certain common working storage areas are required;
      for example, a fullword for the ISPLINK entry address.  In addition, a
      parameter-list is required when the execute form of any macros in this
      manual are used.  This macro generates all common working storage areas.

      NOTE: The parameter-list fields are only generated when an execute form of
            an ISPF Service macro is used. Then, it is generated to the length
            required by the largest parameter list required. See the description
            of the  MINIMUM keyword that follows for more.

      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede ISPF.
      ISPF
      b                  one or more blanks must follow ISPF.

      _________________________________________________________________________

      PARMS              PARMS: Required keyword coded as shown.

          ,LIST=symbol
                         symbol: Symbol used as label for parameter-list.
                         default: SPFPARMS.

          ,ISPLINK=NO
          ,ISPLINK=(YES,symbol)
                         symbol: Symbol used as label of fullword for ISPLINK
                         entry address.
                         default: (YES,ISPLINK)

          ,ISPEXEC=NO
          ,ISPEXEC=(YES,symbol)
                         symbol: Symbol used as label of fullword for ISPEXEC
                         entry address.
                         default: NO

          ,MINIMUM=number
                         number: Numeric value.

          ,LASTCC=symbol
                         symbol: Symbol used in equate to register 15.

          ,COUNT=number
1


      ISPF Dialog Manager Assembler Macros                               Page 15
      ISPF PARMS



          ,FULL=NO
          ,FULL=YES      default: NO


      _________________________________________________________________________

                         The parameters are explained as follows:

      PARMS              This keyword identifies the function of the ISPF
                         macro.

      ,LIST=symbol
                         This symbol specifies the label used for the
                         parameter list generated (if any).

                         When any macro in this manual is issued in its
                         execute form, it defaults to use the parameter-list
                         labeled SPFPARMS. Therefore the default value is
                         SPFPARMS.

      ,ISPLINK=NO
      ,ISPLINK=(YES,symbol)
                         Specifies whether or not to generate the fullword
                         used to store the ISPLINK entry point address.  See
                         the ISPF LOAD macro for more information.

                         The default is ISPLINK=(YES,ISPLINK). This corres-
                         ponds with the ISPF LOAD macro default.  See
                         Appendix A for an example.

      ,ISPEXEC=NO
      ,ISPEXEC=(YES,symbol)
                         Specifies whether or not to generate the fullword
                         used to store the ISPEXEC entry point address.  See
                         the ISPF LOAD macro for more information.

                         The default is ISPEXEC=NO. This corresponds with the
                         ISPF LOAD macro default.  See Appendix A for an
                         example.

      ,MINIMUM=number
                         Normally, this macro will only generate a parameter
                         list when it is needed (i.e., when an execute form
                         of these macros has been used). When it does generate
                         the parameter-list, it will only generate the amount
                         of fullwords required by the used programs. For
                         example, if the largest execute form macro used was
                         the SELECT macro, it requires only 3 fullwords. If
                         the largest execute form was the VDEFINE macro, it
                         requires 7 fullwords.

                         This keyword allows you to specify the minimum number
                         of fullwords to be used. In addition, it will force
                         the generation of the paramter list even if no
                         execute form of a macro has been used.
1


      ISPF Dialog Manager Assembler Macros                               Page 16
      ISPF PARMS



      ,LASTCC=symbol
                         This parameter is supplied to support earlier
                         versions of this macro.
                         It will generate an equate for the symbol to register
                         15. This allows the coding of "LTR symbol,symbol" as
                         apposed to "LTR 15,15".

      ,COUNT=number
                         This parameter should not be used. It is supplied to
                         support earlier versions of this macro.

      ,FULL=NO
      ,FULL=YES
                         This parameter should not be used. It is supplied to
                         support earlier versions of this macro.


      _________________________________________________________________________

      Example 1:         Operation: Request the default working-storage areas.

                                 ISPF PARMS

      Example 2:         Operation: Request a minimum of 4 fullwords in the
                         parameter list. Request the label for the ISPEXEC
                         module to be generated.

                                 ISPF PARMS,MINIMUM=4,ISPEXEC=YES
1


      ISPF Dialog Manager Assembler Macros                               Page 17
      ISPF SET



      ______________
      |            |
      |            |
      |  ISPF SET  |
      |            |
      |____________|




      In Version 2.0 of these macros, all services now support keyword. For
      example, to display a panel, the user codes

           DISPLAY PANEL='panel name'.

      In Version 1.0 of these macros, these same services were positional. The
      display of a panel would be coded as

           DISPLAY 'panel name'.

      This macro will allow the user to continue to maintain old programs using
      the Version 1.0 syntax. Its intended use is only for compatability.

      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede ISPF.
      ISPF
      b                  one or more blanks must follow ISPF.

      _________________________________________________________________________

      SET                SET: Required keyword coded as shown.

      ,LEVEL=1           LEVEL=1: Required as shown.


      _________________________________________________________________________

                         The parameters are explained as follows:

      SET                This keyword identifies the function of the ISPF
                         macro.

      ,LEVEL=1           This parameter specifies the version of these macros
                         that are being used in this assembly.


      _________________________________________________________________________

      Example 1:         Operation: Allow assembly of a program coded under
                         version 1.0 using the version 2.0 macros.

                               ISPF SET,LEVEL=1
1


      ISPF Dialog Manager Assembler Macros                               Page 18
      ISPF SUPPRESS



      ___________________
      |                 |
      |                 |
      |  ISPF SUPPRESS  |
      |                 |
      |_________________|




      Normally, when using any macro documented in this manual, that macro will
      generate a constant for the service invoked. For example, when issuing the
      DISPLAY macro, it will generate the constant

           DISPLAY DC CL8'DISPLAY'

      The ISPF SUPPRESS macro suppresses the automatic generation of a constant
      for compatability with existing programs.  Otherwise, its use is not
      recommended.

      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede ISPF.
      ISPF
      b                  one or more blanks must follow ISPF.

      _________________________________________________________________________

      SUPPRESS           SUPPRESS: Required keyword coded as shown.

      ,LIST=(keywords)   keywords: Any ISPF keyword supported by these macros.
      ,LIST=ALL          For example, DISPLAY, CANCEL, TBDISPL, etc.
                         ALL: will suppress all generation.


      _________________________________________________________________________

                         The parameters are explained as follows:

      SUPPRESS           This keyword identifies the function of the ISPF
                         macro.

      ,LIST=(keywords)
      ,LIST=ALL          This parameter specifies what constants should be
                         suppressed by the ISPF macro. Keyword may be listed
                         in a standard list form such as
                         ISPF SUPPRESS,LIST=(keyword1,keyword2,keyword3).
                         LIST=ALL suppresses all keywords.
1


      ISPF Dialog Manager Assembler Macros                               Page 19
      ISPF SUPPRESS



      _________________________________________________________________________

      Example 1:         Operation: Suppress the generation of the CONTROL,
                         ERRORS and CANCEL constants.

                               ISPF SUPPRESS,LIST=(CONTROL,ERRORS,CANCEL)

      Example 2:         Operation: Suppress the list of all constants.

                                 ISPF SUPPRESS,LIST=ALL
1


      ISPF Dialog Manager Assembler Macros                               Page 20










      _________________________________________________________________________
      |                                                                       |
      |                                                                       |
      |             ISPF Dialog Manager Assembler Macros - Syntax             |
      |                              Version 2.0                              |
      |                                                                       |
      |_______________________________________________________________________|
1


      ISPF Dialog Manager Assembler Macros                               Page 21
      BROWSE



      ____________
      |          |
      |          |
      |  BROWSE  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede BROWSE.
      BROWSE
      b                  one or more blanks must follow BROWSE.

      _________________________________________________________________________

          DATASET=dsn    dsn: Dsname enclosed in apostrophes or a
                         symbol addressing a 56 byte Dsname (TSO Syntax).

          ,VOLUME=vol    vol: Volser enclosed in apostrophes or a symbol
                         addressing a 6 byte volser.

          ,PASSWORD=pass pass: Password enclosed in apostrophes or a symbol
                         addressing an 8 byte password.

          ,PANEL=panel   panel: Panel name enclosed in apostrophes or a symbol
                         addressing an 8 byte panel name.

          ,DATAID=id     id: Dataid name enclosed in apostrophes or a symbol
                         addressing an 8 byte data id.

          ,MEMBER=member member: Member name enclosed in apostrophes or a
                         symbol addressing an 8 byte member.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 22
      BROWSE



      _________________________________________________________________________

      Example 1:         Operation: Invoke ISPF Browse against the dataset
                         'SYS1.MACLIB' which is in the system catalog.

                                 BROWSE DATASET='''SYS1.MACLIB'''

      Example 2:         Operation: Invoke ISPF Browse against the dataset
                         'userid.MY.DATA' on volume TESTE1 and use the execute
                         form of the macro. The default parmlist generated by
                         the ISPF PARMS macro will be used.

                                 BROWSE DATASET=DSNAME,VOLUME='TESTE1',  X
                                     MF=E
                         DSNAME  DC   CL56'MY.DATA'
1


      ISPF Dialog Manager Assembler Macros                               Page 23
      CONTROL



      _____________
      |           |
      |           |
      |  CONTROL  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede CONTROL.
      CONTROL
      b                  one or more blanks must follow CONTROL.

      _________________________________________________________________________

      type               type: Valid ISPF CONTROL type.
                         Examples: DISPLAY, NONDISPL, or ERRORS.

      ,mode              mode: Valid "mode" for CONTROL "type" specified.
                         Example: END or ENTER for CONTROL DISPLAY.

          ,linenum       linenum: Numeric value or symbol addressing a
                         fullword. Valid only for DISPLAY "type".

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Invoke the equivalent of
                         ISPEXEC CONTROL ERRORS CANCEL.

                                 CONTROL ERRORS,CANCEL

      Example 2:         Operation: Invoke the equivalent of
                         ISPEXEC CONTROL DISPLAY LINE START(4)

                                 CONTROL DISPLAY,LINE,4
                         or
                                 CONTROL DISPLAY,LINE,F4
                         F4      DC  F'4'
1


      ISPF Dialog Manager Assembler Macros                               Page 24
      DISPLAY



      _____________
      |           |
      |           |
      |  DISPLAY  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede DISPLAY.
      DISPLAY
      b                  one or more blanks must follow DISPLAY.

      _________________________________________________________________________

          PANEL=panel    panel: Panel name enclosed in apostrophes or a symbol
                         addressing an 8 byte panel name.

          ,MSG=msg       msg: Message name enclosed in apostrophes or a symbol
                         addressing an 8 byte message name.

          ,CURSOR=field  field: Field name enclosed in apostrophes or a symbol
                         addressing an 8 byte field name.

          ,CSRPOS=csrpos csrpos: Numeric cursor position or a symbol
                         addressing a fullword containing the cursor position.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Display panel named ABC.

                         LOOP    DISPLAY PANEL='ABC'

      Example 2:         Operation: Display panel ABC with the message name
                         found at label MSG.

                                 DISPLAY PANEL='ABC',MSG=MSG
                         MSG     DC  CL8'MSG001'
1


      ISPF Dialog Manager Assembler Macros                               Page 25
      EDIT



      __________
      |        |
      |        |
      |  EDIT  |
      |        |
      |________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede EDIT.
      EDIT
      b                  one or more blanks must follow EDIT.

      _________________________________________________________________________

          DATASET=dsn    dsn: Dsname enclosed in apostrophes or a symbol
                         addressing a 56 byte Dsname (TSO Syntax).

          ,VOLUME=vol    vol: Volser enclosed in apostrophes or a symbol
                         addressing a 6 byte volser.

          ,PASSWORD=pass pass: Password enclosed in apostrophes or a symbol
                         addressing an 8 byte password.

          ,PANEL=panel   panel: Panel name enclosed in apostrophes or a symbol
                         addressing an 8 byte panel name.

          ,MACRO=macro   macro: Macro name enclosed in apostrophes or a symbol
                         addressing an 8 byte initial macro.

          ,PROFILE=prof  prof: Edit profile name enclosed in apostrophes or a
                         symbol addressing an 8 byte edit profile.

          ,DATAID=id     id: Dataid name enclosed in apostrophes or a symbol
                         addressing an 8 byte dataid.

          ,MEMBER=mem    mem: Member name enclosed in apostrophes or a symbol
                         addressing an 8 byte member.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 26
      EDIT



      _________________________________________________________________________

      Example 1:         Operation: Invoke ISPF EDIT against 'SYS1.MACLIB'.
                         Use the "ASMB" profile name.

                                 EDIT DATASET='''SYS1.MACLIB''',         X
                                      PROFILE='ASMB'

      Example 2:         Operation: Invoke ISPF Edit against the dataset
                         'userid.MY.DATA' on volume TESTE1 and use the execute
                         form of the macro. The default parmlist generated by
                         the ISPF PARMS macro will be used. The default
                         profile will be used as well.

                                 EDIT  DATASET=DSNAME,VOLUME='TESTE1',MF=E
                         DSNAME  DC   CL56'MY.DATA'
1


      ISPF Dialog Manager Assembler Macros                               Page 27
      FTCLOSE



      _____________
      |           |
      |           |
      |  FTCLOSE  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede FTCLOSE.
      FTCLOSE
      b                  one or more blanks must follow FTCLOSE.

      _________________________________________________________________________

          NAME=member    member: Member name enclosed in apostrophes or a
                         symbol addressing an 8 byte member name.

          ,LIBRARY=lib   lib: DDname enclosed in apostrophes or a symbol
                         addressing an 8 byte DDname.

          ,NOREPL=keyw   keyw: Keyword NOREPL enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Close a File Tailoring output file that
                         was open with FTOPEN TEMP.

                                 FTCLOSE


      Example 2:         Operation: Close a File Tailoring output file. The
                         output should be routed to DDname 'OUTPUT' and the
                         member name should be ABC. If the member currently
                         exists, do not replace it.

                                 FTCLOSE NAME='ABC',LIBRARY=DDNAME,      X
                                      NOREPL='NOREPL'
                         DDNAME  DC   CL8'OUTPUT'
1


      ISPF Dialog Manager Assembler Macros                               Page 28
      FTERASE



      _____________
      |           |
      |           |
      |  FTERASE  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede FTERASE.
      FTERASE
      b                  one or more blanks must follow FTERASE.

      _________________________________________________________________________

      member             member: Member name enclosed in apostrophes or a
                         symbol addressing an 8 byte member name.

          ,LIBRARY=lib   lib: DDname enclosed in apostrophes or a symbol
                         addressing an 8 byte DDname.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Erase the member ABC from the file
                         currently allocated to ISPFILE.

                                 FTERASE 'ABC'

      Example 2:         Operation: Erase the member DEF from the file
                         allocated to DDname 'OUTPUT'. Using the execute form
                         of the macro.

                                 FTERASE MEMBER,LIBRARY=DDNAME,MF=E
                         MEMBER  DC   CL8'DEF'
                         DDNAME  DC   CL8'OUTPUT'
1


      ISPF Dialog Manager Assembler Macros                               Page 29
      FTINCL



      ____________
      |          |
      |          |
      |  FTINCL  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede FTINCL.
      FTINCL
      b                  one or more blanks must follow FTINCL.

      _________________________________________________________________________

      skeleton           skeleton: Skeleton name enclosed in apostrophes or a
                         symbol addressing an 8 byte skeleton name.

          ,NOFT=keyw     keyw: Keyword NOFT enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Include the skeleton ABC with File
                         Tailoring.

                                 FTINCL 'ABC'

      Example 2:         Operation: Include member ABC without File Tailoring.

                                 FTINCL SKELETN,NOFT=NOFTVAL
                         SKELETN DC   CL8'ABC'
                         NOFTVAL DC   CL8'NOFT'
1


      ISPF Dialog Manager Assembler Macros                               Page 30
      FTOPEN



      ____________
      |          |
      |          |
      |  FTOPEN  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede FTOPEN.
      FTOPEN
      b                  one or more blanks must follow FTOPEN.

      _________________________________________________________________________

          ,TEMP=keyw     keyw: Keyword TEMP enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Open a temporary file tailoring file.

                                 FTOPEN TEMP='TEMP'

      Example 2:         Operation: Open the file tailoring file. Use the
                         file currently allocated to ISPFILE.

                                 FTOPEN ,
1


      ISPF Dialog Manager Assembler Macros                               Page 31
      GETMSG



      ____________
      |          |
      |          |
      |  GETMSG  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede GETMSG.
      GETMSG
      b                  one or more blanks must follow GETMSG.

      _________________________________________________________________________

      MSG=msg            msg: Message name enclosed in apostrophes or a
                         symbol addressing an 8 byte message name.

          ,SHORTMSG=smsg smsg: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,LONGMSG=lmsg  lmsg: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,ALARM=alarm   alarm: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,HELP=help     help: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 32
      GETMSG



      _________________________________________________________________________

      Example 1:         Operation: Get the short and long message text for
                         the message called MSG001. Place the short message in
                         variable SHORT, the long message text in variable
                         LONG and the help panel name in HELP. No request for
                         the alarm status is desired.

                                 GETMSG MSG='MSG001',                    X
                                     SHORTMSG='SHORT',                   X
                                     LONGMSG='LONG',                     X
                                     HELP='HELP'

      Example 2:         Operation: Get the alarm status for message msg002.
                         Store its value in variable alarm. Use the execute
                         form of the macro.

                                 GETMSG MSG='MSG002',ALARM='ALARM',MF=E
1


      ISPF Dialog Manager Assembler Macros                               Page 33
      ISPEXEC



      _____________
      |           |
      |           |
      |  ISPEXEC  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede ISPEXEC.
      ISPEXEC
      b                  one or more blanks must follow ISPEXEC.

      _________________________________________________________________________

          length         length: Numeric value or symbol addressing a
                         fullword. Valid only when buffer is coded as a
                         symbol. Leave blank when coding the buffer parameter
                         as a literal. The macro will calculate the length
                         (see examples).

          ,buffer        buffer: ISPF ISPEXEC service keywords enclosed in
                         apostrophes or a symbol addressing a buffer area.
                         When coding a symbol, the length field (above) is
                         required.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 34
      ISPEXEC



      _________________________________________________________________________

      Example 1:         Operation: Display the panel PANEL1.

                                 ISPEXEC ,'DISPLAY PANEL(PANEL1)'

      Example 2:         Operation: Issue the ISPF CONTROL command to inhibit
                         split screen operation.

                                 ISPEXEC 80,THEBUFER
                         THEBUFER DC   CL80'CONTROL SPLIT DISABLE'

      Example 3:         Operation: Issue the ISPF CONTROL command to inhibit
                         split screen operation. This is the same as above.
                         In this example, the assembler will calculate the
                         length of the select buffer.

                                 ISPEXEC BUFLEN,BUFTEXT
                         BUFTEXT DC   C'CONTROL SPLIT DISABLE'
                         TEMP    EQU  *-BUFTEXT
                         BUFLEN  DC   A(TEMP)
1


      ISPF Dialog Manager Assembler Macros                               Page 35
      ISREDIT



      _____________
      |           |
      |           |
      |  ISREDIT  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede ISREDIT.
      ISREDIT
      b                  one or more blanks must follow ISREDIT.

      _________________________________________________________________________

          length         length: Numeric value or symbol addressing a
                         fullword. Valid only when buffer is coded as a
                         symbol. Leave blank when coding the buffer parameter
                         as a literal. The macro will calculate the length
                         (see examples).

          ,buffer        buffer: ISPF ISREDIT service keywords enclosed in
                         apostrophes or a symbol addressing a buffer area.
                         When coding a symbol, the length field (above) is
                         required.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Issue equivalent to CLIST ISREDIT MACRO.

                                 ISREDIT ,'MACRO (FLD1 FLD2) NOPROCESS'
1


      ISPF Dialog Manager Assembler Macros                               Page 36
      LOG



      _________
      |       |
      |       |
      |  LOG  |
      |       |
      |_______|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LOG.
      LOG
      b                  one or more blanks must follow LOG.

      _________________________________________________________________________

      MSG=msg            msg: Message name enclosed in apostrophes or a
                         symbol addressing an 8 byte message name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Log the message called MSG001.

                                 LOG MSG='MSG001'

      Example 2:         Operation: Log the message called MSG001. Same as
                         above example using a symbol to address the message
                         name.

                                 LOG MSG=MESSAGE
                         MESSAGE DC   CL8'MSG001'
1


      ISPF Dialog Manager Assembler Macros                               Page 37
      SELECT



      ____________
      |          |
      |          |
      |  SELECT  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede SELECT.
      SELECT
      b                  one or more blanks must follow SELECT.

      _________________________________________________________________________

          length         length: Numeric value or symbol addressing a
                         fullword. Valid only when buffer is coded as a
                         symbol. Leave blank when coding the buffer parameter
                         as a literal. The macro will calculate the length
                         (see examples).

          ,buffer        buffer: ISPF Select service keywords enclosed in
                         apostrophes or a symbol addressing a buffer area.
                         When coding a symbol, the length field (above) is
                         required.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 38
      SELECT



      _________________________________________________________________________

      Example 1:         Operation: Select the program called PGMA1.

                                 SELECT  ,'PGM(PGMA1)'

      Example 2:         Operation: Invoke the TSO command XYZ and specify
                         that a new shared pool is to be created.

                                 SELECT 80,SELBUF
                         SELBUF  DC   CL80'CMD(XYZ) NEWPOOL'

      Example 3:         Operation: Invoke the TSO command XYZ and specify
                         that a new shared pool is to be created. This is the
                         same as above. In this example, the assembler will
                         calculate the length of the select buffer.

                                 SELECT BUFLEN,BUFTEXT
                         BUFTEXT DC   C'CMD(XYZ) NEWPOOL'
                         TEMP    EQU  *-BUFTEXT
                         BUFLEN  DC   A(TEMP)
1


      ISPF Dialog Manager Assembler Macros                               Page 39
      SETMSG



      ____________
      |          |
      |          |
      |  SETMSG  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede SETMSG.
      SETMSG
      b                  one or more blanks must follow SETMSG.

      _________________________________________________________________________

      MSG=msg            msg: Message name enclosed in apostrophes or a symbol
                         addressing an 8 byte message name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Add message ABC001 to the next panel
                         displayed to the user.

                                 SETMSG MSG='ABC001'

      Example 2:         Operation: Add message ISPX001 to the next panel
                         displayed to a user. Use the execute form of the
                         macro.

                                 SETMSG MSG='ISPX001',MF=E
1


      ISPF Dialog Manager Assembler Macros                               Page 40
      TBADD



      ___________
      |         |
      |         |
      |  TBADD  |
      |         |
      |_________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBADD.
      TBADD
      b                  one or more blanks must follow TBADD.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,SAVE=names    names: Name-list enclosed in apostrophes or a symbol
                         addressing a name-list.

          ,ORDER=keyw    ORDER: Keyword ORDER enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Add a row to the table TEMPTAB.

                                 TBADD 'TEMPTAB'

      Example 2:         Operation: Add a row to the table TEMPTAB. Use the
                         execute form of the macro. In addition, specify the
                         variable MYVAR as an extension variable and request
                         that the row be added in sort order.

                                 SETMSG TABLE,SAVE='(MYVAR)',            X
                                     ORDER=ORDER,MF=E
                         TABLE   DC   CL8'TEMPTAB'
                         ORDER   DC   CL8'ORDER'
1


      ISPF Dialog Manager Assembler Macros                               Page 41
      TBBOTTOM



      ______________
      |            |
      |            |
      |  TBBOTTOM  |
      |            |
      |____________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBBOTTOM.
      TBBOTTOM
      b                  one or more blanks must follow TBBOTTOM.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,SAVENAME=sn   sn: Variable name enclosed in apostrophes or a symbol
                         addressing an 8 byte variable name.

          ,ROWID=rn      rn: Variable name enclosed in apostrophes or a symbol
                         addressing an 8 byte variable name.

          ,NOREAD=keyw   keyw: Keyword NOREAD enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,POSITION=pos  pos: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 42
      TBBOTTOM



      _________________________________________________________________________

      Example 1:         Operation: Set the CRP of MYTAB to the bottom. In
                         addition, store the CRP into variable XYZ.

                                 TBBOTTOM TABLE,POSITION='XYZ'
                         TABLE   DC   CL8'MYTABL'

      Example 2:         Operation: Set the CRP of MYTAB to the bottom.
                         Requests that no variables are to be
                         retrieved.

                                 TBBOTTOM 'MYTAB',SAVE=VARNAME,          X
                                     NOREAD='NOREAD'
                         VARNAME DC   CL8' '
1


      ISPF Dialog Manager Assembler Macros                               Page 43
      TBCLOSE



      _____________
      |           |
      |           |
      |  TBCLOSE  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBCLOSE.
      TBCLOSE
      b                  one or more blanks must follow TBCLOSE.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,REPLCOPY      REPLCOPY: Optional keyword coded as shown.
          ,NEWCOPY       NEWCOPY:  Optional keyword coded as shown.
                         Do not enclose in apostrophes.
                         Select only one of these keywords.
                         Default: see ISPF Dialog Management Services manual.

          ,NAME=,alt     alt: Member name enclosed in apostrophes or a symbol
                         addressing an 8 byte member name.

          ,PAD=percent   percent: Numeric value or symbol addressing a
                         fullword.

          ,LIBRARY=lib   lib: DDname enclosed in apostrophes or a symbol
                         addressing an 8 byte DDname.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 44
      TBCLOSE



      _________________________________________________________________________

      Example 1:         Operation: Close the table. Save the member in the
                         file allocated to OUTPUT.

                                 TBCLOSE TABLE,LIBRARY='OUTPUT'
                         TABLE   DC   CL8'MYTABL'

      Example 2:         Operation: Close the table as a new member.
                         Pad the member by 10 percent.

                                 TBCLOSE 'MYTAB',NEWCOPY,PAD=10
1


      ISPF Dialog Manager Assembler Macros                               Page 45
      TBCREATE



      ______________
      |            |
      |            |
      |  TBCREATE  |
      |            |
      |____________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBCREATE.
      TBCREATE
      b                  one or more blanks must follow TBCREATE.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,KEYS=keylist  keylist: Name-list enclosed in apostrophes or a
                         symbol addressing a name-list.

          ,NAMES=names   names: Name-list enclosed in apostrophes or a symbol
                         addressing a name-list.

          ,WRITE=keyw    keyw: Keyword WRITE or NOWRITE enclosed in apos-
                         trophes or a symbol addressing an 8 byte keyword.

          ,REPLACE=kyw   kyw: Keyword REPLACE enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,LIBRARY=lib   lib: DDname enclosed in apostrophes or a symbol
                         addressing an 8 byte DDname.

          ,SHARE=shr     shr: Keyword SHARE enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 46
      TBCREATE



      _________________________________________________________________________

      Example 1:         Operation: Create a table called MYTAB. The table is
                         keyed by EMPLNO. The table contains the variable
                         NAME, ADDRESS and CITY.

                                 TBCREATE 'MYTAB',KEYS=KEYLIST,          X
                                     NAMES='(NAME ADDRESS CITY)',        X
                                     NOWRITE='NOWRITE'
                         KEYLIST DC    C'(EMPLNO)'

      Example 2:         Operation: Create a permanent table called MYTAB
                         with only the variable XYZ in it. There are no keys.

                                 TBCREATE 'MYTAB',NAMES='(XYZ)'
1


      ISPF Dialog Manager Assembler Macros                               Page 47
      TBDELETE



      ______________
      |            |
      |            |
      |  TBDELETE  |
      |            |
      |____________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBDELETE.
      TBDELETE
      b                  one or more blanks must follow TBDELETE.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Delete the current row from table XYZ.

                                 TBDELETE 'XYZ'
1


      ISPF Dialog Manager Assembler Macros                               Page 48
      TBDISPL



      _____________
      |           |
      |           |
      |  TBDISPL  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBDISPL.
      TBDISPL
      b                  one or more blanks must follow TBDISPL.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,PANEL=panel   panel: Panel enclosed in apostrophes or a symbol
                         addressing an 8 byte panel name.

          ,MSG=msg       msg: Message name enclosed in apostrophes or a symbol
                         addressing an 8 byte message name.

          ,CURSOR=field  field: Field name enclosed in apostrophes or a symbol
                         addressing an 8 byte field name.

          ,CSRROW=rownum rownum: Numeric value or symbol addressing a
                         fullword.

          ,CSRPOS=csrpos csrpos: Numeric value or symbol addressing a
                         fullword.

          ,AUTOSEL=keyw  keyw: Keywords YES or NO enclosed in apostrophes or
                         a symbol addressing the keyword.

          ,POSITION=pos  pos: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,ROWID=rowid   rowid: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 49
      TBDISPL



      _________________________________________________________________________

      Example 1:         Operation: Display table TAB1 using panel PAN1.  MSG
                         will contain the name of any error messages that
                         should be issuted.

                                 TBDISPL 'TAB1',PANEL='PAN1',MSG=MSG
                         MSG     DS    CL8
1


      ISPF Dialog Manager Assembler Macros                               Page 50
      TBEND



      ___________
      |         |
      |         |
      |  TBEND  |
      |         |
      |_________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBEND.
      TBEND
      b                  one or more blanks must follow TBEND.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: End the table TAB1.

                                 TBEND 'TAB1'
1


      ISPF Dialog Manager Assembler Macros                               Page 51
      TBERASE



      _____________
      |           |
      |           |
      |  TBERASE  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBERASE.
      TBERASE
      b                  one or more blanks must follow TBERASE.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,LIBRARY=lib   lib: DDname enclosed in apostrophes or a symbol
                         addressing an 8 byte DDname.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Erase member XYZ.

                                 TBERASE MEMNAME
                         MEMNAME DC    CL8'XYZ'
1


      ISPF Dialog Manager Assembler Macros                               Page 52
      TBEXIST



      _____________
      |           |
      |           |
      |  TBEXIST  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBEXIST.
      TBEXIST
      b                  one or more blanks must follow TBEXIST.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Determine if a row exists in a keyed
                         table MYTAB.

                                 TBEXIST 'MYTAB'
1


      ISPF Dialog Manager Assembler Macros                               Page 53
      TBGET



      ___________
      |         |
      |         |
      |  TBGET  |
      |         |
      |_________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBGET.
      TBGET
      b                  one or more blanks must follow TBGET.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,SAVENAME=var  var: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,ROWID=rowid   rowid: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,NOREAD=keyw   keyw: Keyword NOREAD enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,POSITION=pos  pos: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Get a row in the table MYTAB. Use the
                         execute form of the macros.

                                 TBGET 'MYTAB',MF=E
1


      ISPF Dialog Manager Assembler Macros                               Page 54
      TBMOD



      ___________
      |         |
      |         |
      |  TBMOD  |
      |         |
      |_________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBMOD.
      TBMOD
      b                  one or more blanks must follow TBMOD.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,SAVE=namelist namelist: Name-list enclosed in apostrophes or a
                         symbol addressing a name-list.

          ,ORDER=keyw    keyw: Keyword ORDER enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Modify a row in the table MYTAB. The
                         variables XY and ZZ are extension variables. Two
                         coding examples follow. The first generates all
                         storage constants for you.

                                 TBMOD 'MYTAB',SAVE='(XY ZZ)'

                                 TBMOD TABLE,SAVE=NAMES
                         TABLE   DC   CL8'MYTAB'
                         NAMES   DC   C'(XY ZZ)'
1


      ISPF Dialog Manager Assembler Macros                               Page 55
      TBOPEN



      ____________
      |          |
      |          |
      |  TBOPEN  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBOPEN.
      TBOPEN
      b                  one or more blanks must follow TBOPEN.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,WRITE=keyw    WRITE: Keywords WRITE or NOWRITE enclosed in apos-
                         trophes or a symbol addressing the keyword.

          ,LIBRARY=lib   lib: DDname enclosed in apostrophes or a symbol
                         addressing an 8 byte DDname.

          ,SHARE=keyw2   keyw2: Keyword SHARE enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Open the table named MYTAB for read only
                         and allow sharing between split screens.

                                 TBOPEN 'MYTAB',WRITE='NOWRITE',         X
                                     SHARE='SHARE'
1


      ISPF Dialog Manager Assembler Macros                               Page 56
      TBPUT



      ___________
      |         |
      |         |
      |  TBPUT  |
      |         |
      |_________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBPUT.
      TBPUT
      b                  one or more blanks must follow TBPUT.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,SAVE=namelist namelist: Name-list enclosed in apostrophes or a
                         symbol addressing a name-list.

          ,ORDER=keyw    keyw: Keyword ORDER enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Update the current row in the table MYTAB.

                                 TBPUT 'MYTAB'
1


      ISPF Dialog Manager Assembler Macros                               Page 57
      TBQUERY



      _____________
      |           |
      |           |
      |  TBQUERY  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBQUERY.
      TBQUERY
      b                  one or more blanks must follow TBQUERY.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,KEYS=keyname  keyname: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,NAMES=varname varname: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,ROWNUM=rownum rownum: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,KEYNUM=keynum keynum: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,NAMENUM=namen namen: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,POSITION=crp  crp: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Return the current CRP for table XYZ in
                         variable CRPVAR.

                                 TBQUERY 'XYZ',POSITION='CRPVAR'
1


      ISPF Dialog Manager Assembler Macros                               Page 58
      TBSARG



      ____________
      |          |
      |          |
      |  TBSARG  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBSARG.
      TBSARG
      b                  one or more blanks must follow TBSARG.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,ARGLIST=names names: Name-list enclosed in apostrophes or a symbol
                         addressing a name-list.

          ,DIRECTION=dir dir: Keywords NEXT or PREVIOUS enclosed in apos-
                         trophes or a symbol addressing the keyword.

          ,NAMECOND=nc   nc: Condition list enclosed in apostrophes or a
                         symbol addressing a condition list.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Set a search argument in table MYTAB.
                         Scan the table backwards.

                                 TBSARG 'MYTAB',DIRECTION='PREVIOUS'
1


      ISPF Dialog Manager Assembler Macros                               Page 59
      TBSAVE



      ____________
      |          |
      |          |
      |  TBSAVE  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBSAVE.
      TBSAVE
      b                  one or more blanks must follow TBSAVE.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,REPLCOPY      REPLCOPY: Optional keyword coded as shown.
          ,NEWCOPY       NEWCOPY:  Optional keyword coded as shown.
                         Do not enclose in apostrophes.
                         Select only one of these keywords.
                         Default: see ISPF Dialog Management Services manual.

          ,NAME=altname  altname: Member name enclosed in apostrophes or a
                         symbol addressing an 8 byte member name.

          ,PAD=percent   percent: Numeric value or symbol addressing a
                         fullword.

          ,LIBRARY=lib   lib: DDname enclosed in apostrophes or a symbol
                         addressing an 8 byte DDname.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Save the current table MYTAB. If it
                         currently exists, replace it with this version and
                         pad 25 percent space to the new version. Use the
                         execute form of the macro.

                                 TBSAVE 'MYTAB',REPLCOPY,PAD=PERCENT
                         PERCENT DC    F'25'
1


      ISPF Dialog Manager Assembler Macros                               Page 60
      TBSCAN



      ____________
      |          |
      |          |
      |  TBSCAN  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBSCAN.
      TBSCAN
      b                  one or more blanks must follow TBSCAN.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,ARGLIST=args  args: Name-list enclosed in apostrophes or a symbol
                         addressing a name-list.

          ,SAVENAME=sn   sn: Variable name enclosed in apostrophes or a symbol
                         addressing an 8 byte variable name.

          ,ROWID=rowid   rowid: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,DIRECTION=dir dir: Keywords NEXT or PREVIOUS enclosed in apos-
                         trophes or a symbol addressing the keyword.

          ,NOREAD=keyw   keyw: Keyword NOREAD enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,POSITION=pos  pos: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,CONDLIST=cl   cl: Condition list enclosed in apostrophes or a
                         symbol addressing a condition list.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 61
      TBSCAN



      _________________________________________________________________________

      Example 1:         Operation: Scan the table MYTAB using the variables
                         XY and ZZ. Default all other values. Use the execute
                         form of the macro.

                                 TBSCAN 'MYTAB',SAVE='(XY ZZ)',MF=E
1


      ISPF Dialog Manager Assembler Macros                               Page 62
      TBSKIP



      ____________
      |          |
      |          |
      |  TBSKIP  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBSKIP.
      TBSKIP
      b                  one or more blanks must follow TBSKIP.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,NUMBER=number number: Numeric value or symbol addressing a
                         fullword. For negative values, the symbol form must
                         be used.

          ,SAVENAME=sn   sn: Variable name enclosed in apostrophes or a symbol
                         addressing an 8 byte variable name.

          ,ROWID=rowid   rowid: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,ROW=row       row: Numeric value or symbol addressing a fullword.

          ,NOREAD=keyw   keyw: Keyword NOREAD enclosed in apostrophes or a
                         symbol addressing the keyword.

          ,POSITION=pos  pos: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Skip forward 2 rows in table MYTAB.

                                 TBSKIP 'MYTAB',NUMBER=2
1


      ISPF Dialog Manager Assembler Macros                               Page 63
      TBSORT



      ____________
      |          |
      |          |
      |  TBSORT  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBSORT.
      TBSORT
      b                  one or more blanks must follow TBSORT.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

      ,FIELDS=sort-list  sort-list: List of Sort keys as described in the
                         ISPF Dialog Manager manual. The actual list may be
                         specified enclosed in apostrophes or a symbol that
                         addresses a sort-list may be specified.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Sort table ABC on fields ZIP and Name.

                                 TBSORT 'ABC',                          X
                                         FIELDS='(ZIP,N,A,NAME,C,A)
1


      ISPF Dialog Manager Assembler Macros                               Page 64
      TBSTATS



      _____________
      |           |
      |           |
      |  TBSTATS  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBSTATS.
      TBSTATS
      b                  one or more blanks must follow TBSTATS.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,CDATE=cdate   cdate: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,CTIME=ctime   ctime: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,UDATE=udate   udate: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,UTIME=utime   utime: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,USER=user     user: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,ROWCREAT=rowv rowv: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,ROWCURR=rowcu rowcu: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,ROWUPD=rowupd rowupd: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,TABLEUPD=tabu tabu: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,SERVICE=serv  serv: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,RETCODE=rc    rc: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.
1


      ISPF Dialog Manager Assembler Macros                               Page 65
      TBSTATS



          ,STATUS1=s1    s1: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,STATUS2=s2    s2: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,STATUS3=s3    s3: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,LIBRARY=dd    dd: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Determine if table ABC is open in write
                         mode.

                                 TBSTATS 'ABC',STATUS1='ST1',           X
                                       STATUS2='ST2'
1


      ISPF Dialog Manager Assembler Macros                               Page 66
      TBTOP



      ___________
      |         |
      |         |
      |  TBTOP  |
      |         |
      |_________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBTOP.
      TBTOP
      b                  one or more blanks must follow TBTOP.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Set the current CRP of table MYTAB to top
                         of the table.

                                 TBTOP TABLE
                         TABLE   DC    CL8'MYTAB'
1


      ISPF Dialog Manager Assembler Macros                               Page 67
      TBVCLEAR



      ______________
      |            |
      |            |
      |  TBVCLEAR  |
      |            |
      |____________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede TBVCLEAR.
      TBVCLEAR
      b                  one or more blanks must follow TBVCLEAR.

      _________________________________________________________________________

      table              table: Table name enclosed in apostrophes or a symbol
                         addressing an 8 byte table name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Clear the current row in table MYTAB.

                                 TBVCLEAR 'MYTAB'
1


      ISPF Dialog Manager Assembler Macros                               Page 68
      VCOPY



      ___________
      |         |
      |         |
      |  VCOPY  |
      |         |
      |_________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede VCOPY.
      VCOPY
      b                  one or more blanks must follow VCOPY.

      _________________________________________________________________________

      name-list          name-list: Name-list enclosed in apostrophes or a
                         symbol addressing a name-list.

      ,(lengths)         (lengths): Numeric value or a list of numeric values;
                         or a symbol addressing an array of fullwords.

                         NOTE: The VCOPY service updates this array to reflect
                         the length of data copied! This macro is not reusable
                         when coding numeric values in place of a symbol.

      ,value-array       value-array: Symbol addressing storage area mapping
                         the variables in the name-list.

          ,MOVE          MOVE: Optional keyword coded as shown.
          ,LOCATE        LOCATE:  Optional keyword coded as shown.
                         Do not enclose in apostrophes.
                         Select only one of these keywords.
                         Default: see ISPF Dialog Management Services manual.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 69
      VCOPY



      _________________________________________________________________________

      Example 1:         Operation: Copy the variable ZUSER from the ISPF
                         pools into program storage. Copy only the address
                         of the variable.

                                 VCOPY '(ZUSER)',F4,ZUSERADD,LOCATE
                         ZUSERADD DS   A
                         F4       DC   F'4'
1


      ISPF Dialog Manager Assembler Macros                               Page 70
      VDEFINE



      _____________
      |           |
      |           |
      |  VDEFINE  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede VDEFINE.
      VDEFINE
      b                  one or more blanks must follow VDEFINE.

      _________________________________________________________________________

      name-list          name-list: Name-list enclosed in apostrophes or a
                         symbol addressing a name-list.

      ,storage           storage: Symbol addressing storage area mapping the
                         variables in the name-list.

      ,CHAR              CHAR: Optional keyword coded as shown.
      ,FIXED             FIXED:  Optional keyword coded as shown.
      ,BIT               BIT:  Optional keyword coded as shown.
      ,HEX               HEX:  Optional keyword coded as shown.
      ,USER              USER:  Optional keyword coded as shown.
                         Do not enclose in apostrophes.
                         Select only one of these keywords.
                         Default: see ISPF Dialog Management Services manual.

      ,length            length: Numeric value or symbol addressing a
                         fullword.

          ,options       options: Option-list enclosed in apostrophes or a
                         symbol addressing an option list.

          ,userdata      userdata: Symbol addressing the user exit.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.
1


      ISPF Dialog Manager Assembler Macros                               Page 71
      VDEFINE



      _________________________________________________________________________

      Example 1:         Operation: VDEFINE the variables XX and UYZ. They
                         are character format. They are 10 bytes in length.
                         Request the COPY option of the Vdefine service.

                                 VDEFINE '(XX UYZ)',WORKAREA,            X
                                       CHAR,10,'(COPY)'
                         WORKAREA EQU  *
                         XX       DC   CL10' '
                         UYZ      DC   CL10' '
1


      ISPF Dialog Manager Assembler Macros                               Page 72
      VDELETE



      _____________
      |           |
      |           |
      |  VDELETE  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede VDELETE.
      VDELETE
      b                  one or more blanks must follow VDELETE.

      _________________________________________________________________________

      name-list          name-list: Name-list enclosed in apostrophes or a
                         symbol addressing a name-list.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: VDELETE variables XX and UYZ.

                                 VDELETE '(XX UYZ)'
1


      ISPF Dialog Manager Assembler Macros                               Page 73
      VGET



      __________
      |        |
      |        |
      |  VGET  |
      |        |
      |________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede VGET.
      VGET
      b                  one or more blanks must follow VGET.

      _________________________________________________________________________

      name-list          name-list: Name-list enclosed in apostrophes or a
                         symbol addressing a name-list.

          ,ASIS          ASIS: Optional keyword coded as shown.
          ,SHARED        SHARED: Optional keyword coded as shown.
          ,PROFILE       PROFILE: Optional keyword coded as shown.
                         Do not enclose in apostrophes.
                         Select only one of these keywords.
                         Default: see ISPF Dialog Management Services manual.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: VGET variables XX and UYZ from the profile
                         pool.

                                 VGET '(XX UYZ)',PROFILE
1


      ISPF Dialog Manager Assembler Macros                               Page 74
      VPUT



      __________
      |        |
      |        |
      |  VPUT  |
      |        |
      |________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede VPUT.
      VPUT
      b                  one or more blanks must follow VPUT.

      _________________________________________________________________________

      name-list          name-list: Name-list enclosed in apostrophes or a
                         symbol addressing a name-list.

          ,ASIS          ASIS: Optional keyword coded as shown.
          ,SHARED        SHARED: Optional keyword coded as shown.
          ,PROFILE       PROFILE: Optional keyword coded as shown.
                         Do not enclose in apostrophes.
                         Select only one of these keywords.
                         Default: see ISPF Dialog Management Services manual.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: VPUT variables XX and UYZ into the profile
                         pool.

                                 VPUT '(XX UYZ)',PROFILE
1


      ISPF Dialog Manager Assembler Macros                               Page 75
      VREPLACE



      ______________
      |            |
      |            |
      |  VREPLACE  |
      |            |
      |____________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede VREPLACE.
      VREPLACE
      b                  one or more blanks must follow VREPLACE.

      _________________________________________________________________________

      name-list          name-list: Name-list enclosed in apostrophes or a
                         symbol addressing a name-list.

      ,(lengths)         (lengths): Numeric value or a list of numeric values;
                         or a symbol addressing an array of fullwords.

      ,value-array       value-array: Symbol addressing storage area mapping
                         the variables in the name-list.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: VREPLACE variables XX and UYZ into the
                         function pool.

                                 VREPLACE '(XX UYZ)',(10,5),WORKAREA
                         WORKAREA EQU *
                         XX       DS  CL10
                         UYZ      DS  CL5
1


      ISPF Dialog Manager Assembler Macros                               Page 76
      VRESET



      ____________
      |          |
      |          |
      |  VRESET  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede VRESET.
      VRESET
      b                  one or more blanks must follow VRESET.

      _________________________________________________________________________

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Reset all variables in the current
                         function pool.

                                 VRESET ,
1


      ISPF Dialog Manager Assembler Macros                               Page 77










      _________________________________________________________________________
      |                                                                       |
      |                                                                       |
      |     ISPF Dialog Manager Assembler Macros - Library Access Services    |
      |                              Version 2.0                              |
      |                                                                       |
      |_______________________________________________________________________|
1


      ISPF Dialog Manager Assembler Macros                               Page 78
      LMCLOSE



      _____________
      |           |
      |           |
      |  LMCLOSE  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMCLOSE.
      LMCLOSE
      b                  one or more blanks must follow LMCLOSE.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid name enclosed in apostrophes or a
                         symbol addressing an 8 byte dataid name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Close the dataid found at symbol DATAID.

                                 LMCLOSE DATAID=DATAID
                         DATAID  DS    CL8
1


      ISPF Dialog Manager Assembler Macros                               Page 79
      LMERASE



      _____________
      |           |
      |           |
      |  LMERASE  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMERASE.
      LMERASE
      b                  one or more blanks must follow LMERASE.

      _________________________________________________________________________

      PROJECT=project    project: Project name enclosed in apostrophes or a
                         symbol addressing an 8 byte project name.

      ,GROUP=group       group: Group name enclosed in apostrophes or a
                         symbol addressing an 8 byte group name.

      ,TYPE=type         type: Type name enclosed in apostrophes or a
                         symbol addressing an 8 byte type name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Erase the file called 'A.B.C'

                                 LMERASE PROJECT='A',GROUP='B',TYPE='C'
1


      ISPF Dialog Manager Assembler Macros                               Page 80
      LMFREE



      ____________
      |          |
      |          |
      |  LMFREE  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMFREE.
      LMFREE
      b                  one or more blanks must follow LMFREE.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid name enclosed in apostrophes or a
                         symbol addressing an 8 byte dataid name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Free the dataid found at symbol DATAID.

                                 LMFREE DATAID=DATAID
                         DATAID  DS    CL8
1


      ISPF Dialog Manager Assembler Macros                               Page 81
      LMGET



      ___________
      |         |
      |         |
      |  LMGET  |
      |         |
      |_________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMGET.
      LMGET
      b                  one or more blanks must follow LMGET.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid name enclosed in apostrophes or a
                         symbol addressing an 8 byte dataid.

      ,MODE=mode         mode: Mode enclosed in apostrophes or a symbol
                         addressing an 8 byte mode.

      ,DATALOC=dataloc   dataloc: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

      ,DATALEN=datalen   datalen: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

      ,MAXLEN=maxlen     maxlen: Numeric value or a symbol addressing a
                         fullword.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Get the record for dataid ABC. The record
                         should be stored in variable REC and the length of
                         the record should be stored in variable RECLEN. The
                         largest amount of data retrieved should be 80 bytes.

                                 LMGET DATAID='ABC',MODE='INVAR',        X
                                       DATALOC='REC',DATALEN='RECLEN',   X
                                       MAXLEN=80
1


      ISPF Dialog Manager Assembler Macros                               Page 82
      LMINIT



      ____________
      |          |
      |          |
      |  LMINIT  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMINIT.
      LMINIT
      b                  one or more blanks must follow LMINIT.

      _________________________________________________________________________

      DATAID=dataid      dataid: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,PROJECT=proj  proj: Project name enclosed in apostrophes or a
                         symbol addressing an 8 byte project name.

          ,GROUP1=g1     g1: Group name enclosed in apostrophes or a symbol
                         addressing an 8 byte group name.

          ,GROUP2=g2     g2: Group name enclosed in apostrophes or a symbol
                         addressing an 8 byte group name.

          ,GROUP3=g3     g3: Group name enclosed in apostrophes or a symbol
                         addressing an 8 byte group name.

          ,GROUP4=g4     g4: Group name enclosed in apostrophes or a symbol
                         addressing an 8 byte group name.

          ,TYPE=type     type: Type name enclosed in apostrophes or a symbol
                         addressing an 8 byte type name.

          ,DATASET=dsn   dsn: Dataset name enclosed in apostrophes or a
                         symbol addressing a 56 byte dataset name.

          ,DDNAME=ddname ddname: DDname name enclosed in apostrophes or a
                         symbol addressing an 8 byte DDname name.

          ,VOLUME=vol    vol: Volser enclosed in apostrophes or a symbol
                         addressing a 6 byte volser.

          ,PASSWORD=pass pass: Password enclosed in apostrophes or a symbol
                         addressing an 8 byte password.

          ,ENQ=enq       enq: Enq type enclosed in apostrophes or a symbol
                         addressing an 8 byte enq type.
1


      ISPF Dialog Manager Assembler Macros                               Page 83
      LMINIT



          ,ORG=orgvar    orgvar: Variable enclosed in apostrophes or a symbol
                         addressing an 8 byte variable name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Issue an LMINIT for the libraries that are
                         currently allocated to ISPPLIB.

                                 LMINIT DATAID='PLIB',DDNAME='ISPPLIB'

      Example 2:         Operation: Invoke LMINIT for the dataset A.B.C. Use
                         the execute form of the macro.

                                 LMINIT DATAID='DSNID',DATASET=DSNAME,MF=E
                         DSNAME  DC   CL56'A.B.C'
1


      ISPF Dialog Manager Assembler Macros                               Page 84
      LMMADD



      ____________
      |          |
      |          |
      |  LMMADD  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMMADD.
      LMMADD
      b                  one or more blanks must follow LMMADD.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid enclosed in apostrophes or a symbol
                         addressing an 8 byte dataid.

          ,MEMBER=mem    mem: Member name enclosed in apostrophes or a symbol
                         addressing an 8 byte member name.

          ,STATS=stats   stats: YES or NO enclosed in apostrophes or a symbol
                         addressing an 8 byte field containing YES or NO.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Add member 'XYZ' to file.

                                 LMMADD DATAID='ABC',MEMBER='XYZ'
1


      ISPF Dialog Manager Assembler Macros                               Page 85
      LMMDEL



      ____________
      |          |
      |          |
      |  LMMDEL  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMMDEL.
      LMMDEL
      b                  one or more blanks must follow LMMDEL.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid enclosed in apostrophes or a symbol
                         addressing an 8 byte dataid.

          ,MEMBER=mem    mem: Member name enclosed in apostrophes or a symbol
                         addressing an 8 byte member name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Delete member 'XYZ'.

                                 LMMDEL DATAID='ABC',MEMBER='XYZ'
1


      ISPF Dialog Manager Assembler Macros                               Page 86
      LMMFIND



      _____________
      |           |
      |           |
      |  LMMFIND  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMMFIND.
      LMMFIND
      b                  one or more blanks must follow LMMFIND.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid enclosed in apostrophes or a symbol
                         addressing an 8 byte dataid.

          ,MEMBER=mem    mem: Member name enclosed in apostrophes or a symbol
                         addressing an 8 byte member name.

          ,LOCK='LOCK'   'LOCK': LOCK parameter enclosed in apostrophes as
                         shown.

          ,LRECL=lrecl   lrecl: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,RECFM=recfm   recfm: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,GROUP=group   group: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,STATS=stats   stats: YES or NO enclosed in apostrophes or a symbol
                         addressing an 8 byte field containing YES or NO.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Check to see if member XYZ exists.

                                 LMMFIND DATAID='ABC',MEMBER='XYZ'
1


      ISPF Dialog Manager Assembler Macros                               Page 87
      LMMLIST



      _____________
      |           |
      |           |
      |  LMMLIST  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMMLIST.
      LMMLIST
      b                  one or more blanks must follow LMMLIST.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid enclosed in apostrophes or a symbol
                         addressing an 8 byte dataid.

          ,OPTION=opt    opt: Option enclosed in apostrophes or a symbol
                         addressing an 8 byte option.

          ,MEMBER=memvar memvar: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,STATS=stats   stats: YES or NO enclosed in apostrophes or a symbol
                         addressing an 8 byte field containing YES or NO.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Request a member name be returned in the
                         variable MEMNAME and all ISPF statistics be returned
                         as well.

                                 LMMLIST DATAID='ABC',MEMBER='MEMNAME',  X
                                     STATUS='YES'

      Example 2:         Operation: Request all storage for the previous
                         LMMLIST be freed.

                                 LMMLIST DATAID='ABC',OPTION='FREE'
1


      ISPF Dialog Manager Assembler Macros                               Page 88
      LMMREN



      ____________
      |          |
      |          |
      |  LMMREN  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMMREN.
      LMMREN
      b                  one or more blanks must follow LMMREN.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid enclosed in apostrophes or a symbol
                         addressing an 8 byte dataid.

          ,MEMBER=mem    mem: Member name enclosed in apostrophes or a symbol
                         addressing an 8 byte member name.

          ,NEWNAME=new   new: Member name enclosed in apostrophes or a symbol
                         addressing an 8 byte member name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Rename member 'XYZ' to 'ABC'.

                                 LMMREN DATAID='ABC',MEMBER='XYZ',       X
                                       NEWNAME='ABC'
1


      ISPF Dialog Manager Assembler Macros                               Page 89
      LMMREP



      ____________
      |          |
      |          |
      |  LMMREP  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMMREP.
      LMMREP
      b                  one or more blanks must follow LMMREP.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid enclosed in apostrophes or a symbol
                         addressing an 8 byte dataid.

          ,MEMBER=mem    mem: Member name enclosed in apostrophes or a symbol
                         addressing an 8 byte member name.

          ,STATS=stats   stats: YES or NO enclosed in apostrophes or a symbol
                         addressing an 8 byte field containing YES or NO.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Replace member 'xyz'

                                 LMMREP DATAID='ABC',MEMBER='XYZ',       X
                                       STATS='ON'
1


      ISPF Dialog Manager Assembler Macros                               Page 90
      LMOPEN



      ____________
      |          |
      |          |
      |  LMOPEN  |
      |          |
      |__________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMOPEN.
      LMOPEN
      b                  one or more blanks must follow LMOPEN.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid name enclosed in apostrophes or a
                         symbol addressing an 8 byte Dataid name.

          ,OPTION=INPUT  INPUT: Optional keyword coded as shown.
          ,OPTION=OUTPUT OUTPUT:  Optional keyword coded as shown.
                         Do not enclose in apostrophes.
                         Select only one of these keywords.
                         Default: see ISPF Dialog Management Services manual.

          ,LRECL=lrecl   lrecl: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,RECFM=recfm   recfm: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,ORG=org       org: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Open a dataset for output. The dataid of
                         the dataset is found at symbol DATAID.

                                 LMOPEN DATAID=DATAID,OPTION=OUTPUT
                         DATAID  DS    CL8
1


      ISPF Dialog Manager Assembler Macros                               Page 91
      LMPUT



      ___________
      |         |
      |         |
      |  LMPUT  |
      |         |
      |_________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMPUT.
      LMPUT
      b                  one or more blanks must follow LMPUT.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid name enclosed in apostrophes or a
                         symbol addressing an 8 byte Dataid name.

      ,MODE=mode         mode: Mode enclosed in apostrophes or a symbol
                         addressing an 8 byte mode.

      ,DATALOC=dataloc   dataloc: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

      ,DATALEN=datalen   datalen: Numeric value or symbol address a fullword.

      ,NOBSCAN='NOBSCAN' NOBSCAN: Must be coded as shown in apostrophes.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Write to a dataset the current userid.

                                 LMPUT DATAID=DATAID,DATALOC='ZUSER',    X
                                       DATALEN=8
                         DATAID  DS    CL8
1


      ISPF Dialog Manager Assembler Macros                               Page 92
      LMQUERY



      _____________
      |           |
      |           |
      |  LMQUERY  |
      |           |
      |___________|




      _________________________________________________________________________

          name           name: symbol. Begin "name" in column 1.

      b                  one or more blanks must precede LMQUERY.
      LMQUERY
      b                  one or more blanks must follow LMQUERY.

      _________________________________________________________________________

      DATAID=dataid      dataid: Dataid name enclosed in apostrophes or a
                         symbol addressing an 8 byte dataid name.

          ,PROJECT=proj  proj: Project name enclosed in apostrophes or a
                         symbol addressing an 8 byte project name.

          ,GROUP1=g1     g1: Variable name enclosed in apostrophes or a symbol
                         addressing an 8 byte variable name.

          ,GROUP2=g2     g2: Variable name enclosed in apostrophes or a symbol
                         addressing an 8 byte variable name.

          ,GROUP3=g3     g3: Variable name enclosed in apostrophes or a symbol
                         addressing an 8 byte variable name.

          ,GROUP4=g4     g4: Variable name enclosed in apostrophes or a symbol
                         addressing an 8 byte variable name.

          ,TYPE=type     type: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,DATASET=dsn   dsn: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,DDNAME=ddname ddname: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,VOLUME=vol    vol: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,ENQ=enq       enq: Variable name enclosed in apostrophes or a
                         symbol addressing an 8 byte variable name.

          ,LOAD=address  address: A symbol addressing a 4 byte adcon of the
                         ISPLINK entry address.
1


      ISPF Dialog Manager Assembler Macros                               Page 93
      LMQUERY



                         Default symbol ISPLINK is generated by ISPF macro.

          ,MF=E          MF=E: Requests the execute form of the macro.
          ,MF=(E,parms)  parms: Address of a parmlist for the execute form.
                         Default symbol SPFPARMS is generated by ISPF macro.

      _________________________________________________________________________

      Example 1:         Operation: Query the ddname for dataid ISR00009. The
                         ddname, if any, should be returned in variable "DDN".

                                 LMQUERY DATAID='ISR00009',DDNAME='DDN'
1


      ISPF Dialog Manager Assembler Macros                               Page 94










      _________________________________________________________________________
      |                                                                       |
      |                                                                       |
      |           ISPF Dialog Manager Assembler Macros - Appendices           |
      |                              Version 2.0                              |
      |                                                                       |
      |_______________________________________________________________________|
1


      ISPF Dialog Manager Assembler Macros                               Page 95
      Appendix A - Example Program



      __________________________________
      |                                |
      |                                |
      |  Appendix A - Example Program  |
      |                                |
      |________________________________|




      _________________________________________________________________________


      The following is an example dialog program including macro expansions.  It
      will display a panel called PANLEL1 and do some processing based on the
      display.


        *
        *
        * (standard entry code)
        *
        *
                  ISPF  LOAD                     LOAD THE ISPLINK MODULE
        +         CNOP  0,4                      * GENERATED BY LOAD MACRO *
        +         LA    0,*+8                    LOAD PARAMETER INTO REG 0
        +         B     *+12                     BRANCH AROUND CONSTANT(S)
        +         DC    CL8'ISPLINK'             ENTRY POINT NAME
        +         SR    1,1                      SHOW NO DCB PRESENT
        +         SVC   8
        +         ST    0,ISPLINK                STORE ISPLINK ADDRESS

                  CONTROL ERRORS,CANCEL          SET ISPF ERROR MODE TO CANCEL
        +         B     SPF0003
        +CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
        +ERRORS   DC    CL8'ERRORS'              CONTROL KEYWORD FOR ISPF
        +CANCEL   DC    CL8'CANCEL'              CONTROL KEYWORD FOR ISPF
        +SPF0003  DS    0H
        +         CNOP  0,4
        +         BAL   1,SPFE0003               BRANCH AROUND PARMLIST
        +         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
        +         DC    A(ERRORS)                ADDRESS OF ERRORS OPERAND
        +         DC    A(CANCEL+X'80000000')    ADDRESS OF CANCEL OPERAND
        +SPFE0003 DS    0H
        +         L     15,ISPLINK               GET ISPLINK ENTRY POINT
        +         BALR  14,15                    CALL ISPF

         LOOP     DISPLAY PANEL='PANELA'         DISPLAY PANEL CALLED PANELA
        +LOOP     DS    0H
        +         B     SPF0004
        +DISPLAY  DC    CL8'DISPLAY'             DISPLAY KEYWORD FOR ISPF
        +SPFP0005 DC    CL8'PANELA'              DISPLAY THIS PANEL
        +SPFNULLC DC    CL8' '                   DUMMY ISPF FIELD
        +SPFNULLF DC    F'0'                     DUMMY ISPF FIELD
        +SPF0004  DS    0H
1


      ISPF Dialog Manager Assembler Macros                               Page 96
      Appendix A - Example Program



        +         CNOP  0,4
        +         BAL   1,SPFE0004               BRANCH AROUND PARMLIST
        +         DC    A(DISPLAY)               DISPLAY KEYWORD
        +         DC    A(SPFP0004)              ADDRESS OF GENERATED PANEL
        +         DC    A(SPFNULLC)              DUMMY PARM FOR MSG
        +         DC    A(SPFNULLC)              DUMMY PARM FOR FIELD
        +         DC    A(SPFNULLF+X'80000000')  DUMMY PARM FOR CSRPOS
        +SPFE0004 DS    0H
        +         L     15,ISPLINK               GET ISPLINK ENTRY POINT
        +         BALR  14,15                    CALL ISPF

                  LTR   15,15                    WAS END KEY HIT
                  BNZ   EXITPGM                  IF SO, EXIT PROGRAM

                  CONTROL ERRORS,RETURN          SET ISPF ERROR MODE TO CANCEL
        +         B     SPF0005
        +RETURN   DC    CL8'RETURN'              CONTROL KEYWORD FOR ISPF
        +SPF0005  DS    0H
        +         CNOP  0,4
        +         BAL   1,SPFE0005               BRANCH AROUND PARMLIST
        +         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
        +         DC    A(ERRORS)                ADDRESS OF ERRORS OPERAND
        +         DC    A(RETURN+X'80000000')    ADDRESS OF CANCEL OPERAND
        +SPFE0005 DS    0H
        +         L     15,ISPLINK               GET ISPLINK ENTRY POINT
        +         BALR  14,15                    CALL ISPF

        *
        * (other processing code)
        * (go to display loop)

        *
        *         EXIT  PROGRAM CODE

         EXITPGM  ISPF  DELETE
        +         BAL   0,*+12                   LOAD ADDRESS OF EP SYMBOL
        +         DC    CL8'ISPLINK'             EP SYMBOL
        +         SVC   9                        ISSUE DELETE SVC

        *
        * (standard exit code)

        *
        *         WORKING STORAGE
                  ISPF  PARMS                    GENERATE ISPF WORKING STORAGE
        +ISPLINK  DS    A                        USED FOR ISPLINK ENTRY POINT
1


      ISPF Dialog Manager Assembler Macros                               Page 97
      Appendix B - Using the macros with existing programs



      __________________________________________________________
      |                                                        |
      |                                                        |
      |  Appendix B - Using the macros with existing programs  |
      |                                                        |
      |________________________________________________________|




      _________________________________________________________________________


      The following is an example dialog program.  The ISPLINK entry point is
      already loaded into the address ISPADD.  The parameter-list is already
      coded and labeled PARMLIST.  The execute form of the macro will be used.


        *
        *
        * (regular program code)
        *
        *
                  ISPF  SUPPRESS,LIST=(CONTROL,ERRORS,CANCEL)
                  CONTROL ERRORS,CANCEL,LOAD=ISPADD
        +         CNOP  0,4
        +         BAL   1,SPFE0003               BRANCH AROUND PARMLIST
        +         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
        +         DC    A(ERRORS)                ADDRESS OF ERRORS OPERAND
        +         DC    A(CANCEL+X'80000000')    ADDRESS OF CANCEL OPERAND
        +SPFE0003 DS    0H
        +         L     15,ISPADD                GET ISPLINK ENTRY POINT
        +         BALR  14,15                    CALL ISPF

                  ISPF  SUPPRESS,LIST=DISPLAY
                  DISPLAY PANEL='PANELA',MF=(E,PARMLIST)
        +         B     SPF0004
        +SPFP0005 DC    CL8'PANELA'              DISPLAY THIS PANEL
        +SPFNULLC DC    CL8' '                   DUMMY ISPF FIELD
        +SPFNULLF DC    F'0'                     DUMMY ISPF FIELD
        +SPF0004  DS    0H
        +         LA    14,DISPLAY               GET DISPLAY KEYWORD ADDRESS
        +         LA    15,SPFP0004              GET GENERATED PANEL ADDRESS
        +         LA    0,SPFNULLC               DUMMY PARM FOR MSG
        +         LA    1,SPFNULLC               DUMMY PARM FOR FIELD
        +         STM   14,1,PARMLIST            STORE INTO PARMLIST
        +         LA    14,SPFNULLF              DUMMY PARM FOR CSRPOS
        +         ST    14,PARMLIST+16           STORE INTO PARMLIST
        +         OI    PARMLIST+16,X'80'        MARK LAST PARM
        +         LA    1,PARMLIST               GET PARAMETER LIST ADDRESS
        +         L     15,ISPADD                GET ISPLINK ENTRY POINT
        +         BALR  14,15                    CALL ISPF

./ ADD NAME=@        8512-85095-85095-1207-00429-00429-00000-ISPFDYN
         MACRO
         @     &LETTERS
.* THIS MACRO IS USEFUL FOR INSERTING INTERESTING BLOCK-LETTER
.* COMMENTS INTO YOUR ASSEMBLY PROGRAM.  TRY IT--YOU'LL LIKE IT.
.**********************************************************************
.*
.* AIR FORCE DATA SERVICES CENTER--SYSTEMS SUPPORT DIRECTORATE
.* ROOM 1D987, THE PENTAGON, WASHINGTON, DC 20330
.* TELEPHONE: (AUTOVON) 225-1274/2478/1889
.*     COMMERCIAL (703) 695-1274/2478/1889
.*
.**********************************************************************
.* DATE INSTALLED: 790523
.**********************************************************
.** => CHANGE LOG: ENTER AUTHOR, DATE, SUMMARY OF CHANGE **
.**********************************************************
.* DATE OF LAST CHANGE:
.*
.**********************************************************************
         LCLC  &A(50)
         LCLC  &B(62),&C(62),&D(62),&E(62),&F(62),&G(62)
         LCLA  &I,&J,&K
&B(01)   SETC  'A'
&B(02)   SETC  'B'
&B(03)   SETC  'C'
&B(04)   SETC  'D'
&B(05)   SETC  'E'
&B(06)   SETC  'F'
&B(07)   SETC  'G'
&B(08)   SETC  'H'
&B(09)   SETC  'I'
&B(10)   SETC  'J'
&B(11)   SETC  'K'
&B(12)   SETC  'L'
&B(13)   SETC  'M'
&B(14)   SETC  'N'
&B(15)   SETC  'O'
&B(16)   SETC  'P'
&B(17)   SETC  'Q'
&B(18)   SETC  'R'
&B(19)   SETC  'S'
&B(20)   SETC  'T'
&B(21)   SETC  'U'
&B(22)   SETC  'V'
&B(23)   SETC  'W'
&B(24)   SETC  'X'
&B(25)   SETC  'Y'
&B(26)   SETC  'Z'
&B(27)   SETC  '#'
&B(28)   SETC  ','
&B(29)   SETC  '$'
&B(30)   SETC  '0'
&B(31)   SETC  '1'
&B(32)   SETC  '2'
&B(33)   SETC  '3'
&B(34)   SETC  '4'
&B(35)   SETC  '5'
&B(36)   SETC  '6'
&B(37)   SETC  '7'
&B(38)   SETC  '8'
&B(39)   SETC  '9'
&B(40)   SETC  '@'
&B(41)   SETC  '%'
&B(42)   SETC  '*'
&B(43)   SETC  '/'
&B(44)   SETC  '-'
&B(45)   SETC  '('
&B(46)   SETC  ')'
&B(47)   SETC  '&&'
&B(48)   SETC  '+'
&B(49)   SETC  '_'
&B(50)   SETC  '¢'
&B(51)   SETC  '|'
&B(52)   SETC  '>'
&B(53)   SETC  ':'
&B(54)   SETC  ';'
&B(55)   SETC  '.'
&B(56)   SETC  '?'
&B(57)   SETC  '"'
&B(58)   SETC  '='
&B(59)   SETC  '!'
&B(60)   SETC  '<'
&B(61)   SETC  '¬'
&B(62)   SETC  ' '
&C(01)   SETC  '  A  '
&D(01)   SETC  ' A A '
&E(01)   SETC  'A   A'
&F(01)   SETC  'AAAAA'
&G(01)   SETC  'A   A'
&C(02)   SETC  'BBBB '
&D(02)   SETC  'B   B'
&E(02)   SETC  'BBBB '
&F(02)   SETC  'B   B'
&G(02)   SETC  'BBBB '
&C(03)   SETC  ' CCCC'
&D(03)   SETC  'C    '
&E(03)   SETC  'C    '
&F(03)   SETC  'C    '
&G(03)   SETC  ' CCCC'
&C(04)   SETC  'DDDD '
&D(04)   SETC  'D   D'
&E(04)   SETC  'D   D'
&F(04)   SETC  'D   D'
&G(04)   SETC  'DDDD '
&C(05)   SETC  'EEEEE'
&D(05)   SETC  'E    '
&E(05)   SETC  'EEEE '
&F(05)   SETC  'E    '
&G(05)   SETC  'EEEEE'
&C(06)   SETC  'FFFFF'
&D(06)   SETC  'F    '
&E(06)   SETC  'FFFF '
&F(06)   SETC  'F    '
&G(06)   SETC  'F    '
&C(07)   SETC  ' GGGG'
&D(07)   SETC  'G    '
&E(07)   SETC  'G  GG'
&F(07)   SETC  'G   G'
&G(07)   SETC  ' GGGG'
&C(08)   SETC  'H   H'
&D(08)   SETC  'H   H'
&E(08)   SETC  'HHHHH'
&F(08)   SETC  'H   H'
&G(08)   SETC  'H   H'
&C(09)   SETC  ' III '
&D(09)   SETC  '  I  '
&E(09)   SETC  '  I  '
&F(09)   SETC  '  I  '
&G(09)   SETC  ' III '
&C(10)   SETC  '  JJJ'
&D(10)   SETC  '   J '
&E(10)   SETC  '   J '
&F(10)   SETC  'J  J '
&G(10)   SETC  ' JJ  '
&C(11)   SETC  'K  K '
&D(11)   SETC  'K K  '
&E(11)   SETC  'KK   '
&F(11)   SETC  'K K  '
&G(11)   SETC  'K  K '
&C(12)   SETC  'L    '
&D(12)   SETC  'L    '
&E(12)   SETC  'L    '
&F(12)   SETC  'L    '
&G(12)   SETC  'LLLLL'
&C(13)   SETC  'M   M'
&D(13)   SETC  'MM MM'
&E(13)   SETC  'M M M'
&F(13)   SETC  'M   M'
&G(13)   SETC  'M   M'
&C(14)   SETC  'N   N'
&D(14)   SETC  'NN  N'
&E(14)   SETC  'N N N'
&F(14)   SETC  'N  NN'
&G(14)   SETC  'N   N'
&C(15)   SETC  'OOOOO'
&D(15)   SETC  'O   O'
&E(15)   SETC  'O   O'
&F(15)   SETC  'O   O'
&G(15)   SETC  'OOOOO'
&C(16)   SETC  'PPPP '
&D(16)   SETC  'P   P'
&E(16)   SETC  'PPPP '
&F(16)   SETC  'P    '
&G(16)   SETC  'P    '
&C(17)   SETC  ' QQQ '
&D(17)   SETC  'Q   Q'
&E(17)   SETC  'Q Q Q'
&F(17)   SETC  'Q  Q '
&G(17)   SETC  ' QQ Q'
&C(18)   SETC  'RRRR '
&D(18)   SETC  'R   R'
&E(18)   SETC  'RRRR '
&F(18)   SETC  'R  R '
&G(18)   SETC  'R   R'
&C(19)   SETC  ' SSSS'
&D(19)   SETC  'S    '
&E(19)   SETC  ' SSS '
&F(19)   SETC  '    S'
&G(19)   SETC  'SSSS '
&C(20)   SETC  'TTTTT'
&D(20)   SETC  '  T  '
&E(20)   SETC  '  T  '
&F(20)   SETC  '  T  '
&G(20)   SETC  '  T  '
&C(21)   SETC  'U   U'
&D(21)   SETC  'U   U'
&E(21)   SETC  'U   U'
&F(21)   SETC  'U   U'
&G(21)   SETC  ' UUU '
&C(22)   SETC  'V   V'
&D(22)   SETC  'V   V'
&E(22)   SETC  'V   V'
&F(22)   SETC  ' V V '
&G(22)   SETC  '  V  '
&C(23)   SETC  'W   W'
&D(23)   SETC  'W   W'
&E(23)   SETC  'W W W'
&F(23)   SETC  'WW WW'
&G(23)   SETC  'W   W'
&C(24)   SETC  'X   X'
&D(24)   SETC  ' X X '
&E(24)   SETC  '  X  '
&F(24)   SETC  ' X X '
&G(24)   SETC  'X   X'
&C(25)   SETC  'Y   Y'
&D(25)   SETC  ' Y Y '
&E(25)   SETC  '  Y  '
&F(25)   SETC  '  Y  '
&G(25)   SETC  '  Y  '
&C(26)   SETC  'ZZZZZ'
&D(26)   SETC  '   Z '
&E(26)   SETC  '  Z  '
&F(26)   SETC  ' Z   '
&G(26)   SETC  'ZZZZZ'
&C(27)   SETC  ' # # '
&D(27)   SETC  '#####'
&E(27)   SETC  ' # # '
&F(27)   SETC  '#####'
&G(27)   SETC  ' # # '
&C(28)   SETC  '     '
&D(28)   SETC  '     '
&E(28)   SETC  '     '
&F(28)   SETC  ' ,,  '
&G(28)   SETC  '  ,  '
&C(29)   SETC  ' $$$$'
&D(29)   SETC  '$ $  '
&E(29)   SETC  ' $$$ '
&F(29)   SETC  '  $ $'
&G(29)   SETC  '$$$$ '
&C(30)   SETC  ' 000 '
&D(30)   SETC  '0   0'
&E(30)   SETC  '0   0'
&F(30)   SETC  '0   0'
&G(30)   SETC  ' 000 '
&C(31)   SETC  '  1  '
&D(31)   SETC  ' 11  '
&E(31)   SETC  '  1  '
&F(31)   SETC  '  1  '
&G(31)   SETC  ' 111 '
&C(32)   SETC  '2222 '
&D(32)   SETC  '    2'
&E(32)   SETC  '   2 '
&F(32)   SETC  '  2  '
&G(32)   SETC  '22222'
&C(33)   SETC  '3333 '
&D(33)   SETC  '    3'
&E(33)   SETC  ' 333 '
&F(33)   SETC  '    3'
&G(33)   SETC  '3333 '
&C(34)   SETC  '4  4 '
&D(34)   SETC  '4  4 '
&E(34)   SETC  '44444'
&F(34)   SETC  '   4 '
&G(34)   SETC  '   4 '
&C(35)   SETC  '55555'
&D(35)   SETC  '5    '
&E(35)   SETC  '5555 '
&F(35)   SETC  '    5'
&G(35)   SETC  '5555 '
&C(36)   SETC  ' 666 '
&D(36)   SETC  '6    '
&E(36)   SETC  '6666 '
&F(36)   SETC  '6   6'
&G(36)   SETC  ' 666 '
&C(37)   SETC  '77777'
&D(37)   SETC  '   7 '
&E(37)   SETC  '  7  '
&F(37)   SETC  '  7  '
&G(37)   SETC  '  7  '
&C(38)   SETC  ' 888 '
&D(38)   SETC  '8   8'
&E(38)   SETC  ' 888 '
&F(38)   SETC  '8   8'
&G(38)   SETC  ' 888 '
&C(39)   SETC  ' 999 '
&D(39)   SETC  '9   9'
&E(39)   SETC  ' 9999'
&F(39)   SETC  '    9'
&G(39)   SETC  ' 999 '
&C(40)   SETC  '@@@@ '
&D(40)   SETC  '    @'
&E(40)   SETC  '@@@ @'
&F(40)   SETC  '@ @ @'
&G(40)   SETC  '@@@@ '
&C(41)   SETC  '%%  %'
&D(41)   SETC  '   % '
&E(41)   SETC  '  %  '
&F(41)   SETC  ' %   '
&G(41)   SETC  '%  %%'
&C(42)   SETC  '* * *'
&D(42)   SETC  ' *** '
&E(42)   SETC  '*****'
&F(42)   SETC  ' *** '
&G(42)   SETC  '* * *'
&C(43)   SETC  '    /'
&D(43)   SETC  '   / '
&E(43)   SETC  '  /  '
&F(43)   SETC  ' /   '
&G(43)   SETC  '/    '
&C(44)   SETC  '     '
&D(44)   SETC  '     '
&E(44)   SETC  '-----'
&F(44)   SETC  '     '
&G(44)   SETC  '     '
&C(45)   SETC  '   ( '
&D(45)   SETC  '  (  '
&E(45)   SETC  '  (  '
&F(45)   SETC  '  (  '
&G(45)   SETC  '   ( '
&C(46)   SETC  ' )   '
&D(46)   SETC  '  )  '
&E(46)   SETC  '  )  '
&F(46)   SETC  '  )  '
&G(46)   SETC  ' )   '
&C(47)   SETC  ' &&&&&& '
&D(47)   SETC  '&&    '
&E(47)   SETC  ' &&&&  '
&F(47)   SETC  '&&   &&'
&G(47)   SETC  ' &&&&&&&&'
&C(48)   SETC  '  +  '
&D(48)   SETC  '  +  '
&E(48)   SETC  '+++++'
&F(48)   SETC  '  +  '
&G(48)   SETC  '  +  '
&C(49)   SETC  '     '
&D(49)   SETC  '     '
&E(49)   SETC  '     '
&F(49)   SETC  '     '
&G(49)   SETC  '_____'
&C(50)   SETC  '  *  '
&D(50)   SETC  ' C*C '
&E(50)   SETC  'C *  '
&F(50)   SETC  ' C*C '
&G(50)   SETC  '  *  '
&C(51)   SETC  '  |  '
&D(51)   SETC  '  |  '
&E(51)   SETC  '  |  '
&F(51)   SETC  '  |  '
&G(51)   SETC  '  |  '
&C(52)   SETC  ' >   '
&D(52)   SETC  '  >  '
&E(52)   SETC  '   > '
&F(52)   SETC  '  >  '
&G(52)   SETC  ' >   '
&C(53)   SETC  ' ..  '
&D(53)   SETC  ' ..  '
&E(53)   SETC  '     '
&F(53)   SETC  ' ..  '
&G(53)   SETC  ' ..  '
&C(54)   SETC  ' ..  '
&D(54)   SETC  ' ..  '
&E(54)   SETC  '     '
&F(54)   SETC  ' ,,  '
&G(54)   SETC  '  ,  '
&C(55)   SETC  '     '
&D(55)   SETC  '     '
&E(55)   SETC  '     '
&F(55)   SETC  ' ..  '
&G(55)   SETC  ' ..  '
&C(56)   SETC  ' ??? '
&D(56)   SETC  '?   ?'
&E(56)   SETC  '   ? '
&F(56)   SETC  '  ?  '
&G(56)   SETC  '  ?  '
&C(57)   SETC  ' '' '' '
&D(57)   SETC  '     '
&E(57)   SETC  '     '
&F(57)   SETC  '     '
&G(57)   SETC  '     '
&C(58)   SETC  '     '
&D(58)   SETC  '====='
&E(58)   SETC  '     '
&F(58)   SETC  '====='
&G(58)   SETC  '     '
&C(59)   SETC  ' ||  '
&D(59)   SETC  ' ||  '
&E(59)   SETC  ' ||  '
&F(59)   SETC  '     '
&G(59)   SETC  ' ..  '
&C(60)   SETC  '   < '
&D(60)   SETC  '  <  '
&E(60)   SETC  ' <   '
&F(60)   SETC  '  <  '
&G(60)   SETC  '   < '
&C(61)   SETC  '     '
&D(61)   SETC  '     '
&E(61)   SETC  '¬¬¬¬¬'
&F(61)   SETC  '    ¬'
&G(61)   SETC  '     '
&C(62)   SETC  '     '
&D(62)   SETC  '     '
&E(62)   SETC  '     '
&F(62)   SETC  '     '
&G(62)   SETC  '     '
&J       SETA  1
&K       SETA  1
         AIF   ('&LETTERS'(1,1) NE '''').JLOOP
.LLOOP   ANOP
&J       SETA  &J+1
.JLOOP   AIF   (K'&LETTERS LT &J).END
         AIF   (K'&LETTERS EQ &J AND '&LETTERS'(&J,1) EQ '''').END
&I       SETA  1
.COMP    AIF   ('&B(&I)' EQ '&LETTERS'(&J,1)).FND
&I       SETA  &I+1
         AIF   (&I LT 62).COMP
.FND     ANOP
&A(&K)   SETC  '&C(&I)'
&A(&K+1) SETC  '&D(&I)'
&A(&K+2) SETC  '&E(&I)'
&A(&K+3) SETC  '&F(&I)'
&A(&K+4) SETC  '&G(&I)'
&K       SETA  &K+5
         AIF   (&K LT 51).LLOOP
.END     ANOP
         SPACE 2
         MNOTE *,'******************************************************
               ****************'
         MNOTE *,' '
&I       SETA  1
.REDO    MNOTE *,' &A(&I)  &A(&I+5)  &A(&I+10)  &A(&I+15)  &A(&I+20)  &*
               A(&I+25)  &A(&I+30)  &A(&I+35)  &A(&I+40)  &A(&I+45)'
&I       SETA  &I+1
         AIF   (&I LT 6).REDO
         MNOTE *,' '
         MNOTE *,'******************************************************
               ****************'
         MEXIT
         SPACE 4
         MEND
./ ADD NAME=@EDIT    8512-85095-85095-1207-00321-00321-00000-ISPFDYN
         MACRO
&NAME    @EDIT &DSN,                    DATASET NAME                   *
               &VOL,                    VOLUME                         *
               &PASS,                   PASSWORD                       *
               &PANEL,                  PANEL ID                       *
               &MACRO,                  MACRO NAME                     *
               &PROF,                   PROFILE NAME                   *
               &DATAID,                 DATA ID                        *
               &MEMBER,                 MEMBER NAME                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFEDIT,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
.*       AIF   ('&DSN' EQ '').ERR1
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFEDIT).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DSN' EQ '').CNT0
         AIF   ('&DSN'(1,1) EQ '''').GENLIT
.CNT0    AIF   ('&VOL' EQ '').CNT1
         AIF   ('&VOL'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&PASS' EQ '').CNT2
         AIF   ('&PASS'(1,1) EQ '''').GENLIT
.CNT2    AIF   ('&PANEL' EQ '').CNT3
         AIF   ('&PANEL'(1,1) EQ '''').GENLIT
.CNT3    AIF   ('&DATAID' EQ '').CNT4
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
.CNT4    AIF   ('&MEMBER' EQ '').CNT5
         AIF   ('&MEMBER'(1,1) EQ '''').GENLIT
.CNT5    AIF   ('&MACRO' EQ '').CNT6
         AIF   ('&MACRO'(1,1) EQ '''').GENLIT
.CNT6    AIF   ('&PROF' EQ '').CNT7
         AIF   ('&PROF'(1,1) EQ '''').GENLIT
.CNT7    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFEDIT).BYP20
EDIT     DC    CL8'EDIT'                EDIT LITERAL FOR ISPF
&SPFEDIT SETB 1
.BYP20   ANOP
         AIF   ('&DSN' EQ '').BYP30
         AIF   ('&DSN'(1,1) NE '''').BYP30
SPFD&NDX DC    CL56&DSN                 EDIT THIS DATASET NAME
.BYP30   ANOP
         AIF   ('&VOL' EQ '').BYP40
         AIF   ('&VOL'(1,1) NE '''').BYP40
SPFV&NDX DC    CL6&VOL                  GENERATED VOLSER
.BYP40   ANOP
         AIF   ('&PASS' EQ '').BYP50
         AIF   ('&PASS'(1,1) NE '''').BYP50
SPFP&NDX DC    CL8&PASS                 GENERATED PASSWORD
.BYP50   ANOP
         AIF   ('&PANEL' EQ '').BYP60
         AIF   ('&PANEL'(1,1) NE '''').BYP60
SPFI&NDX DC    CL8&PANEL                GENERATED PANEL ID
.BYP60   ANOP
         AIF   ('&DATAID' EQ '').BYP62
         AIF   ('&DATAID'(1,1) NE '''').BYP62
SPFA&NDX DC    CL8&DATAID               GENERATED DATAID
.BYP62   ANOP
         AIF   ('&MEMBER' EQ '').BYP64
         AIF   ('&MEMBER'(1,1) NE '''').BYP64
SPFM&NDX DC    CL8&MEMBER               GENERATED MEMBER
.BYP64   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP70   ANOP
         AIF   ('&MACRO' EQ '').AYP60
         AIF   ('&MACRO'(1,1) NE '''').AYP60
SPFX&NDX DC    CL8&MACRO                GENERATED DATAID
.AYP60   ANOP
         AIF   ('&PROF' EQ '').AYP70
         AIF   ('&PROF'(1,1) NE '''').AYP70
SPFY&NDX DC    CL8&PROF                 GENERATED DATAID
.AYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,EDIT                  GET ADDRESS OF EDIT KEYWORD
         AIF   ('&DSN' EQ '').BYP85
         AIF   ('&DSN'(1,1) NE '''').BYP80
         LA    15,SPFD&NDX              GET ADDRESS OF GENERATED DSN
         AGO   .BYP90
.BYP80   ANOP
         LA    15,&DSN                  GET ADDRESS OF DATASET NAME
         AGO   .BYP90
.BYP85   ANOP
         LA    15,SPFNULLC              GET DUMMY ADDRESS FOR DSN
.BYP90   ANOP
         AIF   ('&VOL' EQ '').BYP100
         AIF   ('&VOL'(1,1) EQ '''').BYP110
         LA    0,&VOL                   GET ADDRESS OF VOLSER
         AGO   .BYP120
.BYP110  ANOP
         LA    0,SPFV&NDX               GET ADDRESS OF GENERATED VOLSER
         AGO   .BYP120
.BYP100  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR VOLSER
.BYP120  ANOP
         AIF   ('&PASS' EQ '').BYP140
         AIF   ('&PASS'(1,1) NE '''').BYP130
         LA    1,SPFP&NDX               GET ADDRESS OF GENERATED PASS
         AGO   .BYP150
.BYP130  ANOP
         LA    1,&PASS                  GET ADDRESS OF PASSWORD
         AGO   .BYP150
.BYP140  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR PASSWORD
.BYP150  ANOP
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&PANEL' EQ '').BYP170
         AIF   ('&PANEL'(1,1) EQ '''').BYP160
         LA    14,&PANEL                GET ADDRESS OF PANEL ID
         AGO   .BYP180
.BYP160  ANOP
         LA    14,SPFI&NDX              GET ADDRESS OF GENERATED PANEL
         AGO   .BYP180
.BYP170  ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR PANEL ID
.BYP180  ANOP
         AIF   ('&MACRO' EQ '').BYP172
         AIF   ('&MACRO'(1,1) EQ '''').BYP162
         LA    15,&MACRO                GET ADDRESS OF MACRO
         AGO   .BYP182
.BYP162  ANOP
         LA    15,SPFX&NDX              GET ADDRESS OF GENNED MACRO
         AGO   .BYP182
.BYP172  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MACRO
.BYP182  ANOP
         AIF   ('&PROF' EQ '').BYP174
         AIF   ('&PROF'(1,1) EQ '''').BYP164
         LA    0,&PROF                  GET ADDRESS OF PROFILE
         AGO   .BYP184
.BYP164  ANOP
         LA    0,SPFY&NDX               GET ADDRESS OF GENNED PROFILE
         AGO   .BYP184
.BYP174  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR PROFILE
.BYP184  ANOP
         AIF   ('&DATAID' EQ '').AYP100
         AIF   ('&DATAID'(1,1) EQ '''').AYP110
         LA    1,&DATAID                GET ADDRESS OF DATAID
         AGO   .AYP120
.AYP100  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM OF DATAID
         AGO   .AYP120
.AYP110  ANOP
         LA    1,SPFA&NDX               GET ADDRESS OF GENNED DATAID
.AYP120  ANOP
         STM   14,1,&TEMP+16            STORE PARMS
         AIF   ('&MEMBER' EQ '').AYP170
         AIF   ('&MEMBER'(1,1) EQ '''').AYP160
         LA    14,&MEMBER               GET ADDRESS OF MEMBER
         AGO   .AYP180
.AYP160  ANOP
         LA    14,SPFM&NDX              GET ADDRESS OF GENNED MEMBER
         AGO   .AYP180
.AYP170  ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR MEMBER
.AYP180  ANOP
         ST    14,&TEMP+32              STORE THE MEMBER PARMS
         OI    &TEMP+32,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 9).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 9).BYPVARS
&SPFVARS SETA  9
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(EDIT)                  EDIT LITERAL
         AIF   ('&DSN' EQ '').BYP285
         AIF   ('&DSN'(1,1) NE '''').BYP280
         DC    A(SPFD&NDX)              ADDRESS OF GENERATED DSN
         AGO   .BYP290
.BYP280  ANOP
         DC    A(&DSN)                  ADDRESS OF DATASET NAME
         AGO   .BYP290
.BYP285  ANOP
         DC    A(SPFNULLC)              ADDRESS OF DUMMY DSN
.BYP290  ANOP
         AIF   ('&VOL' EQ '').BYP200
         AIF   ('&VOL'(1,1) EQ '''').BYP210
         DC    A(&VOL)                  ADDRESS OF VOLSER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VOLSER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VOLSER
.BYP220  ANOP
         AIF   ('&PASS' EQ '').BYP240
         AIF   ('&PASS'(1,1) NE '''').BYP230
         DC    A(SPFP&NDX)              ADDRESS OF GENERATED PASS
         AGO   .BYP250
.BYP230  ANOP
         DC    A(&PASS)                 ADDRESS OF PASSWORD
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PASSWORD
.BYP250  ANOP
         AIF   ('&PANEL' EQ '').BYP270
         AIF   ('&PANEL'(1,1) EQ '''').BYP260
         DC    A(&PANEL)                ADDRESS OF PANEL ID
         AGO   .BYP300
.BYP260  ANOP
         DC    A(SPFI&NDX)              ADDRESS OF GENERATED PANEL
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PANEL ID
.BYP300  ANOP
         AIF   ('&MACRO' EQ '').CYP320
         AIF   ('&MACRO'(1,1) EQ '''').CYP310
         DC    A(&MACRO)                ADDRESS OF MACRO
         AGO   .CYP330
.CYP310  ANOP
         DC    A(SPFX&NDX)              ADDRESS OF GENNED MACRO
         AGO   .CYP330
.CYP320  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MACRO
.CYP330  ANOP
         AIF   ('&PROF' EQ '').DYP320
         AIF   ('&PROF'(1,1) EQ '''').DYP310
         DC    A(&MACRO)                ADDRESS OF PROFILE
         AGO   .DYP330
.DYP310  ANOP
         DC    A(SPFY&NDX)              ADDRESS OF GENNED PROFILE
         AGO   .DYP330
.DYP320  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PROFILE
.DYP330  ANOP
         AIF   ('&DATAID' EQ '').BYP320
         AIF   ('&DATAID'(1,1) EQ '''').BYP310
         DC    A(&DATAID)               ADDRESS OF DATA ID
         AGO   .BYP330
.BYP310  ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENNED DATAID
         AGO   .BYP330
.BYP320  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR DATA ID
.BYP330  ANOP
         AIF   ('&MEMBER' EQ '').BYP374
         AIF   ('&MEMBER'(1,1) EQ '''').BYP364
         DC    A(&MEMBER.+X'80000000')  ADDRESS OF MEMBER
         AGO   .BYP384
.BYP364  ANOP
         DC    A(SPFM&NDX+X'80000000')  ADDRESS OF GENNED MEMBER
         AGO   .BYP384
.BYP374  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR MEMBER
.BYP384  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'REQUIRED DSNAME PARAMETER MISSING'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@FTCLOSE 8512-85095-85095-1207-00177-00177-00000-ISPFDYN
         MACRO
&NAME    @FTCLOSE &MEM,                 MEMBER NAME                    *
               &LIB,                    LIBRARY NAME                   *
               &NOREPLL,                NOREPL KEYWORD                 *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFFTCLOSE,&SPFNULLC,&SPFDEBUG,&SPFVAR,&SPFNOREPL
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&NOREPLL' NE '' AND                                   *
               '&NOREPLL' NE 'NOREPL').ERR1
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFFTCLOSE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&MEM' EQ '').CNT1
         AIF   ('&MEM'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&LIB' EQ '').CNT2
         AIF   ('&LIB'(1,1) EQ '''').GENLIT
.CNT2    AIF   ('&NOREPLL' NE '' AND NOT &SPFNOREPL).GENLIT
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFFTCLOSE).BYP20
FTCLOSE  DC    CL8'FTCLOSE'             ISPF KEYWORD
&SPFFTCLOSE SETB 1
.BYP20   ANOP
         AIF   ('&MEM' EQ '').BYP40
         AIF   ('&MEM'(1,1) NE '''').BYP40
SPFM&NDX DC    CL8&MEM                  GENERATED MEMBER NAME
.BYP40   ANOP
         AIF   ('&LIB' EQ '').BYP50
         AIF   ('&LIB'(1,1) NE '''').BYP50
SPFL&NDX DC    CL8&LIB                  GENERATED LIBRARY
.BYP50   ANOP
         AIF   ('&NOREPLL' EQ '').BYP60
         AIF   (&SPFNOREPL).BYP60
NOREPL   DC    CL8'NOREPL'              ISPF KEYWORD
&SPFNOREPL SETB 1
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,FTCLOSE               GET ADDRESS OF FTCLOSE KEYWORD
         AIF   ('&MEM' EQ '').BYP100
         AIF   ('&MEM'(1,1) EQ '''').BYP110
         LA    15,&MEM                  GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFM&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         AIF   ('&LIB' EQ '').BYP140
         AIF   ('&LIB'(1,1) NE '''').BYP130
         LA    0,SPFL&NDX               GET ADDRESS OF GENERATED LIB
         AGO   .BYP150
.BYP130  ANOP
         LA    0,&LIB                   GET ADDRESS OF LIBRARY
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR LIBRARY
.BYP150  ANOP
         AIF   ('&NOREPLL' EQ '').BYP170
         LA    1,NOREPL                 GET ADDRESS OF NOREPL
         AGO   .BYP180
.BYP170  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR NOREPL
.BYP180  ANOP
         STM   14,1,&TEMP               STORE PARAMETERS
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(FTCLOSE)               BROWSE LITERAL
         AIF   ('&MEM' EQ '').BYP200
         AIF   ('&MEM'(1,1) EQ '''').BYP210
         DC    A(&MEM)                  ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFM&NDX)              ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MEMBER
.BYP220  ANOP
         AIF   ('&LIB' EQ '').BYP240
         AIF   ('&LIB'(1,1) NE '''').BYP230
         DC    A(SPFL&NDX)              ADDRESS OF GENERATED LIBRARY
         AGO   .BYP250
.BYP230  ANOP
         DC    A(&LIB)                  ADDRESS OF LIBRARY
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR LIBRARY
.BYP250  ANOP
         AIF   ('&NOREPLL' EQ '').BYP270
         DC    A(NOREPL+X'80000000')    ADDRESS OF NOREPL KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR NOREPL
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'INVALID VALUE FOR NOREPL - FOUND ''&NOREPLL'''
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@FTERASE 8512-85095-85095-1207-00157-00157-00000-ISPFDYN
         MACRO
&NAME    @FTERASE &MEM,                 MEMBER NAME                    *
               &LIB,                    LIBRARY NAME                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFFTERASE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&MEM' EQ '').ERR1
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFFTERASE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&MEM' EQ '').CNT1
         AIF   ('&MEM'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&LIB' EQ '').CNT2
         AIF   ('&LIB'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFFTERASE).BYP20
FTERASE  DC    CL8'FTERASE'             ISPF KEYWORD
&SPFFTERASE SETB 1
.BYP20   ANOP
         AIF   ('&MEM' EQ '').BYP40
         AIF   ('&MEM'(1,1) NE '''').BYP40
SPFM&NDX DC    CL8&MEM                  GENERATED MEMBER NAME
.BYP40   ANOP
         AIF   ('&LIB' EQ '').BYP50
         AIF   ('&LIB'(1,1) NE '''').BYP50
SPFL&NDX DC    CL8&LIB                  GENERATED LIBRARY
.BYP50   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,FTERASE               GET ADDRESS OF FTERASE KEYWORD
         AIF   ('&MEM' EQ '').BYP100
         AIF   ('&MEM'(1,1) EQ '''').BYP110
         LA    15,&MEM                  GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFM&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         AIF   ('&LIB' EQ '').BYP140
         AIF   ('&LIB'(1,1) NE '''').BYP130
         LA    0,SPFL&NDX               GET ADDRESS OF GENERATED LIB
         AGO   .BYP150
.BYP130  ANOP
         LA    0,&LIB                   GET ADDRESS OF LIBRARY
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR LIBRARY
.BYP150  ANOP
         STM   14,0,&TEMP               STORE PARAMETERS
         OI    &TEMP+8,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(FTERASE)               BROWSE LITERAL
         AIF   ('&MEM' EQ '').BYP200
         AIF   ('&MEM'(1,1) EQ '''').BYP210
         DC    A(&MEM)                  ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFM&NDX)              ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MEMBER
.BYP220  ANOP
         AIF   ('&LIB' EQ '').BYP240
         AIF   ('&LIB'(1,1) NE '''').BYP230
         DC    A(SPFL&NDX+X'80000000')  ADDRESS OF GENERATED LIBRARY
         AGO   .BYP250
.BYP230  ANOP
         DC    A(&LIB+X'80000000')      ADDRESS OF LIBRARY
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR LIBRARY
.BYP250  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'MEMBER NAME REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@FTINCL  8512-85095-85095-1207-00149-00149-00000-ISPFDYN
         MACRO
&NAME    @FTINCL &SKEL,                 MEMBER NAME                    *
               &NOFTL,                  NOFT KEYWORD                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFFTINCL,&SPFDEBUG,&SPFVAR,&SPFNOFT
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&NOFTL' NE '' AND                                     *
               '&NOFTL' NE 'NOFT').ERR1
         AIF   ('&SKEL' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFFTINCL).GENLIT
         AIF   ('&SKEL' EQ '').CNT1
         AIF   ('&SKEL'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&NOFTL' NE '' AND NOT &SPFNOFT).GENLIT
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFFTINCL).BYP20
FTINCL   DC    CL8'FTINCL'              ISPF KEYWORD
&SPFFTINCL SETB 1
.BYP20   ANOP
         AIF   ('&SKEL' EQ '').BYP40
         AIF   ('&SKEL'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&SKEL                 GENERATED MEMBER NAME
.BYP40   ANOP
         AIF   ('&NOFTL' EQ '').BYP60
         AIF   (&SPFNOFT).BYP60
NOFT     DC    CL8'NOFT'                ISPF KEYWORD
&SPFNOFT SETB  1
.BYP60   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,FTINCL                GET ADDRESS OF FTINCL KEYWORD
         AIF   ('&SKEL' EQ '').BYP100
         AIF   ('&SKEL'(1,1) EQ '''').BYP110
         LA    15,&SKEL                 GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFS&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         AIF   ('&NOFTL' EQ '').BYP170
         LA    0,NOFT                   GET ADDRESS OF NOFT
         AGO   .BYP180
.BYP170  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR NOFT
.BYP180  ANOP
         STM   14,0,&TEMP               STORE PARAMETERS
         OI    &TEMP+8,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(FTINCL)                BROWSE LITERAL
         AIF   ('&SKEL' EQ '').BYP200
         AIF   ('&SKEL'(1,1) EQ '''').BYP210
         DC    A(&SKEL)                 ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MEMBER
.BYP220  ANOP
         AIF   ('&NOFTL' EQ '').BYP270
         DC    A(NOFT+X'80000000')      ADDRESS OF NOFT KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR NOFT
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'INVALID VALUE FOR NOFT PARAMETER - FOUND ''&NOFTL'''
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'SKELETON NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@FTOPEN  8512-85095-85095-1207-00118-00118-00000-ISPFDYN
         MACRO
&NAME    @FTOPEN &TEMPL,                TEMP KEYWORD                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFFTOPEN,&SPFDEBUG,&SPFVAR,&SPFTEMP
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEM
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&TEMPL' NE '' AND                                     *
               '&TEMPL' NE 'TEMP').ERR1
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEM     SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEM     SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFFTOPEN).GENLIT
         AIF   ('&TEMPL' NE '' AND NOT &SPFTEMP).GENLIT
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFFTOPEN).BYP20
FTOPEN   DC    CL8'FTOPEN'              ISPF KEYWORD
&SPFFTOPEN SETB 1
.BYP20   ANOP
         AIF   ('&TEMPL' EQ '').BYP60
         AIF   (&SPFTEMP).BYP60
TEMP     DC    CL8'TEMP'                ISPF KEYWORD
&SPFTEMP SETB  1
.BYP60   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,FTOPEN                GET ADDRESS OF FTOPEN KEYWORD
         AIF   ('&TEMPL' EQ '').BYP170
         LA    15,TEMP                  GET ADDRESS OF TEMP
         AGO   .BYP180
.BYP170  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TEMP
.BYP180  ANOP
         STM   14,15,&TEM               STORE PARAMETERS
         OI    &TEM+4,X'80'             MARK LAST PARM
         LA    1,&TEM                   GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(FTOPEN)                BROWSE LITERAL
         AIF   ('&TEMPL' EQ '').BYP270
         DC    A(TEMP+X'80000000')      ADDRESS OF TEMP KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR TEMP
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'INVALID VALUE FOR TEMP PARM - FOUND ''&TEMPL'''
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@GETMSG  8512-85095-85095-1207-00254-00254-00000-ISPFDYN
         MACRO
&NAME   @GETMSG &MSG,                   MESSAGE NAME                   *
               &SMSG,                   VAR FOR SHORT MESSAGE          *
               &LMSG,                   VAR FOR LONG MESSAGE           *
               &ALARM,                  VAR FOR ALARM VALUE            *
               &HELP,                   VAR FOR HELP PANEL             *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFGETMSG,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&MSG' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFGETMSG).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&MSG' EQ '').CNT1
         AIF   ('&MSG'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&SMSG' EQ '').CNT2
         AIF   ('&SMSG'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&LMSG' EQ '').CNT3
         AIF   ('&LMSG'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&ALARM' EQ '').CNT4
         AIF   ('&ALARM'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&HELP' EQ '').CNT5
         AIF   ('&HELP'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFGETMSG).BYP20
GETMSG   DC    CL8'GETMSG'              ISPF KEYWORD
&SPFGETMSG SETB 1
.BYP20   ANOP
         AIF   ('&MSG' EQ '').BYP30
         AIF   ('&MSG'(1,1) NE '''').BYP30
SPFM&NDX DC    CL8&MSG                  GENERATED MESSAGE NAME
.BYP30   ANOP
         AIF   ('&SMSG' EQ '').BYP40
         AIF   ('&SMSG'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&SMSG                 GENERATED SHORT MESSAGE
.BYP40   ANOP
         AIF   ('&LMSG' EQ '').BYP50
         AIF   ('&LMSG'(1,1) NE '''').BYP50
SPFL&NDX DC    CL8&LMSG                 GENERATED LONG MESSAGE
.BYP50   ANOP
         AIF   ('&ALARM' EQ '').BYP60
         AIF   ('&ALARM'(1,1) NE '''').BYP60
SPFA&NDX DC    CL8&ALARM                GENERATED ALARM VAR FIELD
.BYP60   ANOP
         AIF   ('&HELP' EQ '').BYP70
         AIF   ('&HELP'(1,1) NE '''').BYP70
SPFH&NDX DC    CL8&HELP                 GENERATED HELP VAR FIELD
.BYP70   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,GETMSG                GET ADDRESS OF GETMSG KEYWORD
.*
         AIF   ('&MSG' EQ '').BYP1000
         AIF   ('&MSG'(1,1) EQ '''').BYP1010
         LA    15,&MSG                  GET ADDRESS OF MSG NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MSG
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFM&NDX              GET ADDRESS OF GENERATED MSG
.BYP1050 ANOP
.*
         AIF   ('&SMSG' EQ '').BYP1100
         AIF   ('&SMSG'(1,1) EQ '''').BYP1110
         LA    0,&SMSG                  GET ADDRESS OF SHORT MSG
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR SHORT MSG
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SHORT
.BYP1150 ANOP
.*
         AIF   ('&LMSG' EQ '').BYP1200
         AIF   ('&LMSG'(1,1) EQ '''').BYP1210
         LA    1,&LMSG                  GET ADDRESS OF LONG MSG NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR LONG MSG
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFL&NDX               GET ADDRESS OF GENERATED LONG
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&ALARM' EQ '').BYP1300
         AIF   ('&ALARM'(1,1) EQ '''').BYP1310
         LA    14,&ALARM                GET ADDRESS OF ALARM NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR ALARM
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFA&NDX              GET ADDRESS OF GENERATED ALARM
.BYP1350 ANOP
.*
         AIF   ('&HELP' EQ '').BYP1400
         AIF   ('&HELP'(1,1) EQ '''').BYP1410
         LA    15,&HELP                 GET ADDRESS OF HELP NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR HELP
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFH&NDX              GET ADDRESS OF GENERATED HELP
.BYP1450 ANOP
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(GETMSG)                GETMSG LITERAL
.*
         AIF   ('&MSG' EQ '').BYP2000
         AIF   ('&MSG'(1,1) EQ '''').BYP2010
         DC    A(&MSG)                  ADDRESS OF MSG NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MSG NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFM&NDX)              ADDRESS OF GENERATED MSG
.BYP2050 ANOP
.*
         AIF   ('&SMSG' EQ '').BYP2100
         AIF   ('&SMSG'(1,1) EQ '''').BYP2110
         DC    A(&SMSG)                 ADDRESS OF SHORT MSG
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR SMSG SHORT MSG
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED SHORT MSG
.BYP2150 ANOP
.*
         AIF   ('&LMSG' EQ '').BYP2200
         AIF   ('&LMSG'(1,1) EQ '''').BYP2210
         DC    A(&LMSG)                 ADDRESS OF LONG MESSAGE
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR LONG MESSAGE
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFL&NDX)              ADDRESS OF GENERATED LONG MES
.BYP2250 ANOP
.*
         AIF   ('&ALARM' EQ '').BYP2300
         AIF   ('&ALARM'(1,1) EQ '''').BYP2310
         DC    A(&ALARM)                ADDRESS OF ALARM NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ALARM
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENERATED ALARM
.BYP2350 ANOP
.*
         AIF   ('&HELP' EQ '').BYP2800
         AIF   ('&HELP'(1,1) EQ '''').BYP2810
         DC    A(&HELP+X'80000000')     ADDRESS OF HELP NAME
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR HELP
         AGO   .BYP2850
.BYP2810 ANOP
         DC    A(SPFH&NDX+X'80000000')  ADDRESS OF GENERATED HELP
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'THE MESSAGE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@LOG     8512-85095-85095-1207-00125-00125-00000-ISPFDYN
         MACRO
&NAME    @LOG &MSG,                     MEMBER NAME                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLOG,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&MSG' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLOG).GENLIT
         AIF   ('&MSG' EQ '').CNT1
         AIF   ('&MSG'(1,1) EQ '''').GENLIT
.CNT1    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFLOG).BYP20
LOG      DC    CL8'LOG'                 ISPF KEYWORD
&SPFLOG SETB   1
.BYP20   ANOP
         AIF   ('&MSG' EQ '').BYP40
         AIF   ('&MSG'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&MSG                  GENERATED MEMBER NAME
.BYP40   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,LOG                   GET ADDRESS OF LOG KEYWORD
         AIF   ('&MSG' EQ '').BYP100
         AIF   ('&MSG'(1,1) EQ '''').BYP110
         LA    15,&MSG                  GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFS&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         STM   14,15,&TEMP              STORE PARAMETERS
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(LOG)                   BROWSE LITERAL
         AIF   ('&MSG' EQ '').BYP200
         AIF   ('&MSG'(1,1) EQ '''').BYP210
         DC    A(&MSG+X'80000000')      ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFS&NDX+X'80000000')  ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR MEMBER
.BYP220  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'MSG NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@SETMSG  8512-85095-85095-1207-00125-00125-00000-ISPFDYN
         MACRO
&NAME    @SETMSG &MSG,                  MEMBER NAME                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFSETMSG,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&MSG' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFSETMSG).GENLIT
         AIF   ('&MSG' EQ '').CNT1
         AIF   ('&MSG'(1,1) EQ '''').GENLIT
.CNT1    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFSETMSG).BYP20
SETMSG   DC    CL8'SETMSG'              ISPF KEYWORD
&SPFSETMSG SETB 1
.BYP20   ANOP
         AIF   ('&MSG' EQ '').BYP40
         AIF   ('&MSG'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&MSG                  GENERATED MEMBER NAME
.BYP40   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,SETMSG                GET ADDRESS OF SETMSG KEYWORD
         AIF   ('&MSG' EQ '').BYP100
         AIF   ('&MSG'(1,1) EQ '''').BYP110
         LA    15,&MSG                  GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFS&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         STM   14,15,&TEMP              STORE PARAMETERS
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(SETMSG)                BROWSE LITERAL
         AIF   ('&MSG' EQ '').BYP200
         AIF   ('&MSG'(1,1) EQ '''').BYP210
         DC    A(&MSG+X'80000000')      ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFS&NDX+X'80000000')  ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR MEMBER
.BYP220  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'MSG NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBADD   8512-85095-85095-1207-00181-00181-00000-ISPFDYN
         MACRO
&NAME    @TBADD &TABLE,                 TABLE NAME                     *
               &SAVE,                   SAVE NAME-LIST                 *
               &ORDER,                  ORDER KEYWORD                  *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBADD,&SPFDEBUG,&SPFVAR,&SPFORDER,&SPFNULLC
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&ORDER' NE '' AND                                     *
               '&ORDER' NE 'ORDER').ERR1
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBADD).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&ORDER' NE '' AND NOT &SPFORDER).GENLIT
         AIF   ('&SAVE' EQ '').CNT2
         AIF   ('&SAVE'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBADD).BYP20
TBADD    DC    CL8'TBADD'               ISPF KEYWORD
&SPFTBADD SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
         AIF   ('&SAVE' EQ '').BYP50
         AIF   ('&SAVE'(1,1) NE '''').BYP50
SPFS&NDX DC    C&SAVE                   GENERATED NAME-LIST
.BYP50   ANOP
         AIF   ('&ORDER' EQ '').BYP60
         AIF   (&SPFORDER).BYP60
ORDER    DC    CL8'ORDER'               ISPF KEYWORD
&SPFORDER SETB  1
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8' '                   ISPF DUMMY PARM
&SPFNULLC SETB 1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBADD                 GET ADDRESS OF TBADD KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         AIF   ('&SAVE' EQ '').BYP140
         AIF   ('&SAVE'(1,1) EQ '''').BYP130
         LA    0,&SAVE                  GET ADDRESS OF NAME-LIST
         AGO   .BYP150
.BYP130  ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SAVE
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR NAME-LIST
.BYP150  ANOP
         AIF   ('&ORDER' EQ '').BYP170
         LA    1,ORDER                  GET ADDRESS OF ORDER
         AGO   .BYP180
.BYP170  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ORDER
.BYP180  ANOP
         STM   14,1,&TEMP               STORE PARAMETERS
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBADD)                 BROWSE LITERAL
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE)                ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE
.BYP220  ANOP
         AIF   ('&SAVE' EQ '').BYP240
         AIF   ('&SAVE'(1,1) EQ '''').BYP230
         DC    A(&SAVE)                 ADDRESS OF NAME LIST
         AGO   .BYP250
.BYP230  ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED NAME LIST
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAME LIST
.BYP250  ANOP
         AIF   ('&ORDER' EQ '').BYP270
         DC    A(ORDER+X'80000000')     ADDRESS OF ORDER KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR ORDER
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'EXPECTED ORDER KEYWORD - FOUND ''&ORDER'''
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBBOTTO 8512-85095-85095-1207-00254-00254-00000-ISPFDYN
         MACRO
&NAME    @TBBOTTO &TABLE,               TABLE NAME                     *
               &SAVE,                   SAVE NAME-LIST                 *
               &ROWID,                  ROW ID NAME                    *
               &NOREAD,                 NOREAD KEYWORD                 *
               &POS,                    POSITION NUMBER                *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBBOTTOM,&SPFNULLC,&SPFDEBUG,&SPFVAR,&SPFNOREAD
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NOREAD' NE '' AND                                    *
               '&NOREAD' NE 'NOREAD').ERR2
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBBOTTOM).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&SAVE' EQ '').CNT2
         AIF   ('&SAVE'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&ROWID' EQ '').CNT3
         AIF   ('&ROWID'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&NOREAD' NE '' AND NOT &SPFNOREAD).GENLIT
         AIF   ('&POS' EQ '').CNT4
         AIF   ('&POS'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&POS' EQ '').CNT5
         AIF   ('&POS'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBBOTTOM).BYP20
TBBOTTOM DC    CL8'TBBOTTOM'            ISPF KEYWORD
&SPFTBBOTTOM SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&SAVE' EQ '').BYP40
         AIF   ('&SAVE'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&SAVE                 GENERATED SAVE NAME-LIST
.BYP40   ANOP
         AIF   ('&ROWID' EQ '').BYP50
         AIF   ('&ROWID'(1,1) NE '''').BYP50
SPFR&NDX DC    CL8&ROWID                GENERATED ROWID VAR NAME
.BYP50   ANOP
         AIF   ('&NOREAD' EQ '').BYP60
         AIF   (&SPFNOREAD).BYP60
NOREAD   DC    CL8'NOREAD'              GENERATED NOREAD KEYWORD
&SPFNOREAD SETB 1
.BYP60   ANOP
         AIF   ('&POS' EQ '').BYP70
         AIF   ('&POS'(1,1) NE '''').BYP70
SPFP&NDX DC    CL8&POS                  GENERATED POSITION VAR
.BYP70   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBBOTTOM              GET ADDRESS OF TBBOTTOM KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&SAVE' EQ '').BYP1100
         AIF   ('&SAVE'(1,1) EQ '''').BYP1110
         LA    0,&SAVE                  GET ADDRESS OF SAVE NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR SAVE
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SAVE
.BYP1150 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP1200
         AIF   ('&ROWID'(1,1) EQ '''').BYP1210
         LA    1,&ROWID                 GET ADDRESS OF ROWID NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ROWID
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFR&NDX               GET ADDRESS OF GENERATED ROWID
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&NOREAD' EQ '').BYP1300
         LA    14,NOREAD                GET ADDRESS OF NOREAD KEYWORD
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR NOREAD
.BYP1350 ANOP
.*
         AIF   ('&POS' EQ '').BYP1400
         AIF   ('&POS'(1,1) EQ '''').BYP1410
         LA    15,&POS                  GET ADDRESS OF POS NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR POS
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFP&NDX              GET ADDRESS OF GENERATED POS
.BYP1450 ANOP
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBBOTTOM)              TBBOTTOM LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&SAVE' EQ '').BYP2100
         AIF   ('&SAVE'(1,1) EQ '''').BYP2110
         DC    A(&SAVE)                 ADDRESS OF SAVE NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR SAVE NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED SAVE
.BYP2150 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP2200
         AIF   ('&ROWID'(1,1) EQ '''').BYP2210
         DC    A(&ROWID)                ADDRESS OF ROWID NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROWID
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROWID
.BYP2250 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP2300
         DC    A(NOREAD)                ADDRESS OF NOREAD KEYWORD
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NOREAD
.BYP2350 ANOP
.*
         AIF   ('&POS' EQ '').BYP2400
         AIF   ('&POS'(1,1) EQ '''').BYP2410
         DC    A(&POS+X'80000000')      ADDRESS OF POS NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR POS
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFP&NDX+X'80000000')  ADDRESS OF GENERATED POS
.BYP2450 ANOP
.*
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'NOREAD KEYWORD EXPECTED - FOUND ''&NOREAD'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBCLOSE 8512-85095-85095-1207-00254-00254-00000-ISPFDYN
         MACRO
&NAME    @TBCLOSE &TABLE,               TABLE NAME                     *
               &NEWCOPY,                NEWCOPY OR REPLCOPY            *
               &ALT,                    ALTERNATE NAME FOR SAVE        *
               &PER,                    PERCENT                        *
               &LIB,                    LIBRARY                        *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBCLOSE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFNEWCOPY,&SPFREPLCOPY
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NEWCOPY' NE '' AND '&NEWCOPY' NE 'NEWCOPY' AND       *
               '&NEWCOPY' NE 'REPLCOPY').ERR2
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBCLOSE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&NEWCOPY' EQ 'NEWCOPY' AND NOT &SPFNEWCOPY).GENLIT
         AIF   ('&NEWCOPY' EQ 'REPLCOPY' AND NOT &SPFREPLCOPY).GENLIT
         AIF   ('&ALT' EQ '').CNT3
         AIF   ('&ALT'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   (T'&PER EQ 'N').GENLIT
         AIF   ('&LIB' EQ '').CNT5
         AIF   ('&LIB'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBCLOSE).BYP20
TBCLOSE  DC    CL8'TBCLOSE'             ISPF KEYWORD
&SPFTBCLOSE SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&NEWCOPY' EQ '').BYP40
         AIF   ('&NEWCOPY' NE 'NEWCOPY' OR &SPFNEWCOPY).BYP35
NEWCOPY  DC    CL8'NEWCOPY'             ISPF KEYWORD
&SPFNEWCOPY SETB 1
.BYP35   ANOP
         AIF   ('&NEWCOPY' NE 'REPLCOPY' OR &SPFREPLCOPY).BYP40
REPLCOPY DC    CL8'REPLCOPY'            ISPF KEYWORD
&SPFREPLCOPY SETB 1
.BYP40   ANOP
         AIF   ('&ALT' EQ '').BYP50
         AIF   ('&ALT'(1,1) NE '''').BYP50
SPFA&NDX DC    CL8&ALT                  GENERATED ALT NAME
.BYP50   ANOP
         AIF   (T'&PER NE 'N').BYP60
SPFP&NDX DC    F'&PER'                  GENERATED PERCENTAGE
.BYP60   ANOP
         AIF   ('&LIB' EQ '').BYP70
         AIF   ('&LIB'(1,1) NE '''').BYP70
SPFL&NDX DC    CL8&LIB                  GENERATED LIBRARY
.BYP70   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBCLOSE               GET ADDRESS OF TBCLOSE KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&NEWCOPY' EQ '').BYP1100
         LA    0,&NEWCOPY               GET ADDRESS OF COPY NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR COPY
.BYP1150 ANOP
.*
         AIF   ('&ALT' EQ '').BYP1200
         AIF   ('&ALT'(1,1) EQ '''').BYP1210
         LA    1,&ALT                   GET ADDRESS OF ALT NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ALT
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFA&NDX               GET ADDRESS OF GENERATED ALT
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&PER' EQ '').BYP1300
         AIF   (T'&PER EQ 'N').BYP1310
         LA    14,&PER                  GET ADDRESS OF PERCENT
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR PERCENT
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFP&NDX              GET ADDRESS OF GENERATED PERCT
.BYP1350 ANOP
.*
         AIF   ('&LIB' EQ '').BYP1400
         AIF   ('&LIB'(1,1) EQ '''').BYP1410
         LA    15,&LIB                  GET ADDRESS OF LIB NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR LIB
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFL&NDX              GET ADDRESS OF GENERATED LIB
.BYP1450 ANOP
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBCLOSE)               TBCLOSE LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&NEWCOPY' EQ '').BYP2100
         DC    A(&NEWCOPY)              ADDRESS OF COPY NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR COPY NAME
.BYP2150 ANOP
.*
         AIF   ('&ALT' EQ '').BYP2200
         AIF   ('&ALT'(1,1) EQ '''').BYP2210
         DC    A(&ALT)                  ADDRESS OF ALT NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ALT
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENERATED ALT
.BYP2250 ANOP
.*
         AIF   ('&PER' EQ '').BYP2300
         AIF   (T'&PER EQ 'N').BYP2310
         DC    A(&PER)                  ADDRESS OF PERCENT
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PERCENT
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFP&NDX)              ADDRESS OF GENERATED PERCENT
.BYP2350 ANOP
.*
         AIF   ('&LIB' EQ '').BYP2400
         AIF   ('&LIB'(1,1) EQ '''').BYP2410
         DC    A(&LIB+X'80000000')      ADDRESS OF LIB NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR LIB
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFL&NDX+X'80000000')  ADDRESS OF GENERATED LIB
.BYP2450 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'NEWCOPY OR REPLCOPY EXPECTED AS KEYWORD - FOUND ''&N*
               EWCOPY'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBCREAT 8512-85095-85095-1207-00306-00306-00000-ISPFDYN
         MACRO
&LBL     @TBCREAT &TABLE,               TABLE NAME                     *
               &KEYS,                   KEYS NAME LIST                 *
               &NAME,                   NAMES NAME LIST                *
               &WRITE,                  WRITE NOWRITE KEYWORD          *
               &REP,                    REPLACE KEYWORD                *
               &LIB,                    LIBRARY                        *
               &SHARE,                  SHARE STATUS                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBCREATE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFREPLACE,&SPFSHARE,&SPFWRITE,&SPFNOWRITE
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LBL' EQ '').BYP10
&LBL     DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&REP' NE '' AND '&REP' NE 'REPLACE').ERR2
         AIF   ('&SHARE' NE '' AND '&SHARE' NE 'SHARE').ERR3
         AIF   ('&WRITE' NE '' AND '&WRITE' NE 'WRITE' AND             *
               '&WRITE' NE 'NOWRITE').ERR4
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBCREATE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&KEYS' EQ '').CNT2
         AIF   ('&KEYS'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&NAME' EQ '').CNT3
         AIF   ('&NAME'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&WRITE' EQ 'WRITE' AND NOT &SPFWRITE).GENLIT
         AIF   ('&WRITE' EQ 'NOWRITE' AND NOT &SPFNOWRITE).GENLIT
.CNT4    ANOP
         AIF   ('&REP' NE '' AND NOT &SPFREPLACE).GENLIT
         AIF   ('&LIB' EQ '').CNT6
         AIF   ('&LIB'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AIF   ('&SHARE' NE '' AND NOT &SPFSHARE).GENLIT
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBCREATE).BYP20
TBCREATE DC    CL8'TBCREATE'            ISPF KEYWORD
&SPFTBCREATE SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&KEYS' EQ '').BYP40
         AIF   ('&KEYS'(1,1) NE '''').BYP40
SPFK&NDX DC    C&KEYS                   GENERATED KEYS NAME LIST
.BYP40   ANOP
         AIF   ('&NAME' EQ '').BYP50
         AIF   ('&NAME'(1,1) NE '''').BYP50
SPFN&NDX DC    C&NAME                   GENERATED NAMELIST
.BYP50   ANOP
         AIF   ('&WRITE' EQ '').BYP60
         AIF   ('&WRITE' NE 'WRITE' OR &SPFWRITE).BYP55
WRITE    DC    CL8'WRITE'               ISPF KEYWORD
&SPFWRITE SETB 1
.BYP55   ANOP
         AIF   ('&WRITE' NE 'NOWRITE' OR &SPFNOWRITE).BYP60
NOWRITE  DC    CL8'NOWRITE'             ISPF KEYWORD
&SPFNOWRITE SETB 1
.BYP60   ANOP
         AIF   ('&REP' EQ '').BYP70
         AIF   (&SPFREPLACE).BYP70
REPLACE  DC    CL8'REPLACE'             GENERATED REPLACE KEYWORD
.BYP70   ANOP
         AIF   ('&LIB' EQ '').BYP80
         AIF   ('&LIB'(1,1) NE '''').BYP80
SPFL&NDX DC    CL8&LIB                  GENERATED LIBRARY
.BYP80   ANOP
         AIF   ('&SHARE' EQ '').BYP90
         AIF   (&SPFSHARE).BYP90
SHARE    DC    CL8'SHARE'               GENERATED SHARE KEYWORD
.BYP90   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBCREATE              GET ADDRESS OF TBCREATE KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&KEYS' EQ '').BYP1100
         AIF   ('&KEYS'(1,1) EQ '''').BYP1110
         LA    0,&KEYS                  GET ADDRESS OF KEYS NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR KEYS
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFK&NDX               GET ADDRESS OF GENERATED KEYS
.BYP1150 ANOP
.*
         AIF   ('&NAME' EQ '').BYP1200
         AIF   ('&NAME'(1,1) EQ '''').BYP1210
         LA    1,&NAME                  GET ADDRESS OF NAME NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR NAME
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFN&NDX               GET ADDRESS OF GENERATED NAME
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&WRITE' EQ '').BYP1300
         LA    14,&WRITE                GET ADDRESS OF WRITE NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR WRITE
.BYP1350 ANOP
.*
         AIF   ('&REP' EQ '').BYP1400
         LA    15,REPLACE               GET ADDRESS OF REPLACE KEYWORD
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR REPLACE
.BYP1450 ANOP
.*
         AIF   ('&LIB' EQ '').BYP1500
         AIF   ('&LIB'(1,1) EQ '''').BYP1510
         LA    0,&LIB                   GET ADDRESS OF LIB NAME
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR LIB
         AGO   .BYP1550
.BYP1510 ANOP
         LA    0,SPFL&NDX               GET ADDRESS OF GENERATED LIB
.BYP1550 ANOP
.*
         AIF   ('&SHARE' EQ '').BYP1600
         LA    1,SHARE                  GET ADDRESS OF SHARE NAME
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR SHARE
         AGO   .BYP1650
.BYP1650 ANOP
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
         OI    &TEMP+28,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 8).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 8).BYPVARS
&SPFVARS SETA  8
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBCREATE)              TBCREATE LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&KEYS' EQ '').BYP2100
         AIF   ('&KEYS'(1,1) EQ '''').BYP2110
         DC    A(&KEYS)                 ADDRESS OF KEYS NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR KEYS NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFK&NDX)              ADDRESS OF GENERATED KEYS
.BYP2150 ANOP
.*
         AIF   ('&NAME' EQ '').BYP2200
         AIF   ('&NAME'(1,1) EQ '''').BYP2210
         DC    A(&NAME)                 ADDRESS OF NAME LIST
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAME
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFN&NDX)              ADDRESS OF GENERATED NAME
.BYP2250 ANOP
.*
         AIF   ('&WRITE' EQ '').BYP2300
         DC    A(&WRITE)                ADDRESS OF WRITE KEYWORD
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR WRITE
.BYP2350 ANOP
.*
         AIF   ('&REP' EQ '').BYP2400
         DC    A(REPLACE)               ADDRESS OF REPLACE KEYWORD
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR REP
.BYP2450 ANOP
.*
         AIF   ('&LIB' EQ '').BYP2500
         AIF   ('&LIB'(1,1) EQ '''').BYP2510
         DC    A(&LIB)                  ADDRESS OF LIB NAME
         AGO   .BYP2550
.BYP2500 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR LIB
         AGO   .BYP2550
.BYP2510 ANOP
         DC    A(SPFL&NDX)              ADDRESS OF GENERATED LIB
.BYP2550 ANOP
.*
         AIF   ('&SHARE' EQ '').BYP2800
         DC    A(SHARE+X'80000000')     ADDRESS OF SHARE KEYWORD
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR SHARE
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'REPLACE KEYWORD EXPECTED - FOUND ''&REP'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'SHARE KEYWORD EXPECTED - FOUND ''&SHARE'''
         MEXIT
.ERR4    ANOP
         MNOTE 16,'WRITE/NOWRITE KEYWORD EXPECTED - FOUND ''&WRITE'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBDISPL 8512-85095-85095-1207-00377-00377-00000-ISPFDYN
         MACRO
&NAME    @TBDISPL &TABLE,               TABLE NAME                     *
               &PANEL,                  PANEL NAME                     *
               &MSG,                    MESSAGE ID                     *
               &FIELD,                  FIELD FOR CURSOR               *
               &ROW,                    TABLE ROW NUMBER               *
               &CSRPOS,                 CURSOR POSITION                *
               &AUTOSEL,                AUTOSEL INDICATOR              *
               &CRPROW,                 ROW POINTED TO BY CRP          *
               &ROWID,                  SPECIAL ROWN NUMBER            *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBDISPL,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFYES,&SPFNO
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&AUTOSEL' NE '' AND '&AUTOSEL' NE 'YES' AND           *
               '&AUTOSEL' NE 'NO').ERR2
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBDISPL).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&PANEL' EQ '').CNT2
         AIF   ('&PANEL'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&MSG' EQ '').CNT3
         AIF   ('&MSG'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&FIELD' EQ '').CNT4
         AIF   ('&FIELD'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&ROW' EQ '').CNT5
         AIF   ('&ROW'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AIF   ('&CSRPOS' EQ '').CNT6
         AIF   ('&CSRPOS'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AIF   ('&AUTOSEL' EQ 'YES' AND NOT &SPFYES).GENLIT
         AIF   ('&AUTOSEL' EQ 'NO' AND  NOT &SPFNO).GENLIT
.CNT7    ANOP
         AIF   ('&CRPROW' EQ '').CNT8
         AIF   ('&CRPROW'(1,1) EQ '''').GENLIT
.CNT8    ANOP
         AIF   ('&ROWID' EQ '').CNT9
         AIF   ('&ROWID'(1,1) EQ '''').GENLIT
.CNT9    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBDISPL).BYP20
TBDISPL  DC    CL8'TBDISPL'             ISPF KEYWORD
&SPFTBDISPL SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&PANEL' EQ '').BYP40
         AIF   ('&PANEL'(1,1) NE '''').BYP40
SPFP&NDX DC    CL8&PANEL                GENERATED PANEL NAME
.BYP40   ANOP
         AIF   ('&MSG' EQ '').BYP50
         AIF   ('&MSG'(1,1) NE '''').BYP50
SPFM&NDX DC    CL8&MSG                  GENERATED MSG NAME
.BYP50   ANOP
         AIF   ('&FIELD' EQ '').BYP60
         AIF   ('&FIELD'(1,1) NE '''').BYP60
SPFF&NDX DC    CL8&FIELD                GENERATED FIELD NAME
.BYP60   ANOP
         AIF   ('&ROW' EQ '').BYP70
         AIF   ('&ROW'(1,1) NE '''').BYP70
SPFR&NDX DC    CL8&ROW                  GENERATED ROW NAME
.BYP70   ANOP
         AIF   ('&CSRPOS' EQ '').BYP80
         AIF   ('&CSRPOS'(1,1) NE '''').BYP80
SPFC&NDX DC    CL8&CSRPOS               GENERATED CSRPOS
.BYP80   ANOP
         AIF   ('&AUTOSEL' EQ '').BYP90
         AIF   ('&AUTOSEL' NE 'YES' OR &SPFYES).BYP85
YES      DC    CL8'YES'                 ISPF KEYWORD
&SPFYES  SETB  1
.BYP85   ANOP
         AIF   ('&AUTOSEL' NE 'NO' OR &SPFNO).BYP90
NO       DC    CL8'NO'                  ISPF KEYWORD
&SPFNO   SETB  1
.BYP90   ANOP
         AIF   ('&CRPROW' EQ '').BYP100
         AIF   ('&CRPROW'(1,1) NE '''').BYP100
SPFW&NDX DC    CL8&CRPROW               GENERATED CRPROW VALUE
.BYP100  ANOP
         AIF   ('&ROWID' EQ '').BYP110
         AIF   ('&ROWID'(1,1) NE '''').BYP110
SPFI&NDX DC    CL8&ROWID                GENERATED ROWID VALUE
.BYP110  ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBDISPL               GET ADDRESS OF TBDISPL KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&PANEL' EQ '').BYP1100
         AIF   ('&PANEL'(1,1) EQ '''').BYP1110
         LA    0,&PANEL                 GET ADDRESS OF PANEL NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR PANEL
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFP&NDX               GET ADDRESS OF GENERATED PANEL
.BYP1150 ANOP
.*
         AIF   ('&MSG' EQ '').BYP1200
         AIF   ('&MSG'(1,1) EQ '''').BYP1210
         LA    1,&MSG                   GET ADDRESS OF MSG NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR MSG
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFM&NDX               GET ADDRESS OF GENERATED MSG
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&FIELD' EQ '').BYP1300
         AIF   ('&FIELD'(1,1) EQ '''').BYP1310
         LA    14,&FIELD                GET ADDRESS OF FIELD NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR FIELD
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFF&NDX              GET ADDRESS OF GENERATED FIELD
.BYP1350 ANOP
.*
         AIF   ('&ROW' EQ '').BYP1400
         AIF   ('&ROW'(1,1) EQ '''').BYP1410
         LA    15,&ROW                  GET ADDRESS OF ROW NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR ROW
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFR&NDX              GET ADDRESS OF GENERATED ROW
.BYP1450 ANOP
.*
         AIF   ('&CSRPOS' EQ '').BYP1500
         AIF   ('&CSRPOS'(1,1) EQ '''').BYP1510
         LA    0,&CSRPOS                GET ADDRESS OF CSRPOS NAME
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR CSRPOS
         AGO   .BYP1550
.BYP1510 ANOP
         LA    0,SPFC&NDX               GET ADDRESS OF GENERATED CSRPOS
.BYP1550 ANOP
.*
         AIF   ('&AUTOSEL' EQ '').BYP1600
         LA    1,&AUTOSEL               GET ADDRESS OF AUTOSEL NAME
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR AUTOSEL
.BYP1650 ANOP
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
         AIF   ('&CRPROW' EQ '').BYP1700
         AIF   ('&CRPROW'(1,1) EQ '''').BYP1710
         LA    14,&CRPROW               GET ADDRESS OF CRPROW NAME
         AGO   .BYP1750
.BYP1700 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR CRPROW
         AGO   .BYP1750
.BYP1710 ANOP
         LA    14,SPFW&NDX              GET ADDRESS OF GENERATED CRPROW
.BYP1750 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP1800
         AIF   ('&ROWID'(1,1) EQ '''').BYP1810
         LA    15,&ROWID                GET ADDRESS OF ROWID NAME
         AGO   .BYP1850
.BYP1800 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR ROWID
         AGO   .BYP1850
.BYP1810 ANOP
         LA    15,SPFI&NDX              GET ADDRESS OF GENERATED ROWID
.BYP1850 ANOP
         STM   14,15,&TEMP+32           STORE PARAMETERS INTO LIST
         OI    &TEMP+36,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 10).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 10).BYPVARS
&SPFVARS SETA  10
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBDISPL)               TBDISPL LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&PANEL' EQ '').BYP2100
         AIF   ('&PANEL'(1,1) EQ '''').BYP2110
         DC    A(&PANEL)                ADDRESS OF PANEL NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PANEL NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFP&NDX)              ADDRESS OF GENERATED PANEL
.BYP2150 ANOP
.*
         AIF   ('&MSG' EQ '').BYP2200
         AIF   ('&MSG'(1,1) EQ '''').BYP2210
         DC    A(&MSG)                  ADDRESS OF MSG NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MSG
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFM&NDX)              ADDRESS OF GENERATED MSG
.BYP2250 ANOP
.*
         AIF   ('&FIELD' EQ '').BYP2300
         AIF   ('&FIELD'(1,1) EQ '''').BYP2310
         DC    A(&FIELD)                ADDRESS OF FIELD NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR FIELD
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFF&NDX)              ADDRESS OF GENERATED FIELD
.BYP2350 ANOP
.*
         AIF   ('&ROW' EQ '').BYP2400
         AIF   ('&ROW'(1,1) EQ '''').BYP2410
         DC    A(&ROW)                  ADDRESS OF ROW NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROW
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROW
.BYP2450 ANOP
.*
         AIF   ('&CSRPOS' EQ '').BYP2500
         AIF   ('&CSRPOS'(1,1) EQ '''').BYP2510
         DC    A(&CSRPOS)               ADDRESS OF CSRPOS NAME
         AGO   .BYP2550
.BYP2500 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR CSRPOS
         AGO   .BYP2550
.BYP2510 ANOP
         DC    A(SPFC&NDX)              ADDRESS OF GENERATED CSRPOS
.BYP2550 ANOP
.*
         AIF   ('&AUTOSEL' EQ '').BYP2600
         DC    A(&AUTOSEL)              ADDRESS OF AUTOSEL NAME
         AGO   .BYP2650
.BYP2600 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR AUTOSEL
.BYP2650 ANOP
.*
         AIF   ('&CRPROW' EQ '').BYP2700
         AIF   ('&CRPROW'(1,1) EQ '''').BYP2710
         DC    A(&CRPROW)               ADDRESS OF CRPROW NAME
         AGO   .BYP2750
.BYP2700 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR CRPROW
         AGO   .BYP2750
.BYP2710 ANOP
         DC    A(SPFW&NDX)              ADDRESS OF GENERATED CRPROW
.BYP2750 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP2800
         AIF   ('&ROWID'(1,1) EQ '''').BYP2810
         DC    A(&ROWID+X'80000000')    ADDRESS OF ROWID NAME
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR ROWID
         AGO   .BYP2850
.BYP2810 ANOP
         DC    A(SPFI&NDX+X'80000000')  ADDRESS OF GENERATED ROWID
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID AUTOSEL VALUE - FOUND ''&AUTOSEL'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBERASE 8512-85095-85095-1207-00157-00157-00000-ISPFDYN
         MACRO
&NAME    @TBERASE &MEM,                 MEMBER NAME                    *
               &LIB,                    LIBRARY NAME                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBERASE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&MEM' EQ '').ERR1
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBERASE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&MEM' EQ '').CNT1
         AIF   ('&MEM'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&LIB' EQ '').CNT2
         AIF   ('&LIB'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBERASE).BYP20
TBERASE  DC    CL8'TBERASE'             ISPF KEYWORD
&SPFTBERASE SETB 1
.BYP20   ANOP
         AIF   ('&MEM' EQ '').BYP40
         AIF   ('&MEM'(1,1) NE '''').BYP40
SPFM&NDX DC    CL8&MEM                  GENERATED MEMBER NAME
.BYP40   ANOP
         AIF   ('&LIB' EQ '').BYP50
         AIF   ('&LIB'(1,1) NE '''').BYP50
SPFL&NDX DC    CL8&LIB                  GENERATED LIBRARY
.BYP50   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBERASE               GET ADDRESS OF TBERASE KEYWORD
         AIF   ('&MEM' EQ '').BYP100
         AIF   ('&MEM'(1,1) EQ '''').BYP110
         LA    15,&MEM                  GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFM&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         AIF   ('&LIB' EQ '').BYP140
         AIF   ('&LIB'(1,1) NE '''').BYP130
         LA    0,SPFL&NDX               GET ADDRESS OF GENERATED LIB
         AGO   .BYP150
.BYP130  ANOP
         LA    0,&LIB                   GET ADDRESS OF LIBRARY
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR LIBRARY
.BYP150  ANOP
         STM   14,0,&TEMP               STORE PARAMETERS
         OI    &TEMP+8,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBERASE)               BROWSE LITERAL
         AIF   ('&MEM' EQ '').BYP200
         AIF   ('&MEM'(1,1) EQ '''').BYP210
         DC    A(&MEM)                  ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFM&NDX)              ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MEMBER
.BYP220  ANOP
         AIF   ('&LIB' EQ '').BYP240
         AIF   ('&LIB'(1,1) NE '''').BYP230
         DC    A(SPFL&NDX+X'80000000')  ADDRESS OF GENERATED LIBRARY
         AGO   .BYP250
.BYP230  ANOP
         DC    A(&LIB+X'80000000')      ADDRESS OF LIBRARY
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR LIBRARY
.BYP250  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'MEMBER NAME REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBGET   8512-85095-85095-1207-00254-00254-00000-ISPFDYN
         MACRO
&NAME    @TBGET &TABLE,                 TABLE NAME                     *
               &SAVE,                   SAVE NAME-LIST                 *
               &ROWID,                  ROW ID NAME                    *
               &NOREAD,                 NOREAD KEYWORD                 *
               &POS,                    POSITION NUMBER                *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBGET,&SPFNULLC,&SPFDEBUG,&SPFVAR,&SPFNOREAD
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NOREAD' NE '' AND                                    *
               '&NOREAD' NE 'NOREAD').ERR2
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBGET).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&SAVE' EQ '').CNT2
         AIF   ('&SAVE'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&ROWID' EQ '').CNT3
         AIF   ('&ROWID'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&NOREAD' NE '' AND NOT &SPFNOREAD).GENLIT
         AIF   ('&POS' EQ '').CNT4
         AIF   ('&POS'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&POS' EQ '').CNT5
         AIF   ('&POS'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBGET).BYP20
TBGET DC       CL8'TBGET'               ISPF KEYWORD
&SPFTBGET SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&SAVE' EQ '').BYP40
         AIF   ('&SAVE'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&SAVE                 GENERATED SAVE NAME-LIST
.BYP40   ANOP
         AIF   ('&ROWID' EQ '').BYP50
         AIF   ('&ROWID'(1,1) NE '''').BYP50
SPFR&NDX DC    CL8&ROWID                GENERATED ROWID VAR NAME
.BYP50   ANOP
         AIF   ('&NOREAD' EQ '').BYP60
         AIF   (&SPFNOREAD).BYP60
NOREAD   DC    CL8'NOREAD'              GENERATED NOREAD KEYWORD
&SPFNOREAD SETB 1
.BYP60   ANOP
         AIF   ('&POS' EQ '').BYP70
         AIF   ('&POS'(1,1) NE '''').BYP70
SPFP&NDX DC    CL8&POS                  GENERATED POSITION VAR
.BYP70   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBGET                 GET ADDRESS OF TBGET KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&SAVE' EQ '').BYP1100
         AIF   ('&SAVE'(1,1) EQ '''').BYP1110
         LA    0,&SAVE                  GET ADDRESS OF SAVE NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR SAVE
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SAVE
.BYP1150 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP1200
         AIF   ('&ROWID'(1,1) EQ '''').BYP1210
         LA    1,&ROWID                 GET ADDRESS OF ROWID NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ROWID
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFR&NDX               GET ADDRESS OF GENERATED ROWID
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&NOREAD' EQ '').BYP1300
         LA    14,NOREAD                GET ADDRESS OF NOREAD KEYWORD
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR NOREAD
.BYP1350 ANOP
.*
         AIF   ('&POS' EQ '').BYP1400
         AIF   ('&POS'(1,1) EQ '''').BYP1410
         LA    15,&POS                  GET ADDRESS OF POS NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR POS
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFP&NDX              GET ADDRESS OF GENERATED POS
.BYP1450 ANOP
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBGET)                 TBGET LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&SAVE' EQ '').BYP2100
         AIF   ('&SAVE'(1,1) EQ '''').BYP2110
         DC    A(&SAVE)                 ADDRESS OF SAVE NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR SAVE NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED SAVE
.BYP2150 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP2200
         AIF   ('&ROWID'(1,1) EQ '''').BYP2210
         DC    A(&ROWID)                ADDRESS OF ROWID NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROWID
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROWID
.BYP2250 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP2300
         DC    A(NOREAD)                ADDRESS OF NOREAD KEYWORD
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NOREAD
.BYP2350 ANOP
.*
         AIF   ('&POS' EQ '').BYP2400
         AIF   ('&POS'(1,1) EQ '''').BYP2410
         DC    A(&POS+X'80000000')      ADDRESS OF POS NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR POS
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFP&NDX+X'80000000')  ADDRESS OF GENERATED POS
.BYP2450 ANOP
.*
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'NOREAD KEYWORD EXPECTED - FOUND ''&NOREAD'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBMOD   8512-85095-85095-1207-00181-00181-00000-ISPFDYN
         MACRO
&NAME    @TBMOD &TABLE,                 TABLE NAME                     *
               &SAVE,                   SAVE NAME-LIST                 *
               &ORDER,                  ORDER KEYWORD                  *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBMOD,&SPFDEBUG,&SPFVAR,&SPFORDER,&SPFNULLC
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&ORDER' NE '' AND                                     *
               '&ORDER' NE 'ORDER').ERR1
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBMOD).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&ORDER' NE '' AND NOT &SPFORDER).GENLIT
         AIF   ('&SAVE' EQ '').CNT2
         AIF   ('&SAVE'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBMOD).BYP20
TBMOD    DC    CL8'TBMOD'               ISPF KEYWORD
&SPFTBMOD SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
         AIF   ('&SAVE' EQ '').BYP50
         AIF   ('&SAVE'(1,1) NE '''').BYP50
SPFS&NDX DC    C&SAVE                   GENERATED NAME-LIST
.BYP50   ANOP
         AIF   ('&ORDER' EQ '').BYP60
         AIF   (&SPFORDER).BYP60
ORDER    DC    CL8'ORDER'               ISPF KEYWORD
&SPFORDER SETB  1
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8' '                   ISPF DUMMY PARM
&SPFNULLC SETB 1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBMOD                 GET ADDRESS OF TBMOD KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         AIF   ('&SAVE' EQ '').BYP140
         AIF   ('&SAVE'(1,1) EQ '''').BYP130
         LA    0,&SAVE                  GET ADDRESS OF NAME-LIST
         AGO   .BYP150
.BYP130  ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SAVE
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR NAME-LIST
.BYP150  ANOP
         AIF   ('&ORDER' EQ '').BYP170
         LA    1,ORDER                  GET ADDRESS OF ORDER
         AGO   .BYP180
.BYP170  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ORDER
.BYP180  ANOP
         STM   14,1,&TEMP               STORE PARAMETERS
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBMOD)                 BROWSE LITERAL
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE)                ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE
.BYP220  ANOP
         AIF   ('&SAVE' EQ '').BYP240
         AIF   ('&SAVE'(1,1) EQ '''').BYP230
         DC    A(&SAVE)                 ADDRESS OF NAME LIST
         AGO   .BYP250
.BYP230  ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED NAME LIST
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAME LIST
.BYP250  ANOP
         AIF   ('&ORDER' EQ '').BYP270
         DC    A(ORDER+X'80000000')     ADDRESS OF ORDER KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR ORDER
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'ORDER KEYWORD EXPECTED - FOUND ''&ORDER'''
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBOPEN  8512-85095-85095-1207-00222-00222-00000-ISPFDYN
         MACRO
&NAME    @TBOPEN &TABLE,                TABLE NAME                     *
               &WRITE,                  WRITE/NOWRITE PARM             *
               &LIB,                    LIBRARY                        *
               &SHARE,                  SHARE OPERAND                  *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBOPEN,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFSHARE,&SPFWRITE,&SPFNOWRITE
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&SHARE' NE '' AND '&SHARE' NE 'SHARE').ERR2
         AIF   ('&WRITE' NE '' AND '&WRITE' NE 'WRITE' AND             *
               '&WRITE' NE 'NOWRITE').ERR3
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBOPEN).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&WRITE' EQ 'WRITE' AND NOT &SPFWRITE).GENLIT
         AIF   ('&WRITE' EQ 'NOWRITE' AND NOT &SPFNOWRITE).GENLIT
         AIF   ('&LIB' EQ '').CNT3
         AIF   ('&LIB'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&SHARE' EQ '').CNT4
         AIF   ('&SHARE'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBOPEN).BYP20
TBOPEN   DC    CL8'TBOPEN'              ISPF KEYWORD
&SPFTBOPEN SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&WRITE' EQ '').BYP40
         AIF   ('&WRITE' NE 'WRITE' OR &SPFWRITE).BYP35
WRITE    DC    CL8'WRITE'               ISPF KEYWORD
&SPFWRITE SETB 1
.BYP35   ANOP
         AIF   ('&WRITE' NE 'NOWRITE' OR &SPFNOWRITE).BYP40
NOWRITE  DC    CL8'NOWRITE'             ISPF KEYWORD
&SPFNOWRITE SETB 1
.BYP40   ANOP
         AIF   ('&LIB' EQ '').BYP50
         AIF   ('&LIB'(1,1) NE '''').BYP50
SPFL&NDX DC    CL8&LIB                  GENERATED LIB NAME
.BYP50   ANOP
         AIF   ('&SHARE' EQ '' OR &SPFSHARE).BYP60
SHARE    DC    CL8'SHARE'               ISPF KEYWORD
&SPFSHARE SETB 1
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBOPEN                GET ADDRESS OF TBOPEN KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&WRITE' EQ '').BYP1100
         LA    0,&WRITE                 GET ADDRESS OF WRITE NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR WRITE
.BYP1150 ANOP
.*
         AIF   ('&LIB' EQ '').BYP1200
         AIF   ('&LIB'(1,1) EQ '''').BYP1210
         LA    1,&LIB                   GET ADDRESS OF LIB NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR LIB
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFL&NDX               GET ADDRESS OF GENERATED LIB
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&SHARE' EQ '').BYP1300
         LA    14,SHARE                 GET ADDRESS OF FIELD NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR FIELD
.BYP1350 ANOP
.*
         ST    14,&TEMP+16              STORE PARAMETERS INTO LIST
         OI    &TEMP+16,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 5).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 5).BYPVARS
&SPFVARS SETA  5
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBOPEN)                TBOPEN LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&WRITE' EQ '').BYP2100
         DC    A(&WRITE)                ADDRESS OF WRITE NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR WRITE NAME
.BYP2150 ANOP
.*
         AIF   ('&LIB' EQ '').BYP2200
         AIF   ('&LIB'(1,1) EQ '''').BYP2210
         DC    A(&LIB)                  ADDRESS OF LIB NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR LIB
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFL&NDX)              ADDRESS OF GENERATED LIB
.BYP2250 ANOP
.*
         AIF   ('&SHARE' EQ '').BYP2300
         DC    A(SHARE+X'80000000')     ADDRESS OF SHARE NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR SHARE
.BYP2350 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'SHARE KEYWORD EXPECTED - FOUND ''&SHARE'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'WRITE NOWRITE KEYWORD EXPECTED - FOUND ''&WRITE'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBPUT   8512-85095-85095-1207-00181-00181-00000-ISPFDYN
         MACRO
&NAME    @TBPUT &TABLE,                 TABLE NAME                     *
               &SAVE,                   SAVE NAME-LIST                 *
               &ORDER,                  ORDER KEYWORD                  *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBPUT,&SPFDEBUG,&SPFVAR,&SPFORDER,&SPFNULLC
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&ORDER' NE '' AND                                     *
               '&ORDER' NE 'ORDER').ERR1
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBPUT).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&ORDER' NE '' AND NOT &SPFORDER).GENLIT
         AIF   ('&SAVE' EQ '').CNT2
         AIF   ('&SAVE'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBPUT).BYP20
TBPUT    DC    CL8'TBPUT'               ISPF KEYWORD
&SPFTBPUT SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
         AIF   ('&SAVE' EQ '').BYP50
         AIF   ('&SAVE'(1,1) NE '''').BYP50
SPFS&NDX DC    C&SAVE                   GENERATED NAME-LIST
.BYP50   ANOP
         AIF   ('&ORDER' EQ '').BYP60
         AIF   (&SPFORDER).BYP60
ORDER    DC    CL8'ORDER'               ISPF KEYWORD
&SPFORDER SETB  1
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8' '                   ISPF DUMMY PARM
&SPFNULLC SETB 1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBPUT                 GET ADDRESS OF TBPUT KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         AIF   ('&SAVE' EQ '').BYP140
         AIF   ('&SAVE'(1,1) EQ '''').BYP130
         LA    0,&SAVE                  GET ADDRESS OF NAME-LIST
         AGO   .BYP150
.BYP130  ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SAVE
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR NAME-LIST
.BYP150  ANOP
         AIF   ('&ORDER' EQ '').BYP170
         LA    1,ORDER                  GET ADDRESS OF ORDER
         AGO   .BYP180
.BYP170  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ORDER
.BYP180  ANOP
         STM   14,1,&TEMP               STORE PARAMETERS
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBPUT)                 BROWSE LITERAL
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE)                ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE
.BYP220  ANOP
         AIF   ('&SAVE' EQ '').BYP240
         AIF   ('&SAVE'(1,1) EQ '''').BYP230
         DC    A(&SAVE)                 ADDRESS OF NAME LIST
         AGO   .BYP250
.BYP230  ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED NAME LIST
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAME LIST
.BYP250  ANOP
         AIF   ('&ORDER' EQ '').BYP270
         DC    A(ORDER+X'80000000')     ADDRESS OF ORDER KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR ORDER
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'ORDER KEYWORD EXPECTED - FOUND ''&ORDER'''
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBQUERY 8512-85095-85095-1207-00314-00314-00000-ISPFDYN
         MACRO
&NAME    @TBQUERY &TABLE,               TABLE NAME                     *
               &KEY,                    KEY NAME                       *
               &VAR,                    VAR NAME                       *
               &ROW,                    NUMBER OF ROWS                 *
               &KEYN,                   NUMBER OF KEYS                 *
               &VARN,                   NUMBER OF NAMES                *
               &CRP,                    CURRENT CRP                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBQUERY,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBQUERY).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&KEY' EQ '').CNT2
         AIF   ('&KEY'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&VAR' EQ '').CNT3
         AIF   ('&VAR'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&ROW' EQ '').CNT4
         AIF   ('&ROW'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&KEYN' EQ '').CNT5
         AIF   ('&KEYN'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AIF   ('&VARN' EQ '').CNT6
         AIF   ('&VARN'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AIF   ('&CRP' EQ '').CNT7
         AIF   ('&CRP'(1,1) EQ '''').GENLIT
.CNT7    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBQUERY).BYP20
TBQUERY  DC    CL8'TBQUERY'             ISPF KEYWORD
&SPFTBQUERY SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&KEY' EQ '').BYP40
         AIF   ('&KEY'(1,1) NE '''').BYP40
SPFK&NDX DC    CL8&KEY                  GENERATED KEY VAR NAME
.BYP40   ANOP
         AIF   ('&VAR' EQ '').BYP50
         AIF   ('&VAR'(1,1) NE '''').BYP50
SPFV&NDX DC    CL8&VAR                  GENERATED VAR NAME
.BYP50   ANOP
         AIF   ('&ROW' EQ '').BYP60
         AIF   ('&ROW'(1,1) NE '''').BYP60
SPFR&NDX DC    CL8&ROW                  GENERATED ROWNUM VAR
.BYP60   ANOP
         AIF   ('&KEYN' EQ '').BYP70
         AIF   ('&KEYN'(1,1) NE '''').BYP70
SPFE&NDX DC    CL8&KEYN                 GENERATED KEYNUM VAR
.BYP70   ANOP
         AIF   ('&VARN' EQ '').BYP80
         AIF   ('&VARN'(1,1) NE '''').BYP80
SPFA&NDX DC    CL8&VARN                 GENERATED VARNUM VAR
.BYP80   ANOP
         AIF   ('&CRP' EQ '').BYP90
         AIF   ('&CRP'(1,1) NE '''').BYP90
SPFC&NDX DC    CL8&CRP                  GENERATED CRP VAR
.BYP90   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBQUERY               GET ADDRESS OF TBQUERY KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&KEY' EQ '').BYP1100
         AIF   ('&KEY'(1,1) EQ '''').BYP1110
         LA    0,&KEY                   GET ADDRESS OF KEY NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR KEY
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFK&NDX               GET ADDRESS OF GENERATED KEY
.BYP1150 ANOP
.*
         AIF   ('&VAR' EQ '').BYP1200
         AIF   ('&VAR'(1,1) EQ '''').BYP1210
         LA    1,&VAR                   GET ADDRESS OF VAR NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR VAR
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFV&NDX               GET ADDRESS OF GENERATED VAR
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&ROW' EQ '').BYP1300
         AIF   ('&ROW'(1,1) EQ '''').BYP1310
         LA    14,&ROW                  GET ADDRESS OF ROW NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR ROW
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFR&NDX              GET ADDRESS OF GENERATED ROW
.BYP1350 ANOP
.*
         AIF   ('&KEYN' EQ '').BYP1400
         AIF   ('&KEYN'(1,1) EQ '''').BYP1410
         LA    15,&KEYN                 GET ADDRESS OF KEYNUM NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR KEYNUM
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFE&NDX              GET ADDRESS OF GENERATED KEY
.BYP1450 ANOP
.*
         AIF   ('&VARN' EQ '').BYP1500
         AIF   ('&VARN'(1,1) EQ '''').BYP1510
         LA    0,&VARN                  GET ADDRESS OF VARN NAME
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR VARN
         AGO   .BYP1550
.BYP1510 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENERATED VARN
.BYP1550 ANOP
.*
         AIF   ('&CRP' EQ '').BYP1600
         AIF   ('&CRP'(1,1) EQ '''').BYP1610
         LA    1,&CRP                   GET ADDRESS OF CRP NAME
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR CRP
         AGO   .BYP1650
.BYP1610 ANOP
         LA    1,SPFC&NDX               GET ADDRESS OF GENERATED CRP
.BYP1650 ANOP
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
         OI    &TEMP+28,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 8).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 8).BYPVARS
&SPFVARS SETA  8
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBQUERY)               TBQUERY LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&KEY' EQ '').BYP2100
         AIF   ('&KEY'(1,1) EQ '''').BYP2110
         DC    A(&KEY)                  ADDRESS OF KEY NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR KEY NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFK&NDX)              ADDRESS OF GENERATED KEY
.BYP2150 ANOP
.*
         AIF   ('&VAR' EQ '').BYP2200
         AIF   ('&VAR'(1,1) EQ '''').BYP2210
         DC    A(&VAR)                  ADDRESS OF VAR NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VAR
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VAR
.BYP2250 ANOP
.*
         AIF   ('&ROW' EQ '').BYP2300
         AIF   ('&ROW'(1,1) EQ '''').BYP2310
         DC    A(&ROW)                  ADDRESS OF ROW NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROW
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROW
.BYP2350 ANOP
.*
         AIF   ('&KEYN' EQ '').BYP2400
         AIF   ('&KEYN'(1,1) EQ '''').BYP2410
         DC    A(&KEYN)                 ADDRESS OF KEYN NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR KEYN
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFE&NDX)              ADDRESS OF GENERATED KEYN
.BYP2450 ANOP
.*
         AIF   ('&VARN' EQ '').BYP2500
         AIF   ('&VARN'(1,1) EQ '''').BYP2510
         DC    A(&VARN)                 ADDRESS OF VARN NAME
         AGO   .BYP2550
.BYP2500 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VARN
         AGO   .BYP2550
.BYP2510 ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENERATED VARN
.BYP2550 ANOP
.*
         AIF   ('&CRP' EQ '').BYP2600
         AIF   ('&CRP'(1,1) EQ '''').BYP2610
         DC    A(&CRP+X'80000000')      ADDRESS OF CRP NAME
         AGO   .BYP2650
.BYP2600 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR CRP
         AGO   .BYP2650
.BYP2610 ANOP
         DC    A(SPFC&NDX+X'80000000')  ADDRESS OF GENERATED AUTOSE
.BYP2650 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBSARG  8512-85095-85095-1207-00225-00225-00000-ISPFDYN
         MACRO
&NAME    @TBSARG &TABLE,                TABLE NAME                     *
               &VAR,                    NAME LIST                      *
               &NEXT,                   NEXT OR PREVIOUS               *
               &COND,                   NAME COND PAIRS                *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBSARG,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFNEXT,&SPFPREVIOUS
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NEXT' NE '' AND '&NEXT' NE 'NEXT' AND                *
               '&NEXT' NE 'PREVIOUS').ERR2
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBSARG).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&VAR' EQ '').CNT2
         AIF   ('&VAR'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&NEXT' EQ 'NEXT' AND NOT &SPFNEXT).GENLIT
         AIF   ('&NEXT' EQ 'PREVIOUS' AND NOT &SPFPREVIOUS).GENLIT
         AIF   ('&COND' EQ '').CNT4
         AIF   ('&COND'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBSARG).BYP20
TBSARG   DC    CL8'TBSARG'              ISPF KEYWORD
&SPFTBSARG SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&VAR' EQ '').BYP40
         AIF   ('&VAR'(1,1) NE '''').BYP40
SPFV&NDX DC    C&VAR                    GENERATED NAMELIST
.BYP40   ANOP
         AIF   ('&NEXT' EQ '').BYP50
         AIF   ('&NEXT' NE 'NEXT' OR &SPFNEXT).BYP45
NEXT     DC    CL8'NEXT'                ISPF KEYWORD
&SPFNEXT SETB  1
.BYP45   ANOP
         AIF   ('&NEXT' NE 'PREVIOUS' OR &SPFPREVIOUS).BYP50
PREVIOUS DC    CL8'PREVIOUS'            ISPF KEYWORD
&SPFPREVIOUS SETB  1
.BYP50   ANOP
         AIF   ('&COND' EQ '').BYP60
         AIF   ('&COND'(1,1) NE '''').BYP60
SPFC&NDX DC    C&COND                   GENERATED CONDITIONS
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBSARG                GET ADDRESS OF TBSARG KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&VAR' EQ '').BYP1100
         AIF   ('&VAR'(1,1) EQ '''').BYP1110
         LA    0,&VAR                   GET ADDRESS OF VAR NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR VAR
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFV&NDX               GET ADDRESS OF GENERATED VAR
.BYP1150 ANOP
.*
         AIF   ('&NEXT' EQ '').BYP1200
         LA    1,&NEXT                  GET ADDRESS OF KEYWORD
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&COND' EQ '').BYP1300
         AIF   ('&COND'(1,1) EQ '''').BYP1310
         LA    14,&COND                 GET ADDRESS OF COND NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR COND
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENERATED COND
.BYP1350 ANOP
         ST    14,&TEMP+16              STORE PARAMETERS INTO LIST
         OI    &TEMP+16,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 5).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 5).BYPVARS
&SPFVARS SETA  5
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBSARG)                TBSARG LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&VAR' EQ '').BYP2100
         AIF   ('&VAR'(1,1) EQ '''').BYP2110
         DC    A(&VAR)                  ADDRESS OF VAR NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VAR NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VAR
.BYP2150 ANOP
.*
         AIF   ('&NEXT' EQ '').BYP2200
         DC    A(&NEXT)                 ISPF KEYWORD
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MSG
.BYP2250 ANOP
.*
         AIF   ('&COND' EQ '').BYP2300
         AIF   ('&COND'(1,1) EQ '''').BYP2310
         DC    A(&COND+X'80000000')     ADDRESS OF COND NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR COND
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFC&NDX+X'80000000')  ADDRESS OF GENERATED COND
.BYP2350 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'NEXT/PREVIOUS KEYWORD EXPECTED - FOUND ''&NEXT'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBSAVE  8512-85095-85095-1207-00253-00253-00000-ISPFDYN
         MACRO
&NAME    @TBSAVE &TABLE,                TABLE NAME                     *
               &NEWCOPY,                NEWCOPY OR REPLCOPY            *
               &ALT,                    ALTERNATE NAME FOR SAVE        *
               &PER,                    PERCENT                        *
               &LIB,                    LIBRARY                        *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBSAVE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFNEWCOPY,&SPFREPLCOPY
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NEWCOPY' NE '' AND '&NEWCOPY' NE 'NEWCOPY' AND       *
               '&NEWCOPY' NE 'REPLCOPY').ERR2
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBSAVE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&NEWCOPY' EQ 'NEWCOPY' AND NOT &SPFNEWCOPY).GENLIT
         AIF   ('&NEWCOPY' EQ 'REPLCOPY' AND NOT &SPFREPLCOPY).GENLIT
         AIF   ('&ALT' EQ '').CNT3
         AIF   ('&ALT'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   (T'&PER EQ 'N').GENLIT
         AIF   ('&LIB' EQ '').CNT5
         AIF   ('&LIB'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBSAVE).BYP20
TBSAVE   DC    CL8'TBSAVE'              ISPF KEYWORD
&SPFTBSAVE SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&NEWCOPY' EQ '').BYP40
         AIF   ('&NEWCOPY' NE 'NEWCOPY' OR &SPFNEWCOPY).BYP35
NEWCOPY  DC    CL8'NEWCOPY'             ISPF KEYWORD
&SPFNEWCOPY SETB 1
.BYP35   ANOP
         AIF   ('&NEWCOPY' NE 'REPLCOPY' OR &SPFREPLCOPY).BYP40
REPLCOPY DC    CL8'REPLCOPY'            ISPF KEYWORD
&SPFREPLCOPY SETB 1
.BYP40   ANOP
         AIF   ('&ALT' EQ '').BYP50
         AIF   ('&ALT'(1,1) NE '''').BYP50
SPFA&NDX DC    CL8&ALT                  GENERATED ALT NAME
.BYP50   ANOP
         AIF   (T'&PER NE 'N').BYP60
SPFP&NDX DC    F'&PER'                  GENERATED PERCENTAGE
.BYP60   ANOP
         AIF   ('&LIB' EQ '').BYP70
         AIF   ('&LIB'(1,1) NE '''').BYP70
SPFL&NDX DC    CL8&LIB                  GENERATED LIBRARY
.BYP70   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBSAVE                GET ADDRESS OF TBSAVE KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&NEWCOPY' EQ '').BYP1100
         LA    0,&NEWCOPY               GET ADDRESS OF COPY NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR COPY
.BYP1150 ANOP
.*
         AIF   ('&ALT' EQ '').BYP1200
         AIF   ('&ALT'(1,1) EQ '''').BYP1210
         LA    1,&ALT                   GET ADDRESS OF ALT NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ALT
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFA&NDX               GET ADDRESS OF GENERATED ALT
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&PER' EQ '').BYP1300
         AIF   (T'&PER EQ 'N').BYP1310
         LA    14,&PER                  GET ADDRESS OF PERCENT
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR PERCENT
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFP&NDX              GET ADDRESS OF GENERATED PERCT
.BYP1350 ANOP
.*
         AIF   ('&LIB' EQ '').BYP1400
         AIF   ('&LIB'(1,1) EQ '''').BYP1410
         LA    15,&LIB                  GET ADDRESS OF LIB NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR LIB
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFL&NDX              GET ADDRESS OF GENERATED LIB
.BYP1450 ANOP
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBSAVE)                TBSAVE LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&NEWCOPY' EQ '').BYP2100
         DC    A(&NEWCOPY)              ADDRESS OF COPY NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR COPY NAME
.BYP2150 ANOP
.*
         AIF   ('&ALT' EQ '').BYP2200
         AIF   ('&ALT'(1,1) EQ '''').BYP2210
         DC    A(&ALT)                  ADDRESS OF ALT NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ALT
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENERATED ALT
.BYP2250 ANOP
.*
         AIF   ('&PER' EQ '').BYP2300
         AIF   (T'&PER EQ 'N').BYP2310
         DC    A(&PER)                  ADDRESS OF PERCENT
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PERCENT
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFP&NDX)              ADDRESS OF GENERATED PERCENT
.BYP2350 ANOP
.*
         AIF   ('&LIB' EQ '').BYP2400
         AIF   ('&LIB'(1,1) EQ '''').BYP2410
         DC    A(&LIB+X'80000000')      ADDRESS OF LIB NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR LIB
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFL&NDX+X'80000000')  ADDRESS OF GENERATED LIB
.BYP2450 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'NEWCOPY/REPLCOPY EXPECTED - FOUND ''&NEWCOPY'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBSCAN  8512-85095-85095-1207-00340-00340-00000-ISPFDYN
         MACRO
&NAME    @TBSCAN &TABLE,                TABLE NAME                     *
               &ARG,                    ARGLIST                        *
               &VAR,                    EXTENSION VAR LIST             *
               &ROWID,                  SAVE THE ROWID                 *
               &NEXT,                   NEXT OR PREVIOUS               *
               &NOREAD,                 NOREAD KEYWORD                 *
               &POS,                    POSITION OF CRP                *
               &COND,                   CONDITIONS FOR SEARCH          *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBSCAN,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFNEXT,&SPFPREVIOUS,&SPFNOREAD
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NEXT' NE '' AND '&NEXT' NE 'NEXT' AND                *
               '&NEXT' NE 'PREVIOUS').ERR2
         AIF   ('&NOREAD' NE '' AND '&NOREAD' NE 'NOREAD').ERR3
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBSCAN).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&ARG' EQ '').CNT2
         AIF   ('&ARG'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&VAR' EQ '').CNT3
         AIF   ('&VAR'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&ROWID' EQ '').CNT4
         AIF   ('&ROWID'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&NEXT' EQ 'NEXT' AND NOT &SPFNEXT).GENLIT
         AIF   ('&NEXT' EQ 'PREVIOUS' AND NOT &SPFPREVIOUS).GENLIT
         AIF   ('&NOREAD' EQ 'NOREAD' AND NOT &SPFNOREAD).GENLIT
         AIF   ('&POS' EQ '').CNT8
         AIF   ('&POS'(1,1) EQ '''').GENLIT
.CNT8    ANOP
         AIF   ('&COND' EQ '').CNT9
         AIF   ('&COND'(1,1) EQ '''').GENLIT
.CNT9    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBSCAN).BYP20
TBSCAN   DC    CL8'TBSCAN'              ISPF KEYWORD
&SPFTBSCAN SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&ARG' EQ '').BYP40
         AIF   ('&ARG'(1,1) NE '''').BYP40
SPFA&NDX DC    C&ARG                    GENERATED ARG-LIST
.BYP40   ANOP
         AIF   ('&VAR' EQ '').BYP50
         AIF   ('&VAR'(1,1) NE '''').BYP50
SPFV&NDX DC    CL8&VAR                  GENERATED VARIABLE NAME
.BYP50   ANOP
         AIF   ('&ROWID' EQ '').BYP60
         AIF   ('&ROWID'(1,1) NE '''').BYP60
SPFR&NDX DC    CL8&ROWID                GENERATED ROWID VAR NAME
.BYP60   ANOP
         AIF   ('&NEXT' EQ '').BYP70
         AIF   ('&NEXT' NE 'NEXT' OR &SPFNEXT).BYP65
NEXT     DC    CL8'NEXT'                ISPF KEYWORD
&SPFNEXT SETB  1
.BYP65   ANOP
         AIF   ('&NEXT' NE 'PREVIOUS' OR &SPFPREVIOUS).BYP70
PREVIOUS DC    CL8'PREVIOUS'            ISPF KEYWORD
&SPFPREVIOUS SETB  1
.BYP70   ANOP
         AIF   ('&NOREAD' EQ '' OR &SPFNOREAD).BYP80
NOREAD   DC    CL8'NOREAD'              GENERATED CSRPOS
.BYP80   ANOP
         AIF   ('&POS' EQ '').BYP100
         AIF   ('&POS'(1,1) NE '''').BYP100
SPFP&NDX DC    CL8&POS                  GENERATED POSITION VAR
.BYP100  ANOP
         AIF   ('&COND' EQ '').BYP110
         AIF   ('&COND'(1,1) NE '''').BYP110
SPFC&NDX DC    C&COND                   GENERATED COND LIST
.BYP110  ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBSCAN                GET ADDRESS OF TBSCAN KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&ARG' EQ '').BYP1100
         AIF   ('&ARG'(1,1) EQ '''').BYP1110
         LA    0,&ARG                   GET ADDRESS OF ARG LIST
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR ARG
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENERATED ARG
.BYP1150 ANOP
.*
         AIF   ('&VAR' EQ '').BYP1200
         AIF   ('&VAR'(1,1) EQ '''').BYP1210
         LA    1,&VAR                   GET ADDRESS OF VAR NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR VAR
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFV&NDX               GET ADDRESS OF GENERATED VAR
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&ROWID' EQ '').BYP1300
         AIF   ('&ROWID'(1,1) EQ '''').BYP1310
         LA    14,&ROWID                GET ADDRESS OF ROWID NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR ROWID
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFR&NDX              GET ADDRESS OF GENERATED ROWID
.BYP1350 ANOP
.*
         AIF   ('&NEXT' EQ '').BYP1400
         LA    15,&NEXT                 GET ADDRESS OF KEYWORD
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR ROW
.BYP1450 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP1500
         LA    0,&NOREAD                GET ADDRESS OF KEYWORD
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR CSRPOS
.BYP1550 ANOP
.*
         AIF   ('&POS' EQ '').BYP1600
         AIF   ('&POS'(1,1) EQ '''').BYP1610
         LA    1,&POS                   GET ADDRESS OF POS VAR NAME
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR POS VAR
         AGO   .BYP1650
.BYP1610 ANOP
         LA    1,SPFP&NDX               GET GENERATED POS VAR NAME
.BYP1650 ANOP
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
         AIF   ('&COND' EQ '').BYP1700
         AIF   ('&COND'(1,1) EQ '''').BYP1710
         LA    14,&COND                 GET ADDRESS OF COND NAME
         AGO   .BYP1750
.BYP1700 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR COND
         AGO   .BYP1750
.BYP1710 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENERATED COND
.BYP1750 ANOP
.*
         ST    14,&TEMP+32              STORE PARAMETERS INTO LIST
         OI    &TEMP+32,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 9).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 9).BYPVARS
&SPFVARS SETA  9
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBSCAN)                TBSCAN LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&ARG' EQ '').BYP2100
         AIF   ('&ARG'(1,1) EQ '''').BYP2110
         DC    A(&ARG)                  ADDRESS OF ARG NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ARG NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENERATED ARG
.BYP2150 ANOP
.*
         AIF   ('&VAR' EQ '').BYP2200
         AIF   ('&VAR'(1,1) EQ '''').BYP2210
         DC    A(&VAR)                  ADDRESS OF VAR NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VAR
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VAR
.BYP2250 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP2300
         AIF   ('&ROWID'(1,1) EQ '''').BYP2310
         DC    A(&ROWID)                ADDRESS OF ROWID NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROWID
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROWID
.BYP2350 ANOP
.*
         AIF   ('&NEXT' EQ '').BYP2400
         DC    A(&NEXT)                 ADDRESS OF ISPF KEYWORD
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROW
.BYP2450 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP2500
         DC    A(&NOREAD)               ADDRESS OF ISPF KEYWORD
         AGO   .BYP2550
.BYP2500 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR CSRPOS
.BYP2550 ANOP
.*
         AIF   ('&POS' EQ '').BYP2600
         AIF   ('&POS'(1,1) EQ '''').BYP2610
         DC    A(&POS)                  ADDRESS OF POS NAME
         AGO   .BYP2650
.BYP2600 ANOP
         DC    A(SPFNULLC)              ADDRESS OF DUMMY PARM
         AGO   .BYP2650
.BYP2610 ANOP
         DC    A(SPFP&NDX)              GENERATED POS VAR NAME
.BYP2650 ANOP
.*
         AIF   ('&COND' EQ '').BYP2800
         AIF   ('&COND'(1,1) EQ '''').BYP2810
         DC    A(&COND+X'80000000')     ADDRESS OF COND NAME
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR COND
         AGO   .BYP2850
.BYP2810 ANOP
         DC    A(SPFC&NDX+X'80000000')  ADDRESS OF GENERATED COND
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'NEXT/PREVIOUS KEYWORDS EXPECTED - FOUND ''&NEXT'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'EXPECTED NOREAD KEYWORD - FOUND ''&NOREAD'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=@TBSKIP  8512-85095-85095-1207-00308-00308-00000-ISPFDYN
         MACRO
&NAME    @TBSKIP &TABLE,                TABLE NAME                     *
               &NUM,                    NUMBER                         *
               &VAR,                    VARIABLE FOR EXT VARS          *
               &ROWID,                  VARIABLE NAME FOR ROWID        *
               &ROW,                    ROWID TO GET                   *
               &NOREAD,                 NOREAD KEYWORD                 *
               &CRP,                    CRP VARIABLE                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBSKIP,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFNOREAD,&SPFF1
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NOREAD' NE '' AND '&NOREAD' NE 'NOREAD').ERR2
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBSKIP).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   (T'&NUM EQ 'N').GENLIT
         AIF   ('&NUM' EQ '' AND NOT &SPFF1).GENLIT
         AIF   ('&VAR' EQ '').CNT3
         AIF   ('&VAR'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&ROWID' EQ '').CNT4
         AIF   ('&ROWID'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   (T'&ROW EQ 'N').CNT5
         AIF   ('&NOREAD' EQ 'NOREAD' AND NOT &SPFNOREAD).GENLIT
         AIF   ('&CRP' EQ '').CNT8
         AIF   ('&CRP'(1,1) EQ '''').GENLIT
.CNT8    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBSKIP).BYP20
TBSKIP   DC    CL8'TBSKIP'              ISPF KEYWORD
&SPFTBSKIP SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   (T'&NUM NE 'N').BYP40
SPFN&NDX DC    F'&NUM'                  GENERATED NUMBER
.BYP40   ANOP
         AIF   ('&NUM' NE '' OR &SPFF1).BYP45
SPFF1    DC    F'1'
&SPFF1   SETB  1
.BYP45   ANOP
         AIF   ('&VAR' EQ '').BYP50
         AIF   ('&VAR'(1,1) NE '''').BYP50
SPFV&NDX DC    CL8&VAR                  GENERATED EXT VAR NAME
.BYP50   ANOP
         AIF   ('&ROWID' EQ '').BYP60
         AIF   ('&ROWID'(1,1) NE '''').BYP60
SPFI&NDX DC    CL8&ROWID                GENERATED ROWID VAR NAME
.BYP60   ANOP
         AIF   (T'&ROW NE 'N').BYP70
SPFR&NDX DC    F'&ROW'                  GENERATED ROWID
.BYP70   ANOP
         AIF   ('&NOREAD' NE 'NOREAD' OR &SPFNOREAD).BYP80
NOREAD   DC    CL8'NOREAD'              ISPF KEYWORD
&SPFNOREAD SETB 1
.BYP80   ANOP
         AIF   ('&CRP' EQ '').BYP100
         AIF   ('&CRP'(1,1) NE '''').BYP100
SPFC&NDX DC    CL8&CRP                  GENERATED CRP VARIABLE NAME
.BYP100  ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBSKIP                GET ADDRESS OF TBSKIP KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&NUM' EQ '').BYP1100
         AIF   (T'&NUM EQ 'N').BYP1110
         LA    0,&NUM                   GET ADDRESS OF NUM FIELD
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFF1                  GET DUMMY PARM FOR NUM
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFN&NDX               GET ADDRESS OF GENERATED NUM
.BYP1150 ANOP
.*
         AIF   ('&VAR' EQ '').BYP1200
         AIF   ('&VAR'(1,1) EQ '''').BYP1210
         LA    1,&VAR                   GET ADDRESS OF VAR NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR VAR
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFV&NDX               GET ADDRESS OF GENERATED VAR
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&ROWID' EQ '').BYP1300
         AIF   ('&ROWID'(1,1) EQ '''').BYP1310
         LA    14,&ROWID                GET ADDRESS OF ROWID NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR ROWID
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFI&NDX              GET ADDRESS OF GENERATED ROWID
.BYP1350 ANOP
.*
         AIF   ('&ROW' EQ '').BYP1400
         AIF   (T'&ROW EQ 'N').BYP1410
         LA    15,&ROW                  GET ADDRESS OF ROW NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR ROW
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFR&NDX              GET ADDRESS OF GENERATED ROW
.BYP1450 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP1500
         LA    0,&NOREAD                GET ADDRESS OF NOREAD
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR NOREAD
.BYP1550 ANOP
.*
         AIF   ('&CRP' EQ '').BYP1600
         AIF   ('&CRP'(1,1) EQ '''').BYP1610
         LA    1,&AUTOSEL               GET ADDRESS OF CRP NAME
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR AUTOSEL
         AGO   .BYP1650
.BYP1610 ANOP
         LA    1,SPFC&NDX               GET DUMMY PARM FOR AUTOSEL
.BYP1650 ANOP
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
         OI    &TEMP+28,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 8).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 8).BYPVARS
&SPFVARS SETA  8
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBSKIP)                TBSKIP LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&NUM' EQ '').BYP2100
         AIF   ('&NUM'(1,1) EQ '''').BYP2110
         DC    A(&NUM)                  ADDRESS OF NUM NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFF1)                 DUMMY PARM FOR NUM NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFN&NDX)              ADDRESS OF GENERATED NUM
.BYP2150 ANOP
.*
         AIF   ('&VAR' EQ '').BYP2200
         AIF   ('&VAR'(1,1) EQ '''').BYP2210
         DC    A(&VAR)                  ADDRESS OF VAR NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VAR
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VAR
.BYP2250 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP2300
         AIF   ('&ROWID'(1,1) EQ '''').BYP2310
         DC    A(&ROWID)                ADDRESS OF ROWID NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROWID
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFI&NDX)              ADDRESS OF GENERATED ROWID
.BYP2350 ANOP
.*
         AIF   ('&ROW' EQ '').BYP2400
         AIF   ('&ROW'(1,1) EQ '''').BYP2410
         DC    A(&ROW)                  ADDRESS OF ROW NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROW
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROW
.BYP2450 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP2500
         DC    A(&NOREAD)               ADDRESS OF NOREAD
         AGO   .BYP2550
.BYP2500 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR CSRPOS
.BYP2550 ANOP
.*
         AIF   ('&CRP' EQ '').BYP2800
         AIF   ('&CRP'(1,1) EQ '''').BYP2810
         DC    A(&CRP+X'80000000')      ADDRESS OF CRP NAME
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR CRP
         AGO   .BYP2850
.BYP2810 ANOP
         DC    A(SPFI&NDX+X'80000000')  ADDRESS OF GENERATED CRP
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'EXPECTED NOREAD KEYWORD - FOUND ''&NOREAD'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=ATEND    8512-86097-86097-1148-00031-00031-00000-ISPFDYN
         MACRO
         ATEND  &USRNAME
         COPY  STRCGBLS
         LCLB  &ATGEND            ATEND_GENNED                23009.
         LCLB  &TDLGEND           TDL_GENNED                  23011.
         LCLB  &FINREQD           FIN_LABEL_REQD              23014.
         LCLC  &INFO              INFO                        23017.
         STRCTRAC  ATEND                                      23019.
         AIF   (&STRCNST GT &STRCNSL).FIN                     23021.
         STRCVERF  DO,&USRNAME                                23025.
         AIF   (&STRCERR).FIN                                 23030.
&INFO    SETC '&STRCINF(&STRCNST)'                            23034.
&ATGEND  SETB  ('&INFO'(6,1) EQ '1')                          23035.
         AIF   (NOT &ATGEND).M041                             23037.
         MNOTE 8,' STRC2301 MORE THAN ONE "ATEND" IN BLOCK'   23039.
         MEXIT
.M041    ANOP
&STRCPFX SETC  '$&STRCBL#(&STRCNST)'                          23042.
&TDLGEND SETB  ('&INFO'(5,1) EQ '1')                          23043.
&FINREQD SETB  ('&INFO'(8,1) EQ '1')                          23045.
         AIF   (&TDLGEND).M051                                23047.
         STRCTDL
         AGO   .M055                                          23051.
.M051    B     &STRCPFX.FIN
&FINREQD SETB  1                                              23053.
.M055    AIF   (NOT &STRCEND(&STRCNST)).M062                  23056.
&STRCPFX.END  DS    0H
&STRCEND(&STRCNST)  SETB  0                                   23059.
.M062    ANOP
&STRCINF(&STRCNST)  SETC  '&INFO'(1,4)'11'.'&INFO'(7,1)'&FINREQD'
.FIN     MEND
./ ADD NAME=ATEXIT   8512-86097-86097-1148-00004-00004-00000-ISPFDYN
         MACRO
         ATEXIT  &USRNAME
         ONEXIT  &USRNAME
         MEND
./ ADD NAME=BLEND    8512-86097-86097-1148-00042-00042-00000-ISPFDYN
         MACRO
         BLEND  &USRNAME,&RETURN=,&LINK=14,&RESTORE=,&RC=     43001.
         COPY  STRCGBLS
         LCLA  &I                 I                           43007.
         LCLC  &X
         STRCTRAC  BLEND
         AIF   (&STRCNST LE &STRCNSL).M014                    43011.
         STRCPOP
         AGO   .M058                                          43014.
.M014    AIF   (&STRCNST NE 0).M018                           43015.
         MNOTE 8,' STRC4301 NO BLOCKS ACTIVE--"BLEND" IGNORED'
         AGO   .M058                                          43018.
.M018    ANOP
&I       SETA  &STRCNST                                       43019.
         AIF   ('&USRNAME' EQ '').M033                        43020.
.M022    AIF   (&I LE 0 OR '&STRCNAM(&I)' EQ '&USRNAME').M027
&I       SETA  &I-1                                           43024.
         AGO   .M022                                          43025.
.M027    AIF   (&I NE 0).M033                                 43027.
         MNOTE 8,' STRC4302 NO BLOCK ACTIVE NAMED &USRNAME--"BLEND"'
         MNOTE 0,'                IGNORED'                    43029.
         MEXIT
.M033    ANOP
&X       SETC  '&STRCTYP(&STRCNST)'                           43034.
         AIF   ('&X' NE 'IF').M039                            43036.
         FI    &USRNAME                                       43037.
         AGO   .M058                                          43038.
.M039    AIF   ('&X' NE 'DO').M042                            43039.
         OD    &USRNAME                                       43040.
         AGO   .M058                                          43041.
.M042    AIF   ('&X' NE 'CASE').M045                          43042.
         ESAC  &USRNAME                                       43043.
         AGO   .M058                                          43044.
.M045    AIF   ('&X' NE 'DOCASE').M048                        43045.
         ESACOD  &USRNAME                                     43046.
         AGO   .M058                                          43047.
.M048    AIF   ('&X' NE 'PROC').M052                          43048.
         CORP  &USRNAME,RETURN=&RETURN,LINK=&LINK,                     *
               RESTORE=&RESTORE,RC=&RC                        43049.
         AGO   .M058                                          43051.
.M052    STRCPOP
.M058    MEND
./ ADD NAME=BLOCK    8512-86097-86097-1148-00028-00028-00000-ISPFDYN
         MACRO
&USRNAME BLOCK
         COPY  STRCGBLS
         LCLC  &LABEL             LABEL                       41004.
         STRCTRAC  BLOCK                                      41007.
&USRNAME STRCPUSH  TYPEVAL=BLOCK                              41009.
         AIF   (&STRCERR).FIN                                 41013.
&LABEL   SETC  '&USRNAME'                                     41017.
.*       CALL  BLOCK_TRACE_COUNTERS                           41018.
         AIF   (NOT (&STRCDBC OR &STRCDBN)).M056              41033.
         AIF   (NOT &STRCDBC).M042                            41035.
&LABEL   LH    1,&STRCPFX.BLC
&LABEL   SETC  ''                                             41039.
         LA    1,1(1)
         STH   1,&STRCPFX.BLC
.M042    ANOP
&LABEL   B     &STRCPFX.GO
&LABEL   SETC  '&STRCPFX.GO'                                  41045.
         AIF   (NOT &STRCDBN).M051                            41047.
         DC    C'&STRCNAM(&STRCNST)',0H'0'
.M051    AIF   (NOT &STRCDBC).M055                            41052.
&STRCPFX.BLC  DC  H'0' BLOCK COUNT
.M055    ANOP
.M056    ANOP
.*       CORP  BLOCK_TRACE_COUNTERS                           41057.
         AIF   ('&LABEL' EQ '').FIN                           41022.
&LABEL   DS    0H
.FIN     MEND
./ ADD NAME=BROWSE   8512-85095-85095-1207-00284-00284-00000-ISPFDYN
         MACRO
&NAME    BROWSE &P1,                                                   *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &P6,                                                    *
               &DATASET=,               TSO DSNAME                     *
               &VOLUME=,                VOLUME                         *
               &PASSWORD=,              PASSWORD                       *
               &PANEL=,                 PANEL ID                       *
               &DATAID=,                DATA ID                        *
               &MEMBER=,                MEMBER NAME                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFBROWSE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         GBLC  &SPFLVL
         LCLC  &NDX,&TEMP
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @BROWSE &P1,&P2,&P3,&P4,&P5,&P6,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P1' NE '').LVLERR
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AIF   ('&P5' NE '').LVLERR
         AIF   ('&P6' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFBROWSE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATASET' EQ '').CNT0
         AIF   ('&DATASET'(1,1) EQ '''').GENLIT
.CNT0    AIF   ('&VOLUME' EQ '').CNT1
         AIF   ('&VOLUME'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&PASSWORD' EQ '').CNT2
         AIF   ('&PASSWORD'(1,1) EQ '''').GENLIT
.CNT2    AIF   ('&PANEL' EQ '').CNT3
         AIF   ('&PANEL'(1,1) EQ '''').GENLIT
.CNT3    AIF   ('&DATAID' EQ '').CNT4
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
.CNT4    AIF   ('&MEMBER' EQ '').CNT5
         AIF   ('&MEMBER'(1,1) EQ '''').GENLIT
.CNT5    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFBROWSE).BYP20
BROWSE   DC    CL8'BROWSE'              BROWSE LITERAL FOR ISPF
&SPFBROWSE SETB 1
.BYP20   ANOP
         AIF   ('&DATASET' EQ '').BYP30
         AIF   ('&DATASET'(1,1) NE '''').BYP30
SPFD&NDX DC    CL56&DATASET             BROWSE THIS DATASET NAME
.BYP30   ANOP
         AIF   ('&VOLUME' EQ '').BYP40
         AIF   ('&VOLUME'(1,1) NE '''').BYP40
SPFV&NDX DC    CL6&VOLUME               GENERATED VOLUME
.BYP40   ANOP
         AIF   ('&PASSWORD' EQ '').BYP50
         AIF   ('&PASSWORD'(1,1) NE '''').BYP50
SPFP&NDX DC    CL8&PASSWORD             GENERATED PASSWORD
.BYP50   ANOP
         AIF   ('&PANEL' EQ '').BYP60
         AIF   ('&PANEL'(1,1) NE '''').BYP60
SPFI&NDX DC    CL8&PANEL                GENERATED PANEL ID
.BYP60   ANOP
         AIF   ('&DATAID' EQ '').BYP62
         AIF   ('&DATAID'(1,1) NE '''').BYP62
SPFA&NDX DC    CL8&DATAID               GENERATED DATAID
.BYP62   ANOP
         AIF   ('&MEMBER' EQ '').BYP64
         AIF   ('&MEMBER'(1,1) NE '''').BYP64
SPFM&NDX DC    CL8&MEMBER               GENERATED MEMBER
.BYP64   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,BROWSE                GET ADDRESS OF BROWSE KEYWORD
         AIF   ('&DATASET' EQ '').BYP85
         AIF   ('&DATASET'(1,1) NE '''').BYP80
         LA    15,SPFD&NDX              GET ADDRESS OF GENERATED DSN
         AGO   .BYP90
.BYP80   ANOP
         LA    15,&DATASET              GET ADDRESS OF DATASET NAME
         AGO   .BYP90
.BYP85   ANOP
         LA    15,SPFNULLC              DUMMY PARM FOR DATASET NAME
.BYP90   ANOP
         AIF   ('&VOLUME' EQ '').BYP100
         AIF   ('&VOLUME'(1,1) EQ '''').BYP110
         LA    0,&VOLUME                GET ADDRESS OF VOLUME
         AGO   .BYP120
.BYP110  ANOP
         LA    0,SPFV&NDX               GET ADDRESS OF GENERATED VOL
         AGO   .BYP120
.BYP100  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR VOLUME
.BYP120  ANOP
         AIF   ('&PASSWORD' EQ '').BYP140
         AIF   ('&PASSWORD'(1,1) NE '''').BYP130
         LA    1,SPFP&NDX               GET ADDRESS OF GENERATED PASS
         AGO   .BYP150
.BYP130  ANOP
         LA    1,&PASSWORD              GET ADDRESS OF PASSWORD
         AGO   .BYP150
.BYP140  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR PASSWORD
.BYP150  ANOP
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&PANEL' EQ '').BYP170
         AIF   ('&PANEL'(1,1) EQ '''').BYP160
         LA    14,&PANEL                GET ADDRESS OF PANEL ID
         AGO   .BYP180
.BYP160  ANOP
         LA    14,SPFI&NDX              GET ADDRESS OF GENERATED PANEL
         AGO   .BYP180
.BYP170  ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR PANEL ID
.BYP180  ANOP
         AIF   ('&DATAID' EQ '').BYP172
         AIF   ('&DATAID'(1,1) EQ '''').BYP162
         LA    15,&DATAID               GET ADDRESS OF DATA ID
         AGO   .BYP182
.BYP162  ANOP
         LA    15,SPFA&NDX              GET ADDRESS OF GENNED DATAID
         AGO   .BYP182
.BYP172  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR DATA ID
.BYP182  ANOP
         AIF   ('&MEMBER' EQ '').BYP174
         AIF   ('&MEMBER'(1,1) EQ '''').BYP164
         LA    0,&MEMBER                GET ADDRESS OF MEMBER
         AGO   .BYP184
.BYP164  ANOP
         LA    0,SPFM&NDX               GET ADDRESS OF GENNED MEMBER
         AGO   .BYP184
.BYP174  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR MEMBER
.BYP184  ANOP
         STM   14,0,&TEMP+16            STORE AS FIFTH PARM
         OI    &TEMP+24,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 7).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 7).BYPVARS
&SPFVARS SETA  7
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(BROWSE)                BROWSE LITERAL
         AIF   ('&DATASET' EQ '').BYP285
         AIF   ('&DATASET'(1,1) NE '''').BYP280
         DC    A(SPFD&NDX)              ADDRESS OF GENERATED DATASET
         AGO   .BYP290
.BYP280  ANOP
         DC    A(&DATASET)              ADDRESS OF DATASET NAME
         AGO   .BYP290
.BYP285  ANOP
         DC    A(SPFNULLC)              DUMMY  DATASET NAME
.BYP290  ANOP
         AIF   ('&VOLUME' EQ '').BYP200
         AIF   ('&VOLUME'(1,1) EQ '''').BYP210
         DC    A(&VOLUME)               ADDRESS OF VOLUME
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VOLUME
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VOLUME
.BYP220  ANOP
         AIF   ('&PASSWORD' EQ '').BYP240
         AIF   ('&PASSWORD'(1,1) NE '''').BYP230
         DC    A(SPFP&NDX)              ADDRESS OF GENERATED PASSWORD
         AGO   .BYP250
.BYP230  ANOP
         DC    A(&PASSWORD)             ADDRESS OF PASSWORD
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PASSWORD
.BYP250  ANOP
         AIF   ('&PANEL' EQ '').BYP270
         AIF   ('&PANEL'(1,1) EQ '''').BYP260
         DC    A(&PANEL)                ADDRESS OF PANEL ID
         AGO   .BYP300
.BYP260  ANOP
         DC    A(SPFI&NDX)              ADDRESS OF GENERATED PANEL
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PANEL ID
.BYP300  ANOP
         AIF   ('&DATAID' EQ '').BYP320
         AIF   ('&DATAID'(1,1) EQ '''').BYP310
         DC    A(&DATAID)               ADDRESS OF DATA ID
         AGO   .BYP330
.BYP310  ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENNED DATAID
         AGO   .BYP330
.BYP320  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR DATA ID
.BYP330  ANOP
         AIF   ('&MEMBER' EQ '').BYP374
         AIF   ('&MEMBER'(1,1) EQ '''').BYP364
         DC    A(&MEMBER.+X'80000000')  ADDRESS OF MEMBER
         AGO   .BYP384
.BYP364  ANOP
         DC    A(SPFM&NDX+X'80000000')  ADDRESS OF GENNED MEMBER
         AGO   .BYP184
.BYP374  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR MEMBER
.BYP384  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=CASE     8512-86097-86097-1148-00333-00333-00000-ISPFDYN
         MACRO
&USRNAME CASE  &REL=,&MASK=                                   33001.
         COPY  STRCGBLS
         LCLA  &CASECTR           CASE_COUNTER                33011.
         LCLA  &COMPLB#           COMP_LABEL_NO               33013.
         LCLA  &I                 I                           33015.
         LCLB  &CLABREQ           CASE_LABEL_REQD             33017.
         LCLB  &XRANGA            INDEX_RANGE_ASSURED         33019.
         LCLB  &EQUAL             EQUAL_TEST_OUTSTANDING      33022.
         LCLB  &RANGE             RANGE_TEST_OUTSTANDING      33026.
         LCLB  &MISCFND           MISC_FOUND                  33031.
         LCLB  &MULTOF4           MULTIPLESOF4                33032.
         LCLB  &UNEXP             UNEXPECTED_OPERANDS_FOUND   33034.
         LCLC  &CFORMAT           CASE_FORMAT                 33038.
         LCLC  &MAMAPFX           MAMA_BLOCK_PREFIX           33040.
         LCLC  &XADDR             INDEX_ADDR                  33041.
         LCLC  &LABEL             LABEL                       33042.
         LCLC  &COMPLAB           COMP_LABEL                  33043.
         LCLC  &NXTCASE           NEXT_CASE                   33044.
         LCLC  &XLENG             INDEX_LENGTH                33046.
         LCLC  &X                 X                           33161.
         LCLA  &MOM               MOM                         33162.
         LCLC  &INSERT            INSERT                      33276.
         LCLA  &BASE              BASE                        33363.
         LCLA  &OP                OP                          33364.
         LCLA  &LIMIT             LIMIT                       33365.
         LCLA  &GUESS             GUESS                       33440.
         LCLA  &OPCOUNT           OP_COUNT                    33496.
         STRCTRAC  CASE
.*       CALL  CASE_POSITION_CHECK                            33050.
&STRCERR SETB  0                                              33134.
         AIF   ('&STRCTYP(&STRCNST)' EQ 'DOCASE').M155        33135.
         MNOTE 8,' STRC3301 "CASE" NOT IMMEDIATE DAUGHTER OF "DOCASE"'
&STRCERR SETB  1                                              33138.
         AIF   (&STRCNST LE 1).M155                           33139.
         AIF   ('&STRCTYP(&STRCNST-1)' NE 'DOCASE').M145      33140.
         MNOTE 8,' STRC3302 ASSUMING "BLEND" OMITTED--INSERTED'
         BLEND
&STRCERR SETB  0                                              33144.
         AGO   .M155                                          33143.
.M145    AIF   (&STRCNST LE 2).M155                           33146.
         AIF   ('&STRCTYP(&STRCNST-2)' NE 'DOCASE').M155      33147.
         MNOTE 8,' STRC3303 ASSUMING TWO "BLENDS" OMITTED--INSERTED'
         BLEND
         BLEND
&STRCERR SETB  0                                              33152.
.M155    ANOP
.*       CORP  CASE_POSITION_CHECK                            33156.
         AIF   (NOT &STRCERR).M058                            33053.
         MNOTE 8,' STRC3304 "CASE" TREATED AS "BLOCK" MACRO'  33055.
&USRNAME BLOCK
         MEXIT
.M058    ANOP
&USRNAME STRCPUSH  TYPEVAL=CASE                               33059.
         AIF   (&STRCERR).FIN                                 33063.
         AIF   ('&REL&MASK' EQ '').M070                       33067.
         MNOTE 8,' STRC3310 REL= OR MASK= NOT IN PARENTHESES--IGNORED'
.M070    ANOP
.*       CALL  CASE_GET_DOCASE_INFO                           33071.
&MOM     SETA  &STRCNST-1                                     33164.
&CASECTR SETA  &STRCOP1(&MOM)                                 33165.
         AIF   ('&SYSLIST(1)' EQ 'MISC').M169                 33166.
&CASECTR SETA  &CASECTR+1                                     33168.
.M169    ANOP
&XADDR   SETC  '&STRCOP2(&MOM)'                               33170.
&CFORMAT SETC  '&STRCOP3(&MOM)'                               33171.
&XLENG   SETC  '&STRCOP4(&MOM)'                               33172.
&X       SETC  '&STRCINF(&MOM)'                               33173.
&CLABREQ SETB  ('&X'(1,1) EQ '1')                             33174.
&MISCFND SETB  ('&X'(2,1) EQ '1')                             33175.
&MULTOF4 SETB  ('&X'(3,1) EQ '1')                             33176.
&UNEXP   SETB  ('&X'(4,1) EQ '1')                             33177.
&XRANGA  SETB  ('&X'(5,1) EQ '1')                             33178.
&MAMAPFX SETC  '$&STRCBL#(&MOM)'                              33179.
.*       CORP  CASE_GET_DOCASE_INFO                           33180.
         AIF   ('&USRNAME' EQ '').M081                        33075.
&USRNAME DS    0H
.M081    AIF   ('&SYSLIST(1)' NE 'MISC').M086                 33082.
.*       CALL  CASE_MISC_PROCESS                              33084.
         AIF   (&CLABREQ).M546                                33541.
         B     &MAMAPFX.C&CASECTR
.M546    AIF   (NOT &MISCFND).M551                            33547.
         MNOTE 8,' STRC3311 MULTIPLE MISC CASES IN DOCASE--THIS BLOCK'
         MNOTE 0,'          IS DEAD CODE'                     33550.
         AGO   .M557                                          33551.
.M551    ANOP
&LABEL   SETC  '&MAMAPFX.MSC'                                 33552.
&MISCFND SETB  1                                              33556.
.M557    AIF   (NOT &XRANGA).M562                             33558.
         MNOTE 8,' STRC3308 "DOCASE ...,ONLY" INVALID WITH MISC'
&XRANGA  SETB  0                                              33561.
.M562    ANOP
.*       CORP  CASE_MISC_PROCESS                              33563.
         AGO   .M117                                          33086.
.M086    AIF   ('&CFORMAT' EQ 'SIMPLE').M103                  33087.
         AIF   ('&CFORMAT' EQ 'CONDTEST').M103                33087.
.* THESE BRANCHES HAVE BEEN REVERSED FROM SOURCE;  SEE COMMENT
.* ON LINE 33103. OF SOURCE.
         AIF   (&STRCGNL GT &STRCGNX).M117                    33089.
.*       CALL  CASE_PROCESS_COMPARE_OPERANDS                  33091.
&I       SETA  1                                              33191.
&COMPLB# SETA  &STRCCL#(&STRCGNL)                             33192.
&EQUAL   SETB  0                                              33194.
&RANGE   SETB  0                                              33194.
.M195    AIF   (&I GT N'&SYSLIST).M241                        33195.
         AIF   ('&CFORMAT' EQ 'SPARSE').M204                  33197.
         AIF   ('&CFORMAT' EQ 'CHARCOMP').M204                33197.
         AIF   (N'&SYSLIST(&I) GT 1).M200                     33197.
         AIF   (T'&SYSLIST(&I) NE 'N').M204                   33197.
         AIF   (&SYSLIST(&I) GE 0 AND &SYSLIST(&I) LE 255).M239
         AGO   .M204                                          33197.
.M200    AIF   (T'&SYSLIST(&I,1) NE 'N').M204                 33200.
         AIF   (&SYSLIST(&I,1) LT 0 OR &SYSLIST(&I,1) GT 255).M204
         AIF   (T'&SYSLIST(&I,2) NE 'N').M204                 33202.
         AIF   (&SYSLIST(&I,2) GE 0 AND &SYSLIST(&I,2) LE 255).M239
.M204    AIF   (NOT &EQUAL).M212                              33205.
&LABEL   SETC  '&STRCPFX.BEG'                                 33207.
         BE    &LABEL
&EQUAL   SETB  0                                              33211.
         AGO   .M228                                          33212.
.M212    AIF   (NOT &RANGE).M220                              33213.
&LABEL   SETC  '&STRCPFX.BEG'                                 33215.
         BNH   &LABEL
&RANGE   SETB  0                                              33219.
         AGO   .M228                                          33220.
.M220    AIF   (NOT &CLABREQ).M225                            33221.
&COMPLAB SETC  '&MAMAPFX.C&COMPLB#'                           33223.
.M225    ANOP
&UNEXP   SETB  1                                              33226.
.M228    ANOP
.*       CALL  CASE_GEN_COMPARE                               33229.
         AIF   ('&XADDR' NE '').M282                          33278.
&COMPLAB LA    0,&SYSLIST(&I,1)
         CR    1,0
         AGO   .M304                                          33282.
.M282    AIF   ('&CFORMAT' NE 'CHARCOMP').M300                33283.
&INSERT  SETC  ''                                             33285.
         AIF   ('&SYSLIST(&I,1)'(1,1) EQ '=').M297            33286.
         AIF   ('&SYSLIST(&I,1)'(1,1) NE '''').M291           33288.
&INSERT  SETC  '=C'                                           33290.
         AGO   .M297                                          33291.
.M291    AIF    ('&SYSLIST(&I,1)'(K'&SYSLIST(&I,1),1) NE '''').M297
&INSERT  SETC  '='                                            33294.
.M297    ANOP
&COMPLAB CLC   &XADDR.(&XLENG),&INSERT&SYSLIST(&I,1)
         AGO   .M304                                          33300.
.M300    ANOP
&COMPLAB CLI   &XADDR,&SYSLIST(&I,1)
.M304    AIF   ('&COMPLAB' EQ '').M310                        33305.
&COMPLAB SETC  ''                                             33307.
&COMPLB# SETA  &COMPLB#+1                                     33308.
.M310    AIF   (N'&SYSLIST(&I) GT 1).M313                     33310.
&EQUAL   SETB  1                                              33312.
         AGO   .M353                                          33313.
.M313    AIF   (N'&SYSLIST(&I) LE 2).M318                     33314.
         MNOTE 8,' STRC3312 &SYSLIST(&I) INVALID--'           33316.
         MNOTE 0,'                ONLY FIRST TWO SUBOPERANDS PROCESSED'
.M318    ANOP
&RANGE   SETB  1                                              33319.
&COMPLAB SETC  '&MAMAPFX.C&COMPLB#'                           33321.
         BL    &COMPLAB
         AIF   ('&XADDR' NE '').M329                          33325.
         LA    0,&SYSLIST(&I,2)
         CR    1,0
         AGO   .M353                                          33329.
.M329    AIF   ('&CFORMAT' NE 'CHARCOMP').M349                33330.
&INSERT  SETC  ''                                             33332.
         AIF   ('&SYSLIST(&I,2)'(1,1) EQ '=').M346            33335.
         AIF   ('&SYSLIST(&I,2)'(1,1) NE '''').M340           33337.
&INSERT  SETC  '=C'                                           33339.
         AGO   .M346                                          33322
.M340    AIF   ('&SYSLIST(&I,2)'(K'&SYSLIST(&I,2),1) NE '''').M346
&INSERT  SETC  '='                                            33343.
.M346    CLC   &XADDR.(&XLENG),&INSERT&SYSLIST(&I,2)
         AGO   .M353                                          33349.
.M349    CLI   &XADDR,&SYSLIST(&I,2)
.M353    ANOP
.*       CORP  CASE_GEN_COMPARE                               33354.
.M239    ANOP
&I       SETA  &I+1                                           33240.
         AGO   .M195                                          33241.
.M241    AIF   (NOT &EQUAL).M250                              33245.
         BNE   &MAMAPFX.C&COMPLB#
         AGO   .M257                                          33250.
.M250    AIF   (NOT &RANGE).M257                              33251.
         BH    &COMPLAB
.M257    ANOP
&STRCCL#(&STRCGNL)  SETA  &COMPLB#                            33258.
.*       CORP  CASE_PROCESS_COMPARE_OPERANDS                  33260.
         AIF   ('&CFORMAT' NE 'GENERAL').M117                 33096.
.*       CALL  CASE_PROCESS_VECTOR_OPERANDS                   33098.
&BASE    SETA  ((&STRCGNL-1)*256)+1                           33367.
         AIF   (N'&SYSLIST LE 0).M426                         33369.
&I       SETA  1                                              33371.
.M372    AIF   (&I GT N'&SYSLIST).M424                        33372.
         AIF   (T'&SYSLIST(&I,1) NE 'N').M422                 33374.
&OP      SETA  &SYSLIST(&I,1)                                 33376.
         AIF   (&OP GT 255 OR &OP LT 0).M422                  33377.
  AIF  (T'&SYSLIST(&I,2) NE 'O' AND T'&SYSLIST(&I,2) NE 'N').M422
         AIF   (N'&SYSLIST(&I) LE 2).M385                     33381.
         MNOTE 8,' STRC3312 &SYSLIST(&I) INVALID--'           33383.
         MNOTE 0,'                ONLY FIRST TWO SUBOPERANDS PROCESSED'
.M385    AIF   (T'&SYSLIST(&I,2) NE 'N').M397                 33386.
&LIMIT   SETA  &SYSLIST(&I,2)                                 33388.
         AIF   (&LIMIT GT 255 OR &LIMIT LT 0).M422            33389.
         AIF   (&LIMIT GE &OP).M399                           33391.
         MNOTE 8,' STRC3305 &SYSLIST(&I) INVALID--&OP ASSUMED'
&LIMIT   SETA  &OP                                            33395.
         AGO   .M399                                          33397.
.M397    ANOP
&LIMIT   SETA  &OP                                            33398.
.M399    ANOP
         AIF   (&LIMIT LE &STRCMCV(&STRCGNL)).M403            33400.
&STRCMCV(&STRCGNL)  SETA  &LIMIT                              33402.
.M403    ANOP
.M404    AIF   (&OP GT &LIMIT).M417                           33404.
&STRCOCC(&BASE+&OP) SETB  1                                   33406.
&MAMAPFX.G&OP  DS  0H
         AIF   (&OP EQ &CASECTR).M411                         33408.
&UNEXP   SETB  1                                              33410.
.M411    AIF   (&OP/4*4 EQ &OP).M415                          33412.
&MULTOF4 SETB  0                                              33414.
.M415    ANOP
&OP      SETA  &OP+1                                          33416.
         AGO   .M404                                          33417.
.M417    ANOP
.M422    ANOP
&I       SETA  &I+1                                           33423.
         AGO   .M372                                          33424.
.M424    AGO   .M431                                          33426.
.M426    ANOP
.*       CALL  CASE_ASSUMED_VECTOR_CASE                       33427.
&GUESS   SETA  &STRCMCV(&STRCGNL)+1                           33442.
         AIF   (&GUESS GT 0).M448                             33444.
&GUESS   SETA  1                                              33446.
.M448    ANOP
&STRCMCV(&STRCGNL)  SETA  &GUESS                              33448.
&STRCOCC(&BASE+&GUESS)  SETB  1                               33449.
&MAMAPFX.G&GUESS  DS  0H
         AIF   (NOT &UNEXP).M456                              33451.
         MNOTE 4,' STRC3306 EARLIER UNEXPECTED OPERAND IMPLIES THIS'
         MNOTE 0,'          TO BE CASE &GUESS'                33454.
.M456    ANOP
.*       CORP  CASE_ASSUMED_VECTOR_CASE                       33457.
.M431    ANOP
.*       CORP  CASE_PROCESS_VECTOR_OPERANDS                   33432.
         AGO   .M117                                          33103.
.M103    ANOP
.*       CALL  CASE_SET_NAMES                                 33104.
         AIF   (NOT &CLABREQ).M468                            33465.
&LABEL   SETC  '&MAMAPFX.C&CASECTR'                           33467.
.M468    ANOP
&I       SETA  &CASECTR+1                                     33469.
&NXTCASE SETC  '&MAMAPFX.C&I'                                 33470.
.*       CORP  CASE_SET_NAMES                                 33471.
         AIF   ('&CFORMAT' NE 'SIMPLE').M112                  33108.
.*       CALL  CASE_BCT_GEN                                   33110.
&LABEL   BCT   1,&NXTCASE
&LABEL   SETC  ''                                             33477.
         AIF   (T'&SYSLIST(1) EQ 'O').M491                    33478.
         AIF   (T'&SYSLIST(1) NE 'N').M487                    33480.
         AIF   (&SYSLIST(1) EQ &CASECTR).M491                 33482.
         MNOTE 8,' STRC3307 OPERAND INVALID VALUE ON SIMPLE CASE &CASEC*
               TR'                                            33485.
         AGO   .M491                                          33487.
.M487    MNOTE 8,' STRC3309 OPERAND MUST BE SELF-DEFINING TERM OR'
         MNOTE 0,'          OMITTED ON SIMPLE CASE &CASECTR'  33488.
.M491    ANOP
.*       CORP  CASE_BCT_GEN                                   33492.
         AGO   .M117                                          33112.
.M112    ANOP
.*       CALL  CASE_CONDTEST_GEN                              33113.
&STRCUBL SETC  '&NXTCASE'                                     33499.
&STRCUFL SETC  '&STRCPFX.BEG'                                 33500.
&STRCUFC SETB  1                                              33501.
&STRCFLU SETB  0                                              33502.
&STRCFRX SETA  1                                              33503.
&STRCLSX SETA  N'&SYSLIST                                     33504.
&STRCUID SETC  'T'                                            33506.
&LABEL   STRCCEP  &SYSLIST(1),&SYSLIST(2),&SYSLIST(3),&SYSLIST(4),     *
               &SYSLIST(5),&SYSLIST(6),&SYSLIST(7),&SYSLIST(8),        *
               &SYSLIST(9),&SYSLIST(10),&SYSLIST(11),&SYSLIST(12),     *
               &SYSLIST(13),&SYSLIST(14),&SYSLIST(15),&SYSLIST(16),    *
               &SYSLIST(17),&SYSLIST(18),&SYSLIST(19),&SYSLIST(20),    *
               &SYSLIST(21),&SYSLIST(22),&SYSLIST(23),&SYSLIST(24),    *
               &SYSLIST(25),&SYSLIST(26),&SYSLIST(27),&SYSLIST(28),    *
               &SYSLIST(29),&SYSLIST(30),&SYSLIST(31),&SYSLIST(32),    *
               &SYSLIST(33),&SYSLIST(34),&SYSLIST(35),&SYSLIST(36),    *
               &SYSLIST(37),&SYSLIST(38),&SYSLIST(39),&SYSLIST(40),    *
               &SYSLIST(41),&SYSLIST(42),&SYSLIST(43),&SYSLIST(44),    *
               &SYSLIST(45),&SYSLIST(46),&SYSLIST(47),&SYSLIST(48),    *
               &SYSLIST(49),&SYSLIST(50)                      33507.
         AIF   (&STRCFLU).M529                                33527.
&LABEL   SETC  ''                                             33531.
         AGO   .M532                                          33532.
.M529    ANOP
&LABEL   SETC  '&STRCPFX.BEG'                                 33529.
.M532    ANOP
.*       CORP  CASE_CONDTEST_GEN                              33533.
.M117    ANOP
.*       CALL  CASE_TRACE_COUNTERS                            33118.
         AIF   (NOT (&STRCDBC OR &STRCDBN)).M601              33568.
         AIF   (NOT &STRCDBC).M587                            33570.
&LABEL   LH    1,&STRCPFX.CTR
&LABEL   SETC  ''                                             33574.
         LA    1,1(1)
         STH   1,&STRCPFX.CTR
         AIF   ('&SYSLIST(1)' EQ 'MISC' OR &CASECTR GT 255).M579
&STRCHXI SETA  &CASECTR                                       33581.
         STRCXHEX
         MNOTE *,' STRC3313 CASE DEBUG ID=X''&STRCHXO'''      33583.
         MVI   &MAMAPFX.LSC,X'&STRCHXO' CASE NUMBER FOR TRACING
         AGO   .M586                                          33586.
.M579    MVI   &MAMAPFX.LSC,X'FF'
.M586    ANOP
.M587    ANOP
&LABEL   B     &STRCPFX.GO
&LABEL   SETC  '&STRCPFX.GO'                                  33589.
         AIF   (NOT &STRCDBN).M596                            33592.
         DC    C'&STRCNAM(&STRCNST)',0H'0'
.M596    AIF   (NOT &STRCDBC).M601                            33597.
&STRCPFX.CTR  DC  H'0' CASE COUNT
.M601    ANOP
.*       CORP  CASE_TRACE_COU NTER                            33602.
.*       CALL  CASE_UPDATE_INFO                               33121.
&MOM     SETA  &STRCNST-1                                     33609.
&STRCINF(&MOM) SETC  '1&MISCFND&MULTOF4&UNEXP&XRANGA'         33611.
&STRCOP1(&MOM)  SETC  '&CASECTR'                              33613.
.*       CORP  CASE_UPDATE_INFO                               33616.
         AIF   ('&LABEL' EQ '').M126                          33123.
&LABEL   DS    0H
.M126    ANOP
.FIN     MEND
./ ADD NAME=CASEND   8512-86097-86097-1148-00004-00004-00000-ISPFDYN
         MACRO
         CASEND  &USRNAME
         ESAC   &USRNAME
         MEND
./ ADD NAME=CONTROL  8512-85095-85095-1207-00975-00975-00000-ISPFDYN
         MACRO
&NAME    CONTROL &TYPE,                 CONTROL TYPE                   *
               &MODE,                   MODE WITHIN TYPE               *
               &LINENUM,                LINENUM OF LINE START FUNC     *
               &MF=I,                   MACRO FORMAT                   *
               &LOAD=ISPLINK            ADDRESS OF ISPF MODULE
.*
.*********************************************************************
.*       GLOBALS
.*********************************************************************
.*
         GBLB  &SPFCONTROL,&SPFDISPLAY,&SPFNONDISPL
         GBLB  &SPFLOCK,&SPFLINE,&SPFSM,&SPFREFRESH
         GBLB  &SPFENTER,&SPFEND,&SPFCANCEL,&SPFRETURN
         GBLB  &SPFNULLF,&SPFVAR
         GBLB  &SPFERRORS,&SPFSPLIT,&SPFNOCMD
         GBLB  &SPFSAVE,&SPFRESTORE
         GBLB  &SPFENABLE,&SPFDISABLE,&SPFDEBUG
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYPTEMA
&TEMP    SETC  'SPFPARMS'
         AGO   .BYPTEMB
.BYPTEMA ANOP
&TEMP    SETC  '&MF(2)'
.BYPTEMB ANOP
         AIF   ('&NAME' EQ '').BYP0
&NAME    DS    0H
.BYP0    ANOP
.*
.*********************************************************************
.*       GENERAL EDITS
.*********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
.*
.*********************************************************************
.*       EDIT THE &TYPE FIELD
.*********************************************************************
.*
         AIF   ('&TYPE' EQ 'DISPLAY').DISP
         AIF   ('&TYPE' EQ 'NONDISPL').NOND
         AIF   ('&TYPE' EQ 'ERRORS').ERRO
         AIF   ('&TYPE' EQ 'SPLIT').SPLI
         AIF   ('&TYPE' EQ 'NOCMD').NOCM
         AGO   .ERR1
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY
.*********************************************************************
.*
.DISP    ANOP
         AIF   ('&MODE' EQ 'LOCK').DISPLOCK
         AIF   ('&MODE' EQ 'LINE').DISPLINE
         AIF   ('&MODE' EQ 'SM').DISPSM
         AIF   ('&MODE' EQ 'REFRESH').DISPREFR
         AIF   ('&MODE' EQ 'SAVE').DISPSAVE
         AIF   ('&MODE' EQ 'RESTORE').DISPREST
         AGO   .ERR2
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY LOCK
.*********************************************************************
.*
.DISPLOCK ANOP
         AIF   ('&LINENUM' NE '').ERR3
         AIF   (NOT &SPFCONTROL).GEN1
         AIF   (NOT &SPFDISPLAY).GEN1
         AIF   (NOT &SPFLOCK).GEN1
         AGO   .BYPLIT1
.GEN1    ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BYP10
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BYP10   ANOP
         AIF   (&SPFDISPLAY).BYP20
&SPFDISPLAY SETB 1
DISPLAY  DC    CL8'DISPLAY'             CONTROL KEYWORD FOR ISPF
.BYP20   ANOP
         AIF   (&SPFLOCK).BYP30
&SPFLOCK SETB  1
LOCK     DC    CL8'LOCK'                CONTROL KEYWORD FOR ISPF
.BYP30   ANOP
SPF&NDX  DS    0H
.BYPLIT1 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY LOCK   CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').DISMF1
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,DISPLAY               GET ADDRESS OF DISPLAY OPERAND
         LA    0,LOCK                   GET ADDRESS OF LOCK OPERAND
         STM   14,0,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+8,X'80'            SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR1
         AIF   (&SPFVARC LT 3).ERRVAR
.BYVAR1  AIF   (&SPFVARS GE 3).BYPVAR1
&SPFVARS SETA  3
.BYPVAR1 ANOP
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY LOCK   CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.DISMF1  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(DISPLAY)               ADDRESS OF DISPLAY OPERAND
         DC    A(LOCK+X'80000000')      ADDRESS OF LOCK OPERAND
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY LINE
.*********************************************************************
.*
.DISPLINE ANOP
         AIF   (NOT &SPFCONTROL).GEN2
         AIF   (NOT &SPFDISPLAY).GEN2
         AIF   (NOT &SPFLINE).GEN2
         AIF   (T'&LINENUM EQ 'N').GEN2
         AIF   ('&LINENUM' EQ '' AND NOT &SPFNULLF).GEN2
         AGO   .BYPLIT2
.GEN2    ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BYP110
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BYP110  ANOP
         AIF   (&SPFDISPLAY).BYP120
&SPFDISPLAY SETB 1
DISPLAY  DC    CL8'DISPLAY'             CONTROL KEYWORD FOR ISPF
.BYP120  ANOP
         AIF   (&SPFLINE).BYP130
&SPFLINE SETB  1
LINE     DC    CL8'LINE'                CONTROL KEYWORD FOR ISPF
.BYP130  ANOP
         AIF   (T'&LINENUM NE 'N').BYP140
SPFL&NDX DC    F'&LINENUM'              GENERATED SCREEN LINE NUMBER
         AGO   .BYP150
.BYP140  ANOP
         AIF   ('&LINENUM' NE '').BYP150
         AIF   (&SPFNULLF).BYP150
&SPFNULLF SETB 1
SPFNULLF DC    F'0'                     ISPF DUMMY FULLWORD GENERATED
.BYP150  ANOP
SPF&NDX  DS    0H
.BYPLIT2 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY LINE   CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').DISMF2
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,DISPLAY               GET ADDRESS OF DISPLAY OPERAND
         LA    0,LINE                   GET ADDRESS OF LINE OPERAND
         AIF   (T'&LINENUM EQ 'N').BYP160
         AIF   ('&LINENUM' EQ '').BYP170
         LA    1,&LINENUM               GET ADDRESS OF LINE NUMBER
         AGO   .BYP180
.BYP160  ANOP
         LA    1,SPFL&NDX               GET ADDRESS OF GENERATED LINE #
         AGO   .BYP180
.BYP170  ANOP
         LA    1,SPFNULLF               GET DUMMY FULLWORD FOR LINE #
.BYP180  ANOP
         STM   14,1,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+12,X'80'           SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR2
         AIF   (&SPFVARC LT 4).ERRVAR
.BYVAR2  AIF   (&SPFVARS GE 4).BYPVAR1
&SPFVARS SETA  4
         AGO   .BYPVAR1
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY LINE   CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.DISMF2  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(DISPLAY)               ADDRESS OF DISPLAY OPERAND
         DC    A(LINE)                  ADDRESS OF LINE OPERAND
         AIF   (T'&LINENUM EQ 'N').BYP185
         AIF   ('&LINENUM' EQ '').BYP190
         DC    A(&LINENUM+X'80000000')  ADDRESS OF LINE NUMBER
         AGO   .BYP195
.BYP185  ANOP
         DC    A(SPFL&NDX+X'80000000')  ADDRESS OF GENERATED LINE #
         AGO   .BYP195
.BYP190  ANOP
         DC    A(SPFNULLF+X'80000000')  DUMMY FULLWORD FOR LINE #
.BYP195  ANOP
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY SM
.*********************************************************************
.*
.DISPSM  ANOP
         AIF   (NOT &SPFCONTROL).GEN3
         AIF   (NOT &SPFDISPLAY).GEN3
         AIF   (NOT &SPFSM).GEN3
         AIF   (T'&LINENUM EQ 'N').GEN3
         AIF   ('&LINENUM' EQ '' AND NOT &SPFNULLF).GEN3
         AGO   .BYPLIT3
.GEN3    ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BYP210
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BYP210  ANOP
         AIF   (&SPFDISPLAY).BYP220
&SPFDISPLAY SETB 1
DISPLAY  DC    CL8'DISPLAY'             CONTROL KEYWORD FOR ISPF
.BYP220  ANOP
         AIF   (&SPFSM).BYP230
&SPFSM   SETB  1
SM       DC    CL8'SM'                  CONTROL KEYWORD FOR ISPF
.BYP230  ANOP
         AIF   (T'&LINENUM NE 'N').BYP240
SPFL&NDX DC    F'&LINENUM'              GENERATED SCREEN LINE NUMBER
         AGO   .BYP250
.BYP240  ANOP
         AIF   ('&LINENUM' NE '').BYP250
         AIF   (&SPFNULLF).BYP250
&SPFNULLF SETB 1
SPFNULLF DC    F'0'                     ISPF DUMMY FULLWORD GENERATED
.BYP250  ANOP
SPF&NDX  DS    0H
.BYPLIT3 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY SM     CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').DISMF3
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,DISPLAY               GET ADDRESS OF DISPLAY OPERAND
         LA    0,SM                     GET ADDRESS OF SM OPERAND
         AIF   (T'&LINENUM EQ 'N').BYP260
         AIF   ('&LINENUM' EQ '').BYP270
         LA    1,&LINENUM               GET ADDRESS OF LINE NUMBER
         AGO   .BYP280
.BYP260  ANOP
         LA    1,SPFL&NDX               GET ADDRESS OF GENERATED LINE #
         AGO   .BYP280
.BYP270  ANOP
         LA    1,SPFNULLF               GET DUMMY FULLWORD FOR LINE #
.BYP280  ANOP
         STM   14,1,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+12,X'80'           SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR3
         AIF   (&SPFVARC LT 4).ERRVAR
.BYVAR3  AIF   (&SPFVARS GE 4).BYPVAR1
&SPFVARS SETA  4
         AGO   .BYPVAR1
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY SM     CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.DISMF3  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(DISPLAY)               ADDRESS OF DISPLAY OPERAND
         DC    A(SM)                    ADDRESS OF SM OPERAND
         AIF   (T'&LINENUM EQ 'N').BYP285
         AIF   ('&LINENUM' EQ '').BYP290
         DC    A(&LINENUM+X'80000000')  ADDRESS OF LINE NUMBER
         AGO   .BYP295
.BYP285  ANOP
         DC    A(SPFL&NDX+X'80000000')  ADDRESS OF GENERATED LINE #
         AGO   .BYP295
.BYP290  ANOP
         DC    A(SPFNULLF+X'80000000')  DUMMY FULLWORD FOR LINE #
.BYP295  ANOP
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY REFRESH
.*********************************************************************
.*
.DISPREFR ANOP
         AIF   ('&LINENUM' NE '').ERR3
         AIF   (NOT &SPFCONTROL).GEN4
         AIF   (NOT &SPFDISPLAY).GEN4
         AIF   (NOT &SPFREFRESH).GEN4
         AGO   .BYPLIT4
.GEN4    ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BYP310
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BYP310  ANOP
         AIF   (&SPFDISPLAY).BYP320
&SPFDISPLAY SETB 1
DISPLAY  DC    CL8'DISPLAY'             CONTROL KEYWORD FOR ISPF
.BYP320  ANOP
         AIF   (&SPFREFRESH).BYP330
&SPFREFRESH SETB 1
REFRESH  DC    CL8'REFRESH'             CONTROL KEYWORD FOR ISPF
.BYP330  ANOP
SPF&NDX  DS    0H
.BYPLIT4 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY REFRESH CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').DISMF4
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,DISPLAY               GET ADDRESS OF DISPLAY OPERAND
         LA    0,REFRESH                GET ADDRESS OF REFRESH OPERAND
         STM   14,0,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+8,X'80'            SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR4
         AIF   (&SPFVARC LT 3).ERRVAR
.BYVAR4  AIF   (&SPFVARS GE 3).BYPVAR1
&SPFVARS SETA  3
         AGO   .BYPVAR1
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY REFRESH CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.DISMF4  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(DISPLAY)               ADDRESS OF DISPLAY OPERAND
         DC    A(REFRESH+X'80000000')   ADDRESS OF REFRESH OPERAND
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY SAVE
.*********************************************************************
.*
.DISPSAVE ANOP
         AIF   ('&LINENUM' NE '').ERR3
         AIF   (NOT &SPFCONTROL).GEN5
         AIF   (NOT &SPFDISPLAY).GEN5
         AIF   (NOT &SPFSAVE).GEN5
         AGO   .BYPLIT5
.GEN5    ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BYP410
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BYP410  ANOP
         AIF   (&SPFDISPLAY).BYP420
&SPFDISPLAY SETB 1
DISPLAY  DC    CL8'DISPLAY'             CONTROL KEYWORD FOR ISPF
.BYP420  ANOP
         AIF   (&SPFSAVE).BYP430
&SPFSAVE SETB  1
SAVE     DC    CL8'SAVE'                CONTROL KEYWORD FOR ISPF
.BYP430  ANOP
SPF&NDX  DS    0H
.BYPLIT5 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY SAVE   CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').DISMF5
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,DISPLAY               GET ADDRESS OF DISPLAY OPERAND
         LA    0,SAVE                   GET ADDRESS OF SAVE OPERAND
         STM   14,0,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+8,X'80'            SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR5
         AIF   (&SPFVARC LT 3).ERRVAR
.BYVAR5  AIF   (&SPFVARS GE 3).BYPVAR1
&SPFVARS SETA  3
         AGO   .BYPVAR1
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY SAVE   CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.DISMF5  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(DISPLAY)               ADDRESS OF DISPLAY OPERAND
         DC    A(SAVE+X'80000000')      ADDRESS OF SAVE OPERAND
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY RESTORE
.*********************************************************************
.*
.DISPREST ANOP
         AIF   ('&LINENUM' NE '').ERR3
         AIF   (NOT &SPFCONTROL).GEN6
         AIF   (NOT &SPFDISPLAY).GEN6
         AIF   (NOT &SPFRESTORE).GEN6
         AGO   .BYPLIT6
.GEN6    ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BYP510
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BYP510  ANOP
         AIF   (&SPFDISPLAY).BYP520
&SPFDISPLAY SETB 1
DISPLAY  DC    CL8'DISPLAY'             CONTROL KEYWORD FOR ISPF
.BYP520  ANOP
         AIF   (&SPFRESTORE).BYP530
&SPFRESTORE SETB 1
RESTORE  DC    CL8'RESTORE'             CONTROL KEYWORD FOR ISPF
.BYP530  ANOP
SPF&NDX  DS    0H
.BYPLIT6 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY RESTORE CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').DISMF6
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,DISPLAY               GET ADDRESS OF DISPLAY OPERAND
         LA    0,RESTORE                GET ADDRESS OF RESTORE OPERAND
         STM   14,0,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+8,X'80'            SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR6
         AIF   (&SPFVARC LT 3).ERRVAR
.BYVAR6  AIF   (&SPFVARS GE 3).BYPVAR1
&SPFVARS SETA  3
         AGO   .BYPVAR1
.*
.*********************************************************************
.*       ISPEXEC CONTROL DISPLAY RESTORE CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.DISMF6  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(DISPLAY)               ADDRESS OF DISPLAY OPERAND
         DC    A(RESTORE+X'80000000')   ADDRESS OF RESTORE OPERAND
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL NONDISPL
.*********************************************************************
.*
.NOND    ANOP
         AIF   ('&MODE' EQ '').NONDENTE
         AIF   ('&MODE' EQ 'ENTER').NONDENTE
         AIF   ('&MODE' EQ 'END').NONDEND
         AGO   .ERR2
.*
.*********************************************************************
.*       ISPEXEC CONTROL NONDISPL ENTER
.*********************************************************************
.*
.NONDENTE ANOP
         AIF   ('&LINENUM' NE '').ERR3
         AIF   (NOT &SPFCONTROL).GEN10
         AIF   (NOT &SPFNONDISPL).GEN10
         AIF   (NOT &SPFENTER).GEN10
         AGO   .BYPLIT10
.GEN10   ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BYA10
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BYA10   ANOP
         AIF   (&SPFNONDISPL).BYA20
&SPFNONDISPL SETB 1
NONDISPL DC    CL8'NONDISPL'            CONTROL KEYWORD FOR ISPF
.BYA20   ANOP
         AIF   (&SPFENTER).BYA30
&SPFENTER SETB 1
ENTER    DC    CL8'ENTER'               CONTROL KEYWORD FOR ISPF
.BYA30   ANOP
SPF&NDX  DS    0H
.BYPLIT10 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL NONDISPL ENTER CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').NONMF1
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,NONDISPL              GET ADDRESS OF NONDISPL
         LA    0,ENTER                  GET ADDRESS OF ENTER OPERAND
         STM   14,0,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+8,X'80'            SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BAVAR1
         AIF   (&SPFVARC LT 3).ERRVAR
.BAVAR1  AIF   (&SPFVARS GE 3).BYPVAR1
&SPFVARS SETA  3
         AGO   .BYPVAR1
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL NONDISP ENTER  CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.NONMF1  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(NONDISPL)              ADDRESS OF NONDISPL OPERAND
         DC    A(ENTER+X'80000000')     ADDRESS OF ENTER OPERAND
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL NONDISPL END
.*********************************************************************
.*
.NONDEND ANOP
         AIF   ('&LINENUM' NE '').ERR3
         AIF   (NOT &SPFCONTROL).GEN20
         AIF   (NOT &SPFNONDISPL).GEN20
         AIF   (NOT &SPFEND).GEN20
         AGO   .BYPLIT20
.GEN20   ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BYB10
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BYB10   ANOP
         AIF   (&SPFNONDISPL).BYB20
&SPFNONDISPL SETB 1
NONDISPL DC    CL8'NONDISPL'            CONTROL KEYWORD FOR ISPF
.BYB20   ANOP
         AIF   (&SPFEND).BYB30
&SPFEND  SETB  1
END      DC    CL8'END'                 CONTROL KEYWORD FOR ISPF
.BYB30   ANOP
SPF&NDX  DS    0H
.BYPLIT20 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL NONDISPL END   CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').NONMF2
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,NONDISPL              GET ADDRESS OF NONDISPL
         LA    0,END                    GET ADDRESS OF END OPERAND
         STM   14,0,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+8,X'80'            SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BAVAR2
         AIF   (&SPFVARC LT 3).ERRVAR
.BAVAR2  AIF   (&SPFVARS GE 3).BYPVAR1
&SPFVARS SETA  3
         AGO   .BYPVAR1
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL NONDISP END    CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.NONMF2  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(NONDISPL)              ADDRESS OF NONDISPL OPERAND
         DC    A(END+X'80000000')       ADDRESS OF END OPERAND
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL ERRORS
.*********************************************************************
.*
.ERRO    ANOP
         AIF   ('&MODE' EQ '').ERROCANC
         AIF   ('&MODE' EQ 'CANCEL').ERROCANC
         AIF   ('&MODE' EQ 'RETURN').ERRORETU
         AGO   .ERR2
.*
.*********************************************************************
.*       ISPEXEC CONTROL ERRORS CANCEL
.*********************************************************************
.*
.ERROCANC ANOP
         AIF   ('&LINENUM' NE '').ERR3
         AIF   (NOT &SPFCONTROL).GEN30
         AIF   (NOT &SPFERRORS).GEN30
         AIF   (NOT &SPFCANCEL).GEN30
         AGO   .BYPLIT30
.GEN30   ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BYC10
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BYC10   ANOP
         AIF   (&SPFERRORS).BYC20
&SPFERRORS SETB 1
ERRORS   DC    CL8'ERRORS'              CONTROL KEYWORD FOR ISPF
.BYC20   ANOP
         AIF   (&SPFCANCEL).BYC30
&SPFCANCEL SETB 1
CANCEL   DC    CL8'CANCEL'              CONTROL KEYWORD FOR ISPF
.BYC30   ANOP
SPF&NDX  DS    0H
.BYPLIT30 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL ERRORS CANCEL  CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').ERRMF1
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,ERRORS                GET ADDRESS OF ERRORS OPERAND
         LA    0,CANCEL                 GET ADDRESS OF CANCEL OPERAND
         STM   14,0,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+8,X'80'            SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BBVAR1
         AIF   (&SPFVARC LT 3).ERRVAR
.BBVAR1  AIF   (&SPFVARS GE 3).BYPVAR1
&SPFVARS SETA  3
         AGO   .BYPVAR1
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL ERRORS CANCEL  CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.ERRMF1  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(ERRORS)                ADDRESS OF ERRORS OPERAND
         DC    A(CANCEL+X'80000000')    ADDRESS OF CANCEL OPERAND
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL ERRORS RETURN
.*********************************************************************
.*
.ERRORETU ANOP
         AIF   ('&LINENUM' NE '').ERR3
         AIF   (NOT &SPFCONTROL).GEN40
         AIF   (NOT &SPFERRORS).GEN40
         AIF   (NOT &SPFRETURN).GEN40
         AGO   .BYPLIT40
.GEN40   ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BYB40
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BYB40   ANOP
         AIF   (&SPFERRORS).BYB50
&SPFERRORS SETB 1
ERRORS   DC    CL8'ERRORS'              CONTROL KEYWORD FOR ISPF
.BYB50   ANOP
         AIF   (&SPFRETURN).BYB60
&SPFRETURN SETB 1
RETURN   DC    CL8'RETURN'              CONTROL KEYWORD FOR ISPF
.BYB60   ANOP
SPF&NDX  DS    0H
.BYPLIT40 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL ERRORS CANCEL  CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').ERRMF2
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,ERRORS                GET ADDRESS OF ERRORS OPERAND
         LA    0,RETURN                 GET ADDRESS OF RETURN OPERAND
         STM   14,0,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+8,X'80'            SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BBVAR2
         AIF   (&SPFVARC LT 3).ERRVAR
.BBVAR2  AIF   (&SPFVARS GE 3).BYPVAR1
&SPFVARS SETA  3
         AGO   .BYPVAR1
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL ERRORS CANCEL  CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.ERRMF2  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(ERRORS)                ADDRESS OF ERRORS OPERAND
         DC    A(RETURN+X'80000000')    ADDRESS OF RETURN OPERAND
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL SPLIT
.*********************************************************************
.*
.SPLI    ANOP
         AIF   ('&MODE' EQ '').SPLIENAB
         AIF   ('&MODE' EQ 'ENABLE').SPLIENAB
         AIF   ('&MODE' EQ 'DISABLE').SPLIDISA
         AGO   .ERR2
.*
.*********************************************************************
.*       ISPEXEC CONTROL SPLIT ENABLE
.*********************************************************************
.*
.SPLIENAB ANOP
         AIF   ('&LINENUM' NE '').ERR3
         AIF   (NOT &SPFCONTROL).GEC30
         AIF   (NOT &SPFSPLIT).GEC30
         AIF   (NOT &SPFENABLE).GEC30
         AGO   .BYPLIC30
.GEC30   ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BCC10
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BCC10   ANOP
         AIF   (&SPFSPLIT).BCC20
&SPFSPLIT SETB  1
SPLIT    DC    CL8'SPLIT'               CONTROL KEYWORD FOR ISPF
.BCC20   ANOP
         AIF   (&SPFENABLE).BCC30
&SPFENABLE SETB 1
ENABLE   DC    CL8'ENABLE'              CONTROL KEYWORD FOR ISPF
.BCC30   ANOP
SPF&NDX  DS    0H
.BYPLIC30 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL SPLIT ENABLE   CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').ERRMC1
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,SPLIT                 GET ADDRESS OF SPLIT OPERAND
         LA    0,ENABLE                 GET ADDRESS OF ENABLE OPERAND
         STM   14,0,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+8,X'80'            SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BBVAC1
         AIF   (&SPFVARC LT 3).ERRVAR
.BBVAC1  AIF   (&SPFVARS GE 3).BYPVAR1
&SPFVARS SETA  3
         AGO   .BYPVAR1
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL SPLIT ENABLE   CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.ERRMC1  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(SPLIT)                 ADDRESS OF SPLIT OPERAND
         DC    A(ENABLE+X'80000000')    ADDRESS OF ENABLE OPERAND
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL SPLIT DISABLE
.*********************************************************************
.*
.SPLIDISA ANOP
         AIF   ('&LINENUM' NE '').ERR3
         AIF   (NOT &SPFCONTROL).GED30
         AIF   (NOT &SPFSPLIT).GED30
         AIF   (NOT &SPFDISABLE).GED30
         AGO   .BYPLID30
.GED30   ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BCD10
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BCD10   ANOP
         AIF   (&SPFSPLIT).BCD20
&SPFSPLIT SETB  1
SPLIT    DC    CL8'SPLIT'               CONTROL KEYWORD FOR ISPF
.BCD20   ANOP
         AIF   (&SPFDISABLE).BCD30
&SPFDISABLE SETB 1
DISABLE  DC    CL8'DISABLE'             CONTROL KEYWORD FOR ISPF
.BCD30   ANOP
SPF&NDX  DS    0H
.BYPLID30 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL SPLIT DISABLE  CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').ERRMD1
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,SPLIT                 GET ADDRESS OF SPLIT OPERAND
         LA    0,DISABLE                GET ADDRESS OF DISABLE OPERAND
         STM   14,0,&TEMP               STORE PARAMETER LIST
         OI    &TEMP+8,X'80'            SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BBVAD1
         AIF   (&SPFVARC LT 3).ERRVAR
.BBVAD1  AIF   (&SPFVARS GE 3).BYPVAR1
&SPFVARS SETA  3
         AGO   .BYPVAR1
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL SPLIT DISABLE  CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.ERRMD1  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(SPLIT)                 ADDRESS OF SPLIT OPERAND
         DC    A(DISABLE+X'80000000')   ADDRESS OF DISABLE OPERAND
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL NOCMD
.*********************************************************************
.*
.NOCM    ANOP
         AIF   ('&MODE' EQ '').NOCMD
         AGO   .ERR2
.*
.*********************************************************************
.*       ISPEXEC CONTROL NOCMD
.*********************************************************************
.*
.NOCMD   ANOP
         AIF   ('&LINENUM' NE '').ERR3
         AIF   (NOT &SPFCONTROL).GEE30
         AIF   (NOT &SPFNOCMD).GEE30
         AGO   .BYPE30
.GEE30   ANOP
         B     SPF&NDX
         AIF   (&SPFCONTROL).BCE10
&SPFCONTROL SETB 1
CONTROL  DC    CL8'CONTROL'             CONTROL KEYWORD FOR ISPF
.BCE10   ANOP
         AIF   (&SPFNOCMD).BCE20
&SPFNOCMD SETB  1
NOCMD    DC    CL8'NOCMD'               CONTROL KEYWORD FOR ISPF
.BCE20   ANOP
SPF&NDX  DS    0H
.BYPE30 ANOP
.*
.*********************************************************************
.*       ISPEXEC CONTROL NOCMD          CALL ISPLINK AREA
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').ERRME1
         LA    14,CONTROL               GET ADDRESS OF CONTROL KEYWORD
         LA    15,NOCMD                 GET ADDRESS OF NOCMD OPERAND
         STM   14,15,&TEMP              STORE PARAMETER LIST
         OI    &TEMP+4,X'80'            SET VL BIT ON
         LA    1,&TEMP                  GET ADDRESS OF PARMS
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BBVAE1
         AIF   (&SPFVARC LT 2).ERRVAR
.BBVAE1  AIF   (&SPFVARS GE 2).BYPVAR1
&SPFVARS SETA  2
         AGO   .BYPVAR1
         MEXIT
.*
.*********************************************************************
.*       ISPEXEC CONTROL SPLIT ENABLE   CALL ISPLINK AREA WITH MF=I
.*********************************************************************
.*
.ERRME1  ANOP
         CNOP  0,4                      FULLWORD ALLIGNMENT
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(CONTROL)               ADDRESS OF CONTROL KEYWORD
         DC    A(NOCMD+X'80000000')     ADDRESS OF NOCMD OPERAND
SPFE&NDX DS    0H
         L     15,&LOAD                 GET ISPLINK ADDRESS
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.*********************************************************************
.*       MACRO ERROR MESSAGES
.*********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'INVALID SERVICE FOR CONTROL - FOUND ''&TYPE'''
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MODE FOR &TYPE SERVICE - FOUND ''&MODE'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'LINENUM NOT ALLOWED FOR &TYPE - FOUND ''&LINENUM'''
         MEXIT
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=CORP     8512-86097-86097-1148-00294-00294-00000-ISPFDYN
         MACRO
&USRNAME CORP  &PROCNAM,&RETURN=,&LINK=14,&RESTORE=,&RC=      83001.
         COPY  STRCGBLS
         LCLA  &FRSAREG           FIRST_SAVEAREA_REG          83013.
         LCLA  &OFFSET0           OFFSET_TO_GPR0              83016.
         LCLB  &ANYSAVD           ANY_REGS_SAVED              83019.
         LCLB  &DYNAMSA           DYNAMIC_SAVEAREA            83021.
         LCLB  &BCKREQD           BCK_AREA_REQD               83023.
         LCLB  &FRKNOWN           FIRST_VALUE_KNOWN           83024.
         LCLB  &FRRESTK           FIRST_RESTORE_VALUE_KNOWN   83026.
         LCLB  &OSLINK            OS_LINKAGE                  83028.
         LCLC  &LABEL             LABEL                       83031.
         LCLC  &OFF0STR           GPR0_OFFSET_STRING          83032.
         LCLC  &FIRSTSV           FIRST_REG_SAVED             83033.
         LCLC  &LASTSV            LAST_REG_SAVED              83033.
         LCLC  &MULT              MULT                        83035.
         LCLC  &COMMA2            COMMA2                      83035.
         LCLC  &LOCPTR            LOCAL_POINTER               83037.
         LCLC  &OSPTR             OS_POINTER                  83037.
         LCLC  &RSTAREA           RESTORE_AREA                83037.
         LCLC  &RCREG             RC_REG                      83040.
         LCLC  &SVLENG            SAVE_LENGTH                 83042.
         LCLC  &REST1,&REST2      REST1,REST2                 83043.
         LCLC  &IDBYTE            PROC_ID_BYTE                83044.
         LCLC  &PVDEBUG           PREVIOUS_DEBUG_VECTOR       83046.
         LCLC  &X                 X                           83150.
         LCLC  &CBOFF             CRP_BCK_OFFSET              83225.
         LCLC  &SVOFF             SV_OFFSET                   83227.
         LCLA  &OFFSET            OFFSET               83321. 83391.
         LCLA  &I                 I                    83321. 83391.
         LCLC  &LSTAREA           LAST_AREA                   83439.
         LCLC  &FWDPTR            FWD_PTR                     83441.
         LCLC  &TARGET            TARGET                      83442.
         STRCTRAC  CORP                                       83050.
         AIF   (&STRCNST LE &STRCNSL).M056                    83052.
         STRCPOP
         MEXIT
.M056    STRCVERF  PROC,&PROCNAM                              83057.
         AIF   (&STRCERR).FIN                                 83069.
&LABEL   SETC  '&USRNAME'                                     83071.
.*       CALL  CORP_GET_PROC_INFO                             83074.
&FIRSTSV SETC  '&STRCOP1(&STRCNST)'                           83152.
&LASTSV  SETC  '&STRCOP2(&STRCNST)'                           83153.
&X       SETC  '&STRCINF(&STRCNST)'(1,2)                      83154.
&OFFSET0 SETA  &X-50                                          83155.
         AIF   (&OFFSET0 GE 0).M160                           83156.
&OFF0STR SETC  '-&OFFSET0'                                    83158.
         AGO   .M162                                          83160.
.M160    ANOP
&OFF0STR SETC  '+&OFFSET0'                                    83161.
.M162    ANOP
&X       SETC  '&STRCINF(&STRCNST)'                           83154.
&OSLINK  SETB  ('&X'(3,1) EQ '1')                             83163.
&DYNAMSA SETB  ('&X'(4,1) EQ '1')                             83164.
&FRKNOWN SETB  ('&X'(5,1) EQ '1')                             83165.
&SVLENG  SETC  '&STRCOP3(&STRCNST)'                           83166.
&PVDEBUG SETC  '&STRCOP4(&STRCNST)'                           83167.
&ANYSAVD SETB  ('&FIRSTSV' NE '')                             83168.
&IDBYTE  SETC  '&X'(6,2)                                      83169.
         AIF   ('&X'(8,1) EQ '0').M173                        83170.
&STRCPFX SETC  '$P&IDBYTE'                                    83172.
         AGO   .M175                                          83173.
.M173    ANOP
&STRCPFX SETC  '$&STRCBL#(&STRCNST)'                          83174.
.M175    AIF   (&FRKNOWN).M177                                83176.
&FRSAREG SETA  14                                             83180.
         AGO   .M181                                          83181.
.M177    ANOP
&FRSAREG SETA  &FIRSTSV                                       83178.
.M181    ANOP
.*       CORP  CORP_GET_PROC_INFO                             83182.
.*       CALL  CORP_SET_RESTORE_RANGE                         83079.
&REST1   SETC  '&FIRSTSV'                                     83191.
&REST2   SETC  '&LASTSV'                                      83192.
&MULT    SETC  'M'                                            83193.
&COMMA2  SETC  ','                                            83194.
&FRRESTK SETB  (&FRKNOWN)                                     83195.
         AIF   (&ANYSAVD).M203                                83198.
         AIF   ('&RESTORE' EQ '').M211                        83200.
         MNOTE 8,' STRC8301 NO REGISTERS SAVED--RESTORE IGNORED'
         AGO   .M211                                          83203.
.M203    AIF   ('&RESTORE' EQ '').M211                        83204.
&REST1   SETC  '&RESTORE(1)'                                  83206.
&REST2   SETC  '&RESTORE(2)'                                  83207.
&FRRESTK SETB  (T'&RESTORE(1) EQ 'N')                         83208.
.M211    AIF   ('&REST2' NE '').M215                          83212.
&MULT    SETC  ''                                             83214.
&COMMA2  SETC  ''                                             83214.
.M215    ANOP
&RSTAREA SETC  'SV'                                           83216.
.*       CORP  CORP_SET_RESTORE_RANGE                         83217.
.*       CALL  CORP_GEN_EXIT_LABEL                            83082.
         AIF   (NOT &STRCXIT(&STRCNST)).M507                  83492.
         AIF   ('&LABEL' EQ '').M497                          83494.
&LABEL   DS    0H
.M497    ANOP
&LABEL   SETC  '&STRCPFX.XIT'                                 83498.
         AIF   ('&STRCXSV' NE '').M502                        83499.
&STRCXSV SETC  '0'                                            83501.
.M502    MNOTE &STRCXSV,' STRC8303 ONE OR MORE EXIT''S REFERENCE THIS P*
               OINT'                                          83503.
         MNOTE &STRCXSV,'          VIA &LABEL'                83505.
&STRCXIT(&STRCNST)  SETB  0                                   83505.
.M507    ANOP
.*       CORP  CORP_GEN_EXIT_LABEL                            83508.
         AIF   (NOT &OSLINK).M095                             83085.
.*       CALL  CORP_RESTORE_REG13                             83087.
         AIF   (NOT &DYNAMSA).M268                            83264.
&LABEL   LR    1,13
&LABEL   SETC  ''                                             83267.
.M268    AIF   (&STRCSFP AND '&IDBYTE' EQ '01').M271          83269.
&LABEL   L     13,4(13)
         AGO   .M274                                          83274.
.M271    ANOP
&LABEL   L     13,$FIRSTSV+4
.M274    ANOP
&LABEL   SETC  ''                                             83275.
.*       CORP  CORP_RESTORE_REG13                             83276.
         AIF   (NOT &DYNAMSA).M100                            83090.
.*       CALL  CORP_FREE_DYNAM_SAVEAREA                       83092.
&LABEL   LA    0,(&SVLENG)*4
&LABEL   SETC  ''                                             83384.
*        FREEMAIN  R,LV=(0),A=(1)
         FREEMAIN  R,LV=(0),A=(1)                             83385.
.*       CORP  CORP_FREE_DYNAM_SAVEAREA                       83386.
         AGO   .M100                                          83095.
.M095    ANOP
.*       CALL  CORP_DEBUGGING_STORES                          83096.
         AIF   (NOT &STRCDCV).M256                            83230.
         AIF   (NOT &STRCDST).M236                            83232.
&SVOFF   SETC  '+12'                                          83234.
&CBOFF   SETC  '+12'                                          83235.
         AGO   .M244                                          83236.
.M236    ANOP
&CBOFF   SETC  ''                                             83237.
         AIF   (&STRCDPC).M239                                83238.
&SVOFF   SETC  ''                                             83242.
         AGO   .M243                                          83243.
.M239    ANOP
&SVOFF   SETC  '+4'                                           83240.
.M243    ANOP
.M244    ANOP
&LABEL   STM   14,12,&STRCPFX.CRP&CBOFF
&LABEL   SETC  ''                                             83247.
    AIF  ('&RETURN' EQ '' AND ('&RC' EQ '' OR '&RC' EQ 'NONE')).M255
&BCKREQD SETB  1                                              83250.
         MVC   &STRCPFX.BCK&CBOFF.(&SVLENG*4),&STRCPFX.SV&SVOFF
&RSTAREA SETC  'BCK'                                          83254.
.M255    ANOP
.M256    ANOP
.*       CORP  CORP_DEBUGGING_STORES                          83257.
.M100    ANOP
.*       CALL  CORP_SET_RETURN_CODE                           83101.
&RCREG   SETC  ''                                             83283.
         AIF   ('&RC' NE '').M293                             83284.
         AIF   (NOT &OSLINK).M311                             83286.
&LABEL   SR    15,15
&LABEL   SETC  ''                                             83290.
&RCREG   SETC  '15'                                           83291.
         AGO   .M311                                          83293.
.M293    AIF   ('&RC'(1,1) NE '(').M298                       83294.
&RCREG   SETC  '&RC(1)'                                       83296.
         AGO   .M311                                          83298.
.M298    AIF   ('&RC' EQ 'NONE').M311                         83299.
         AIF   ('&RC' NE '0').M304                            83301.
&LABEL   SR    15,15
         AGO   .M306                                          83304.
.M304    ANOP
&LABEL   LA    15,&RC
.M306    ANOP
&LABEL   SETC  ''                                             83307.
&RCREG   SETC  '15'                                           83308.
.M311    ANOP
.*       CORP  CORP_SET_RETURN_CODE                           83312.
.*       CALL  CORP_SAVE_RETURNING_REGS                       83105.
         AIF   (NOT &ANYSAVD).M378                            83323.
         AIF   (&OSLINK).M326                                 83325.
&OSPTR   SETC  ''                                             83330.
&LOCPTR  SETC  '&STRCPFX&RSTAREA+'                            83331.
         AGO   .M332                                          83332.
.M326    ANOP
&OSPTR   SETC  '(13)'                                         83327.
&LOCPTR  SETC  ''                                             83328.
.M332    AIF   ('&RCREG' EQ '').M348                          83333.
         AIF   (&FRSAREG GE 14).M342                          83335.
         AIF   ('&RCREG' EQ '15').M348                        83337.
&LABEL   LR    15,&RCREG
&LABEL   SETC  ''                                             83340.
         AGO   .M348                                          83342.
.M342    ANOP
&OFFSET  SETA  (&OFFSET0-1)*4                                 83343.
&LABEL   ST    &RCREG,&LOCPTR&OFFSET&OSPTR
&LABEL   SETC  ''                                             83346.
.M348    AIF   ('&FRSAREG' EQ '14' OR N'&RETURN EQ 0).M353    83349.
         MNOTE 4,' STRC8302 WARNING--NO CHECK MADE TO INSURE RETURNING'
         MNOTE 0,'          REGISTERS ARE AMONG THOSE SAVED IN'
         MNOTE 0,'          TRUNCATED SAVE AREA'              83352.
.M353    ANOP
&I       SETA  1                                              83354.
.M355    AIF   (&I GT N'&RETURN).M378                         83355.
         AIF   (T'&RETURN(&I) NE 'N').M362                    83357.
&OFFSET  SETA  (&OFFSET0+&RETURN(&I)-((&RETURN(&I)+2)/16*16))*4
&LABEL   ST    &RETURN(&I),&LOCPTR&OFFSET&OSPTR
         AGO   .M373                                          83362.
.M362    AIF   (&FRSAREG GE 14).M368                          83363.
&LABEL   ST    &RETURN(&I),&LOCPTR.(&RETURN(&I)&OFF0STR)*4&OSPTR
         AGO   .M373                                          83368.
.M368    ANOP
&LABEL   ST    &RETURN(&I),&LOCPTR.(&RETURN(&I)&OFF0STR-((&RETURN(&I)+2:
               )/16*16))*4&OSPTR
.M373    ANOP
&I       SETA  &I+1                                           83374.
&LABEL   SETC  ''                                             83375.
         AGO   .M355                                          83376.
.M378    ANOP
.*       CORP  CORP_SAVE_RETURNING_REGS                       83379.
         AIF   (&OSLINK OR NOT &STRCDST).M116                 83112.
&LABEL   MVI   &STRCPFX.SV,X'FF'
&LABEL   SETC  ''                                             83115.
.M116    ANOP
.*       CALL  CORP_RESTORE_REGISTERS                         83117.
         AIF   (NOT &ANYSAVD).M415                            83393.
         AIF   (NOT &FRRESTK).M401                            83395.
&I       SETA  &REST1                                         83397.
&OFFSET  SETA  (&OFFSET0+&I-((&I+2)/16*16))*4                 83398.
&LABEL   L&MULT  &REST1,&REST2&COMMA2&LOCPTR&OFFSET&OSPTR
         AGO   .M413                                          83401.
.M401    AIF   (&FRSAREG GE 14).M407                          83402.
&LABEL   L&MULT  &REST1,&REST2&COMMA2&LOCPTR.(&REST1&OFF0STR)*4&OSPTR
         AGO   .M413                                          83407.
.M407    ANOP
&LABEL   L&MULT  &REST1,&REST2&COMMA2&LOCPTR.(&REST1&OFF0STR-((&REST1+2:
               )/16*16))*4&OSPTR
.M413    ANOP
&LABEL   SETC  ''                                             83414.
.M415    ANOP
.*       CORP  CORP_RESTORE_REGISTERS                         83416.
         AIF   (NOT &OSLINK).M123                             83119.
&LABEL   MVI   12(13),X'FF'
&LABEL   SETC  ''                                             83122.
.M123    AIF   ('&LINK' EQ 'NONE').M129                       83125.
&LABEL   BR    &LINK
&LABEL   SETC  ''                                             83128.
.M129    ANOP
.*       CALL  CORP_GEN_CRP_BCK_AREAS                         83130.
         AIF   (&OSLINK OR NOT &STRCDCV).M485                 83444.
         AIF   ('&LINK' NE 'NONE').M451                       83446.
&TARGET  SETC  '&STRCPFX.FIN'                                 83448.
&LABEL   B     &TARGET
&LABEL   SETC  '&TARGET'                                      83450.
.M451    ANOP
&LSTAREA SETC  '&STRCPFX.CRP'                                 83452.
&LSTAREA DS    0F
         AIF   (NOT &STRCDST).M467                            83454.
         DC    X'FC&IDBYTE.0000'
         AIF   (&BCKREQD).M458                                83457.
&FWDPTR  SETC  '&STRCPFX.FWD'                                 83461.
         AGO   .M462                                          83462.
.M458    ANOP
&FWDPTR  SETC  '&STRCPFX.BCK'                                 83459.
.M462    ANOP
&STRCPSP EQU   &STRCPFX.CRP
         DC    A(&STRCPSA,&FWDPTR)
.M467    DC    15F'0'
         AIF   (NOT &BCKREQD).M482                            83469.
&LSTAREA SETC  '&STRCPFX.BCK'                                 83471.
&LSTAREA DS    0F
         AIF   (NOT &STRCDST).M480                            83474.
         DC    X'FB&IDBYTE.0000'
&FWDPTR  SETC  '&STRCPFX.FWD'                                 83478.
         DC    A(&STRCPFX.CRP,&FWDPTR)
.M480    DC    (&SVLENG)F'0'
.M482    ANOP
&STRCPSP SETC  '&FWDPTR'                                      83483.
&STRCPSA SETC  '&LSTAREA'                                     83484.
.M485    ANOP
.*       CORP  CORP_GEN_CRP_BCK_AREAS                         83486.
         AIF   ('&LABEL' EQ '').M136                          83132.
&LABEL   DS    0H
&LABEL   SETC  ''                                             83135.
.M136    STRCPOP
.*       CALL  CORP_RESTORE_DEBUG_ENVIRONMENT                 83140.
         AIF   ('&PVDEBUG' EQ '').M433                        83423.
&STRCDBN SETB  ('&PVDEBUG'(1,1) EQ '1')                       83425.
&STRCDPN SETB  ('&PVDEBUG'(2,1) EQ '1')                       83426.
&STRCDLB SETB  ('&PVDEBUG'(3,1) EQ '1')                       83427.
&STRCDBC SETB  ('&PVDEBUG'(4,1) EQ '1')                       83428.
&STRCDPC SETB  ('&PVDEBUG'(5,1) EQ '1')                       83429.
&STRCDPT SETB  ('&PVDEBUG'(6,1) EQ '1')                       83430.
&STRCDCV SETB  ('&PVDEBUG'(7,1) EQ '1')                       83431.
&STRCDST SETB  ('&PVDEBUG'(8,1) EQ '1')                       83432.
.M433    ANOP
.*       CORP  CORP_RESTORE_DEBUG_ENVIRONMENT                 83434.
.FIN     MEND
./ ADD NAME=DO       8512-86097-86097-1148-00492-00492-00000-ISPFDYN
         MACRO
&USRNAME DO    &REL=,&MASK=                                   21001.
         COPY  STRCGBLS
         LCLA  &WHX               WHILE_INDEX                 21031.
         LCLA  &WHXEND            WHILE_END_INDEX             21034.
         LCLA  &UNX               UNTIL_INDEX                 21035.
         LCLA  &UNXEND            UNTIL_END_INDEX             21035.
         LCLA  &OPF               OPERAND_FORMAT              21036.
         LCLA  &I                 I                           21038.
         LCLA  &LB                LB                          21039.
         LCLA  &LASTOP            LASTOP                      21041.
         LCLB  &WHPRES            WHILE_PRESENT               21045.
         LCLB  &UNPRES            UNTIL_PRESENT               21045.
         LCLB  &LBLABRQ           LB_LABEL_REQ                21048.
         LCLB  &WHCTEST           WHILE_COND_TEST             21050.
         LCLB  &UNCTEST           UNTIL_COND_TEST             21050.
         LCLB  &CONDREQ           THIS_CONDITIONAL_REQD       21052.
         LCLC  &LBOPID            LB_OPCODE_ID                21057.
         LCLC  &LBOP1             LB_OPERAND1                 21059.
         LCLC  &LBOP2             LB_OPERAND2                 21059.
         LCLC  &LBLOGIC           LB_LOGIC_OP                 21061.
         LCLC  &LBTYPE            LOOPING_BRANCH_TYPE         21064.
         LCLC  &LABEL             LABEL                       21067.
         LCLC  &FIRSTID           FIRST_ID                    21069.
         LCLC  &MAINOP            MAIN_OP                     21071.
         LCLA  &OPCOUNT           OPERAND_COUNT               21385.
         LCLA  &PASS              PASS                        21587.
         LCLC  &B8,&B10,&B11      B8, B10, B11                21776.
         LCLC  &X                 MACRO TEMPORARY
         STRCTRAC  DO                                         21075.
&USRNAME STRCPUSH  TYPEVAL=DO                                 21077.
         AIF   (&STRCERR).FIN                                 21081.
         AIF   ('&REL&MASK' EQ '').M088                       21085.
         MNOTE 8,' STRC2113 REL= OR MASK= NOT IN PARENTHESES--IGNORED'
.M088    ANOP
&LABEL   SETC  '&USRNAME'                                     21089.
.* CALL DO_SCAN_OPERANDS                                      21090.
.* CALL DO_FIND_KEYWORDS_AND_PRESENCE                         21137.
&WHX     SETA  0                                              21166.
&UNX     SETA  0                                              21166.
         AIF   ('&SYSLIST(1)' EQ 'WHILE' OR '&SYSLIST(1)' EQ 'UNTIL'   *
               OR '&SYSLIST(1)' EQ 'FOREVER'                           *
               OR '&SYSLIST(1)' EQ '').M171                   21167.
         MNOTE 8,' STRC2108 FIRST OPERAND MUST BE "WHILE", "UNTIL",'
         MNOTE 0,'          "FOREVER", OR OMITTED'            21169.
.M171    ANOP
&I       SETA  1                                              21173.
&LASTOP  SETA  N'&SYSLIST                                     21174.
.M175    AIF   (&I GT &LASTOP).M202                           21175.
         AIF   ('&SYSLIST(&I)' NE 'WHILE').M186               21177.
         AIF   (&WHX NE 0).M182                               21179.
&WHX     SETA  &I                                             21181.
         AGO   .M185                                          21182.
.M182    MNOTE 8,' STRC2101 OPERANDS AFTER SECOND "WHILE" IGNORED'
&LASTOP  SETA  &I-1                                           21184.
.M185    AGO   .M197                                          21185.
.M186    AIF   ('&SYSLIST(&I)' NE 'UNTIL').M196               21187.
         AIF   (&UNX NE 0).M192                               21189.
&UNX     SETA  &I                                             21191.
         AGO   .M195                                          21192.
.M192    MNOTE 8,' STRC2102 OPERANDS AFTER SECOND "UNTIL" IGNORED'
&LASTOP  SETA  &I-1                                           21194.
.M195    ANOP
.M196    ANOP
.M197    ANOP
&I       SETA  &I+1                                           21198.
         AGO   .M175                                          21199.
.M202    AIF   (&WHX LE 1 OR &UNX LE 1).M205                  21202.
         MNOTE 8,' STRC2114 SUPERFLUOUS LOOPING GROUP IGNORED'
.M205    ANOP
&UNPRES  SETB  (&UNX GT 0)                                    21214.
&WHPRES SETB (&WHX GT 0 OR &UNX GT 1 OR (NOT &UNPRES AND &LASTOP GT 0))
.* CORP DO_FIND_KEYWORDS_AND_PRESENCE                         21220.
.* CALL DO_FIND_END_INDEXES_AND_MAIN_OP                       21142.
&MAINOP  SETC  ''                                             21230.
&WHXEND  SETA  &LASTOP                                        21231.
&UNXEND  SETA  &LASTOP                                        21231.
         AIF   (&LASTOP NE 1).M235                            21232.
         AIF   ('&SYSLIST(1)' NE 'FOREVER').M235              21232.
&WHPRES  SETB  0                                              21234.
&UNPRES  SETB  0                                              21234.
         AGO   .M299                                          21235.
.M235    AIF   (NOT &WHPRES).M279                             21236.
         AIF   (NOT &UNPRES).M273                             21238.
&I       SETA  &WHX-1                                         21240.
         AIF   (&UNX GE &WHX).M248                            21241.
&UNXEND  SETA  &I-1                                           21243.
         AIF ('&SYSLIST(&I)' EQ 'AND' OR '&SYSLIST(&I)' EQ 'OR').M247
&UNXEND  SETA  &I                                             21246.
.M247    AGO   .M255                                          21247.
.M248    ANOP
&I       SETA  &UNX-1                                         21249.
&WHXEND  SETA  &I-1                                           21250.
         AIF ('&SYSLIST(&I)' EQ 'AND' OR '&SYSLIST(&I)' EQ 'OR').M254
&WHXEND  SETA  &I                                             21253.
.M254    ANOP
.M255    AIF   (&WHX NE &WHXEND).M264                         21256.
         MNOTE 8,' STRC2109 WHILE TEST IS VOID--IGNORED'      21262.
&WHPRES  SETB  0                                              21263.
         AGO   .M272                                          21264.
.M264    AIF   (&UNX NE &UNXEND).M272                         21265.
         MNOTE 8,' STRC2111 UNTIL TEST IS VOID--IGNORED'      21269.
&UNPRES  SETB  0                                              21270.
.M272    AGO   .M278                                          21272.
.M273    AIF   (&WHX NE &WHXEND).M278                         21274.
&WHPRES  SETB  0                                              21276.
.M278    AGO   .M284                                          21278.
.M279    AIF   (NOT (&UNPRES AND &UNX EQ &UNXEND)).M284       21280.
&UNPRES  SETB  0                                              21282.
.M284    AIF   (NOT (&WHPRES AND &UNPRES)).M298               21285.
&MAINOP  SETC  'AND'                                          21287.
         AIF   ('&SYSLIST(&I)' NE 'OR').M291                  21288.
&MAINOP  SETC  'OR'                                           21290.
         AGO   .M298                                          21291.
.M291    AIF   ('&SYSLIST(&I)' EQ 'AND').M298                 21292.
         MNOTE 8,' STRC2110 LOGIC OPERATOR BETWEEN "WHILE" AND "UNTIL"'
         MNOTE 0,'          OMITTED--"AND" ASSUMED'           21294.
.M298    ANOP
.M299    ANOP
.* CORP DO_FIND_END_INDEXES_AND_MAIN_OP                       21300.
.* CALL DO_LOOPING_BRANCH_AND_FIRST_OPERAND                   21147.
&LB      SETA  0                                              21309.
&LBTYPE  SETC  'NONE'                                         21310.
         AIF   (NOT &UNPRES).M326                             21311.
&I       SETA  &UNX+1                                         21313.
&UNX     SETA  &I                                             21313.
&X       SETC  '&SYSLIST(&I,1)'                               21316.
       AIF ('&X' NE 'BCT' AND '&X' NE 'BXLE' AND '&X' NE 'BXH').M323
&LBTYPE  SETC  'UNTIL'                                        21318.
&UNCTEST SETB  (&UNXEND GT &I)                                21319.
&LB      SETA  &I                                             21320.
         AGO   .M325                                          21323.
.M323    ANOP
&UNCTEST SETB  1                                              21324.
.M325    AGO   .M330                                          21326.
.M326    ANOP
&UNX     SETA  0                                              21327.
&UNXEND  SETA  0                                              21327.
&UNCTEST SETB  0                                              21328.
.M330    AIF   (NOT &WHPRES).M365                             21331.
&I       SETA  &WHX+1                                         21333.
&WHX     SETA  &I                                             21333.
&X       SETC  '&SYSLIST(&I,1)'                               21336.
       AIF ('&X' NE 'BCT' AND '&X' NE 'BXLE' AND '&X' NE 'BXH').M362
         AIF   ('&LBTYPE' NE 'NONE').M355                     21338.
&LBTYPE  SETC  'WHILE'                                        21340.
&WHCTEST SETB  (&WHXEND GT &I)                                21341.
&LB      SETA  &I                                             21342.
         AIF   ('&X' NE 'BCT').M349                           21345.
         MNOTE 4,' STRC2103 WARNING--"WHILE,(BCT,..." WILL LOOP ONE'
         MNOTE 0,'          LESS TIME THAN VALUE IN REGISTER' 21347.
.M349    AIF   ('&MAINOP' NE 'OR').M354                       21350.
         MNOTE 4,' STRC2104 WARNING--LOOPING BRANCH MAY NOT BE'
         MNOTE 0,'          EXECUTED ON EVERY ITERATION'      21352.
.M354    AGO   .M361                                          21354.
.M355    MNOTE 8,' STRC2105 TWO LOOPING BRANCHES INVALID IN "DO"--'
         MNOTE 0,'          "WHILE" IGNORED'                  21357.
&WHPRES  SETB  0                                              21358.
&WHCTEST SETB  0                                              21358.
&MAINOP  SETC  ''                                             21359.
&WHX     SETA  0                                              21360.
&WHXEND  SETA  0                                              21360.
.M361    AGO   .M364                                          21361.
.M362    ANOP
&WHCTEST SETB  1                                              21363.
.M364    AGO   .M368                                          21365.
.M365    ANOP
&WHX     SETA  0                                              21366.
&WHXEND  SETA  0                                              21366.
&WHCTEST SETB  0                                              21367.
.M368    ANOP
.* CALL DO_LOOPING_BRANCH_PROCESS                             21369.
&LBOPID  SETC  ''                                             21387.
&LBOP1   SETC  ''                                             21387.
&LBOP2   SETC  ''                                             21387.
&LBLOGIC SETC  ''                                             21387.
         AIF   (&LB EQ 0).M432                                21389.
&LBOPID  SETC  '&SYSLIST(&LB,1)'                              21391.
         AIF   ('&LBOPID' NE 'BCT').M395                      21392.
&OPCOUNT SETA  2                                              21394.
         AGO   .M397                                          21395.
.M395    ANOP
&OPCOUNT SETA  3                                              21396.
.M397    AIF   (N'&SYSLIST(&LB) NE 1).M401                    21398.
         MNOTE 8,' STRC2112 PARENTHESES OMITTED AROUND &SYSLIST(&LB)'
         AGO   .M432                                          21401.
.M401    ANOP
&LBOP1   SETC  '&SYSLIST(&LB,2)'                              21402.
&LBOP2   SETC  '&SYSLIST(&LB,3)'                              21403.
         AIF   (N'&SYSLIST(&LB) EQ &OPCOUNT).M407             21404.
         MNOTE 8,' STRC2106 INVALID NUMBER OF OPERANDS FOR &LBOPID'
.M407    ANOP
&LB      SETA  &LB+1                                          21408.
         AIF   ('&LBTYPE' EQ 'WHILE' AND &WHCTEST).M413       21411.
         AIF   (NOT ('&LBTYPE' EQ 'UNTIL' AND &UNCTEST)).M432
.M413    ANOP
&LBLOGIC SETC  '&SYSLIST(&LB)'                                21414.
         AIF   ('&LBLOGIC' NE 'AND' AND '&LBLOGIC' NE 'OR').M418
&LB      SETA  &LB+1                                          21417.
         AGO   .M422                                          21418.
.M418    MNOTE 8,' STRC2107 &LBLOGIC INVALID AFTER LOOPING BRANCH--'
         MNOTE 0,'          "AND" INSERTED'                   21419.
&LBLOGIC SETC  'AND'                                          21421.
.M422    AIF   ('&LBTYPE' NE 'WHILE').M426                    21423.
&WHX     SETA  &LB                                            21425.
         AGO   .M432                                          21426.
.M426    ANOP
&UNX     SETA  &LB                                            21427.
.M432    ANOP
&LBLABRQ SETB  ('&LBTYPE' EQ 'WHILE')                         21433.
.* CORP DO_LOOPING_BRANCH_PROCESS                             21434.
.* CORP DO_LOOPING_BRANCH_AND_FIRST_OPERAND                   21372.
.* CALL DO_SET_FORMAT                                         21153.
.*   SOME CODE FROM DO_INFO_SAVE HAS BEEN MOVED HERE TO SIMPLIFY
.*   SETTING &B8, &B10, AND &B11.
&B8      SETC  'W'                                            21780.
&B10     SETC  '0'                                            21781.
&B11     SETC  '0'                                            21781.
         AIF   (NOT &WHPRES).M535                             21440.
         AIF   ('&LBTYPE' NE 'WHILE').M489                    21442.
&B8      SETC  'U'                                            21789.
         AIF   (NOT &WHCTEST).M472                            21444.
         AIF   ('&LBLOGIC' NE 'AND').M459                     21446.
&B10     SETC  'W'                                            21805.
&B11     SETC  'N'                                            21818.
         AIF   (NOT &UNPRES).M456                             21448.
         AIF   ('&MAINOP' NE 'AND').M453                      21450.
&OPF     SETA  15                                             21452.
         AGO   .ENDSET
.M453    ANOP
&OPF     SETA  16                                             21454.
         AGO   .ENDSET
.M456    ANOP
&OPF     SETA  13                                             21457.
&B8      SETC  'L'                                            21793.
         AGO   .ENDSET
.M459    ANOP
&B10     SETC  'B'                                            21808.
&B11     SETC  'W'                                            21821.
         AIF   (NOT &UNPRES).M468                             21460.
         AIF   ('&MAINOP' NE 'AND').M465                      21462.
&OPF     SETA  17                                             21464.
         AGO   .ENDSET
.M465    ANOP
&OPF     SETA  18                                             21466.
         AGO   .ENDSET
.M468    ANOP
&OPF     SETA  14                                             21469.
&B8      SETC  'L'                                            21793.
         AGO   .ENDSET
.M472    ANOP
&B10     SETC  'B'                                            21808.
&B11     SETC  'N'                                            21818.
         AIF   (NOT &UNPRES).M481                             21473.
         AIF   ('&MAINOP' NE 'AND').M478                      21475.
&OPF     SETA  11                                             21477.
         AGO   .ENDSET
.M478    ANOP
&OPF     SETA  12                                             21479.
         AGO   .ENDSET
.M481    ANOP
&OPF     SETA  10                                             21482.
&B8      SETC  'L'                                            21793.
         AGO   .ENDSET
.M489    AIF   ('&LBTYPE' NE 'UNTIL').M518                    21490.
&B8      SETC  'L'                                            21793.
         AIF   (NOT &UNCTEST).M510                            21492.
         AIF   ('&LBLOGIC' NE 'AND').M502                     21494.
&B11     SETC  'U'                                            21811.
         AIF   ('&MAINOP' NE 'AND').M499                      21496.
&OPF     SETA  7                                              21498.
&B10     SETC  'W'                                            21818.
         AGO   .ENDSET
.M499    ANOP
&OPF     SETA  9                                              21500.
&B10     SETC  'B'                                            21821.
         AGO   .ENDSET
.M502    ANOP
&B10     SETC  'U'                                            21824.
         AIF   ('&MAINOP' NE 'AND').M506                      21503.
&OPF     SETA  6                                              21505.
&B11     SETC  'N'                                            21805.
         AGO   .ENDSET
.M506    ANOP
&OPF     SETA  8                                              21507.
&B11     SETC  'W'                                            21808.
         AGO   .ENDSET
.M510    AIF   ('&MAINOP' NE 'AND').M514                      21511.
&OPF     SETA  4                                              21513.
&B10     SETC  'W'                                            21805.
&B11     SETC  'N'                                            21818.
         AGO   .ENDSET
.M514    ANOP
&OPF     SETA  5                                              21515.
&B10     SETC  'B'                                            21808.
&B11     SETC  'W'                                            21821.
         AGO   .ENDSET
.M518    AIF   (NOT &UNPRES).M527                             21519.
&B8      SETC  'U'                                            21789.
         AIF   ('&MAINOP' NE 'AND').M524                      21521.
&OPF     SETA  2                                              21523.
         AGO   .ENDSET
.M524    ANOP
&OPF     SETA  3                                              21525.
         AGO   .ENDSET
.M527    ANOP
&OPF     SETA  1                                              21528.
         AGO   .ENDSET
.M535    AIF   (NOT &UNPRES).M554                             21536.
         AIF   ('&LBTYPE' NE 'UNTIL').M551                    21538.
&B8      SETC  'L'                                            21793.
         AIF   (NOT &UNCTEST).M548                            21540.
         AIF   ('&LBLOGIC' NE 'AND').M545                     21542.
&OPF     SETA  22                                             21544.
&B10     SETC  'B'                                            21811.
&B11     SETC  'U'                                            21818.
         AGO   .ENDSET
.M545    ANOP
&OPF     SETA  21                                             21546.
&B10     SETC  'U'                                            21808.
&B11     SETC  'N'                                            21824.
         AGO   .ENDSET
.M548    ANOP
&OPF     SETA  19                                             21549.
&B10     SETC  'B'                                            21808.
&B11     SETC  'N'                                            21818.
         AGO   .ENDSET
.M551    ANOP
&OPF     SETA  20                                             21552.
&B8      SETC  'U'                                            21789.
         AGO   .ENDSET
.M554    ANOP
&OPF     SETA  0                                              21555.
&B8      SETC  'B'                                            21796.
.ENDSET  ANOP
.* CORP DO_SET_FORMAT                                         21558.
.* CORP DO_SCAN_OPERANDS                                      21158.
   AIF   (&OPF EQ 0 OR &OPF EQ 10 OR &OPF EQ 12 OR &OPF EQ 19).M098
&STRCEND(&STRCNST)  SETB  1                                   21097.
.M098    AIF   (NOT &STRCDBC).M104                            21099.
&LABEL   SR    1,1
&LABEL   SETC  ''                                             21102.
         STH   1,&STRCPFX.DOL
.M104    AIF   (&OPF EQ 0).M113                               21105.
.* CALL DO_BRANCH_FOR_LOOP_ENTRY                              21107.
         AIF   (&OPF GT 9).M571                               21566.
         AIF   (&OPF LT 2).M581                               21566.
         AIF   (&OPF GT 3 AND &OPF LT 6).M581                 21566.
&LABEL   B     &STRCPFX.W1
         AGO   .CLEARLB
.M571    AIF   (&OPF GT 18).M576                              21571.
&LABEL   B     &STRCPFX.LPB
         AGO   .CLEARLB
.M576    AIF   (&OPF EQ 19).M581                              21576.
&LABEL   B     &STRCPFX.BEG
.CLEARLB ANOP
&LABEL   SETC  ''
.M581    ANOP
.* CORP DO_BRANCH_FOR_LOOP_ENTRY                              21582.
.* CALL DO_GENERATE_ALL_CONDITIONAL_TESTS                     21110.
&PASS    SETA  1                                              21589.
.M590    AIF   (&PASS GT 2).M634                              21590.
         AIF   (&PASS NE 1).M595                              21592.
.* CALL DO_UNTIL_PREPROCESS                                   21594.
&CONDREQ SETB  (&UNCTEST)                                     21643.
         AIF   (NOT &UNCTEST).M672                            21644.
&STRCFRX SETA  &UNX                                           21646.
&STRCLSX SETA  &UNXEND                                        21647.
&STRCUBL SETC  '&STRCPFX.END'                                 21649.
&STRCUFL SETC  '&STRCPFX.W1'                                  21650.
&STRCUFC SETB  0                                              21652.
&STRCUID SETC  'U'                                            21653.
&FIRSTID SETC  '&STRCPFX.U1'                                  21654.
         AIF   (&OPF NE 3 AND &OPF NE 8 AND &OPF NE 9).M661   21657.
&STRCUFC SETB  1                                              21658.
&STRCUBL SETC  '&STRCPFX.BEG'                                 21659.
         AGO   .M671                                          21660.
.M661    AIF   (&OPF NE 11 AND &OPF NE 15 AND &OPF NE 17).M664
&STRCUFL SETC  '&STRCPFX.LPB'                                 21662.
         AGO   .M671                                          21663.
.M664    AIF   (&OPF NE 12 AND &OPF NE 16 AND &OPF NE 18).M668
&STRCUBL SETC  '&STRCPFX.LPB'                                 21665.
&STRCUFL SETC  '&STRCPFX.BEG'                                 21666.
         AGO   .M671                                          21667.
.M668    AIF   (&OPF LT 20).M671                              21664 .
&STRCUFL SETC  '&STRCPFX.BEG'                                 21669.
.M671    ANOP
.M672    ANOP
.* CORP DO_UNTIL_PREPROCESS                                   21673.
         AGO   .M597                                          21595.
.M595    ANOP
.* CALL DO_WHILE_PREPROCESS                                   21596.
&CONDREQ SETB  (&WHCTEST)                                     21680.
         AIF   (NOT &WHCTEST).M692                            21681.
&STRCFRX SETA  &WHX                                           21683.
&STRCLSX SETA  &WHXEND                                        21684.
&STRCUBL SETC  '&STRCPFX.END'                                 21685.
&STRCUFL SETC  '&STRCPFX.BEG'                                 21687.
&STRCUFC SETB  1                                              21689.
&STRCUID SETC  'W'                                            21690.
&FIRSTID SETC  '&STRCPFX.W1'                                  21691.
.M692    ANOP
.* CORP DO_WHILE_PREPROCESS                                   21693.
.M597    ANOP
         AIF   (NOT &STRCDDM).M608                            DEBUGMACS
         MNOTE *,' STRC2199 CONDREQ=&CONDREQ,FRX=&STRCFRX,LSX=&STRCLSX,*
               UBL=&STRCUBL,UFL=&STRCUFL'                     DEBUGMACS
.M608    AIF   (NOT &CONDREQ).M632                            21608.
.* CALL DO_GENERATE_CONDITIONAL_SET                           21610.
&STRCFLU SETB  0                                              21704.
         AIF   ('&LABEL' EQ '').M718                          21705.
         AIF   ('&FIRSTID' NE '').M712                        21707.
&FIRSTID SETC  '&LABEL'                                       21711.
         AGO   .M716                                          21712.
.M712    ANOP
&LABEL   DS    0H
.M716    ANOP
&LABEL   SETC  ''                                             21717.
.M718    ANOP
&FIRSTID STRCCEP  &SYSLIST(1),&SYSLIST(2),&SYSLIST(3),&SYSLIST(4),     *
               &SYSLIST(5),&SYSLIST(6),&SYSLIST(7),&SYSLIST(8),        *
               &SYSLIST(9),&SYSLIST(10),&SYSLIST(11),&SYSLIST(12),     *
               &SYSLIST(13),&SYSLIST(14),&SYSLIST(15),&SYSLIST(16),    *
               &SYSLIST(17),&SYSLIST(18),&SYSLIST(19),&SYSLIST(20),    *
               &SYSLIST(21),&SYSLIST(22),&SYSLIST(23),&SYSLIST(24),    *
               &SYSLIST(25),&SYSLIST(26),&SYSLIST(27),&SYSLIST(28),    *
               &SYSLIST(29),&SYSLIST(30),&SYSLIST(31),&SYSLIST(32),    *
               &SYSLIST(33),&SYSLIST(34),&SYSLIST(35),&SYSLIST(36),    *
               &SYSLIST(37),&SYSLIST(38),&SYSLIST(39),&SYSLIST(40),    *
               &SYSLIST(41),&SYSLIST(42),&SYSLIST(43),&SYSLIST(44),    *
               &SYSLIST(45),&SYSLIST(46),&SYSLIST(47),&SYSLIST(48),    *
               &SYSLIST(49),&SYSLIST(50)                      21719.
.* CORP DO_GENERATE_CONDITIONAL_SET                           21736.
         AIF   (&PASS NE 1).M626                              21619.
.* CALL DO_UNTIL_POSTPROCESS                                  21622.
         AIF   (&OPF EQ 11).M748                              21747.
         AIF   (&OPF LT 15 OR &OPF GT 18).M751                21747.
.M748    B     &STRCUFL
.M751    ANOP
.* CORP DO_UNTIL_POSTPROCESS                                  21752.
.M626    AIF   (NOT &STRCFLU).M631                            21627.
&LABEL   SETC  '&STRCUFL'                                     21629.
.M631    ANOP
.M632    ANOP
&PASS    SETA  &PASS+1                                        21633.
         AGO   .M590                                          21634.
.M634    ANOP
.* CORP DO_GENERATE_ALL_CONDITIONAL_TESTS                     21636.
.M113    ANOP
.* CALL DO_LABEL_BLOCK                                        21114.
         AIF   (&OPF EQ 0 OR &OPF EQ 3 OR &OPF EQ 5).M760     21759.
         AIF   (&OPF LT 8 OR &OPF EQ 13 OR &OPF EQ 15).M770   21759.
.M760    AIF   ('&LABEL' EQ '&STRCPFX.BEG').M770              21760.
         AIF   ('&LABEL' EQ '').M767                          21763.
&LABEL   DS    0H
.M767    ANOP
&LABEL   SETC  '&STRCPFX.BEG'                                 21767.
.M770    ANOP
.* CORP DO_LABEL_BLOCK                                        21771.
.* CALL DO_INFO_SAVE                                          21116.
.*   LINES 21780. THROUGH 21827. SETTING &B8, &B10, AND &B11 DEPENDING
.*   ON &OPF MOVED TO DO_SET_FORMAT.
&STRCINF(&STRCNST)  SETC  '&B8&B10&B11&LBLABRQ.0000'          21828.
&STRCOP1(&STRCNST)  SETC  '&LBOP1'                            21835.
&STRCOP2(&STRCNST)  SETC  '&LBOP2'                            21836.
&STRCOP3(&STRCNST)  SETC  '&LBOPID'                           21837.
.* CORP DO_INFO_SAVE                                          21838.
.* CALL DO_TRACE_COUNTERS                                     21119.
         AIF   (NOT (&STRCDBC OR &STRCDBN)).M869              21844.
         AIF   (NOT &STRCDBC).M855                            21846.
&LABEL   LH    1,&STRCPFX.DOL
&LABEL   SETC  ''                                             21849.
         LA    1,1(1)
         STH   1,&STRCPFX.DOL
         LH    1,&STRCPFX.DTR
         LA    1,1(1)
         STH   1,&STRCPFX.DTR
.M855    ANOP
&LABEL   B     &STRCPFX.GO
&LABEL   SETC  '&STRCPFX.GO'                                  21858.
         AIF   (NOT &STRCDBN).M864                            21859.
         DC    C'&STRCNAM(&STRCNST)',0H'0'
.M864    AIF   (NOT &STRCDBC).M868                            21864.
&STRCPFX.DOL  DC  H'0' CURRENT LOOP COUNT
&STRCPFX.DTR  DC  H'0' OVERALL LOOP COUNT
.M868    ANOP
.M869    ANOP
.* CORP DO_TRACE_COUNTERS                                     21870.
         AIF   ('&LABEL' EQ '').M124                          21121.
&LABEL   DS    0H
.M124    ANOP
.FIN     MEND
./ ADD NAME=DOCASE   8512-86097-86097-1148-00142-00142-00000-ISPFDYN
         MACRO
&USRNAME DOCASE  &INDEX,&OPTION,&RANGE                        31001.
         COPY  STRCGBLS
         LCLB  &BRCASE1           BRANCH_TO_CASE1             31009.
         LCLB  &XRANGA            INDEX_RANGE_ASSURED         31012.
         LCLC  &XREG              INDEX_REG                   31016.
         LCLC  &XLENG             INDEX_LENGTH                31018.
         LCLC  &XTYPE             INDEX_TYPE                  31020.
         LCLC  &CFORMAT           CASE_FORMAT                 31023.
         LCLC  &LABEL             LABEL                       31029.
         LCLC  &XADDR             INDEX_ADDR                  31031.
         LCLA  &I,&J              I,J                         31192.
         LCLC  &X                 X                           31228.
         STRCTRAC  DOCASE                                     31040.
&USRNAME STRCPUSH  TYPEVAL=DOCASE,ENDVAL=1                    31042.
         AIF   (&STRCERR).FIN                                 31048.
&LABEL   SETC  '&USRNAME'                                     31052.
.*       CALL  DOCASE_EXTRACT_OPERANDS                        31054.
         AIF   ('&OPTION' NE 'SIMPLE' AND '&OPTION' NE 'SPARSE').M089
&CFORMAT SETC  '&OPTION'                                      31088.
         AGO   .M112                                          31089.
.M089    AIF   ('&OPTION' NE 'ONLY').M094                     31090.
&XRANGA  SETB  1                                              31092.
         AGO   .M098                                          31093.
.M094    AIF   ('&OPTION' EQ '' OR '&OPTION' EQ 'IFANY').M098
         MNOTE 8,' STRC3102 &OPTION INVALID SECOND OPERAND--IGNORED'
.M098    AIF   ('&INDEX' NE '').M103                          31100.
&CFORMAT SETC  'CONDTEST'                                     31102.
         AGO   .M112                                          31103.
.M103    ANOP
&CFORMAT SETC  'GENERAL'                                      31104.
         AIF  ('&INDEX(1)' NE 'IFANY' AND '&INDEX(1)' NE 'ONLY').M112
         MNOTE 4,' STRC3101 WARNING--"&INDEX(1)" ASSUMED AS INDEX'
         MNOTE 0,'          USE "DOCASE ,&INDEX(1)" FOR RANGE SPEC'
.M112    AIF   ('&RANGE' NE 'ONLY').M116                      31113.
&XRANGA  SETB  1                                              31115.
         AGO   .M122                                          31116.
.M116    AIF   ('&RANGE' EQ '' OR '&RANGE' EQ 'IFANY').M122
         MNOTE 8,' STRC3103 "&RANGE" INVALID THIRD OPERAND--IGNORED'
.M122    ANOP
&XLENG   SETC  '0'                                            31123.
         AIF   (N'&INDEX NE 1).M130                           31124.
         AIF   ('&INDEX'(1,1) NE '(').M130                    31124.
&XREG    SETC  '&INDEX(1)'                                    31128.
&XTYPE   SETC  'R'                                            31129.
         AGO   .M146                                          31130.
.M130    ANOP
&XREG    SETC  ''                                             31131.
         AIF   (N'&INDEX LE 1).M143                           31132.
&XTYPE   SETC  '&INDEX(2)'                                    31134.
  AIF  ('&XTYPE' EQ 'W' OR '&XTYPE' EQ 'H' OR '&XTYPE' EQ 'B').M146
&XLENG   SETC  '&XTYPE'                                       31139.
&XTYPE   SETC  'B'                                            31140.
&CFORMAT SETC  'CHARCOMP'                                     31141.
         AGO   .M146                                          31143.
.M143    ANOP
&XTYPE   SETC  'W'                                            31144.
.M146    ANOP
.*       CORP  DOCASE_EXTRACT_OPERANDS                        31147.
         AIF   ('&CFORMAT' EQ 'CONDTEST').M070                31057.
.*       CALL  DOCASE_INDEX_TO_REG1                           31059.
&XADDR   SETC  ''                                             31155.
         AIF   ('&XTYPE' NE 'R').M165                         31158.
         AIF   ('&XREG' EQ '1').M184                          31159.
&LABEL   LR    1,&XREG
&LABEL   SETC  ''                                             31162.
         AGO   .M184                                          31164.
.M165    AIF   ('&XTYPE' NE 'W').M169                         31165.
&LABEL   L     1,&INDEX(1)
&LABEL   SETC  ''                                             31167.
         AGO   .M184                                          31168.
.M169    AIF   ('&XTYPE' NE 'H').M173                         31169.
&LABEL   LH    1,&INDEX(1)
&LABEL   SETC  ''                                             31171.
         AGO   .M184                                          31172.
.M173    AIF   ('&XTYPE' NE 'B').M184                         31173.
         AIF   ('&CFORMAT' NE 'SIMPLE').M179                  31174.
&LABEL   SR    1,1
&LABEL   SETC  ''                                             31177.
         IC    1,&INDEX(1)
         AGO   .M184                                          31179.
.M179    ANOP
&XADDR   SETC  '&INDEX(1)'                                    31180.
.M184    ANOP
.*       CORP  DOCASE_INDEX_TO_REG1                           31185.
         AIF   ('&CFORMAT' EQ 'SIMPLE').M070                  31063.
.*       CALL  DOCASE_GENERAL_SETUP                           31065.
         AIF   ('&CFORMAT' NE 'GENERAL').M200                 31194.
&LABEL   B     &STRCPFX.BEG
&LABEL   SETC  ''                                             31198.
&BRCASE1 SETB  1                                              31199.
.M200    ANOP
&STRCGNL SETA  &STRCGNL+1                                     31201.
         AIF   (&STRCGNL GT &STRCGNX).M219                    31202.
&STRCMCV(&STRCGNL)  SETA  0-1                                 31204.
&STRCCL#(&STRCGNL)  SETA  1                                   31206.
&J       SETA  &STRCGNL*256                                   31208.
&I       SETA  &J-255                                         31209.
         AIF   ('&CFORMAT' NE 'GENERAL').M218                 31210.
.M212    AIF   (&I GT &J).M218                                31212.
&STRCOCC(&I)  SETB  0                                         31214.
&I       SETA  &I+1                                           31215.
         AGO   .M212                                          31216.
.M218    AGO   .M223                                          31219.
.M219    MNOTE 12,' STRC3104 GENERAL/SPARSE/CHARCOMP DOCASE NESTING'
         MNOTE 0,'           LEVEL &STRCGNL EXCEEDS MAXIMUM OF &STRCGNX*
               --'
         MNOTE 0,'           MACROS MUST BE MODIFIED'         31220.
.M223    ANOP
.*       CORP  DOCASE_GENERAL_SETUP                           31224.
.M070    ANOP
.*       CALL  DOCASE_DEBUG_STUFF                             31071.
         AIF   (NOT (&STRCDBC OR &STRCDBN)).M258              31230.
         AIF   (&BRCASE1).M248                                31232.
         AIF   ('&CFORMAT' NE 'GENERAL').M242                 31236.
&X       SETC  'BEG'                                          31241.
         AGO   .M244                                          31242.
.M242    ANOP
&X       SETC  'C1'                                           31243.
.M244    ANOP
&LABEL   B     &STRCPFX&X
&BRCASE1 SETB  1                                              31246.
&LABEL   SETC  ''                                             31247.
.M248    AIF   (NOT &STRCDBN).M252                            31249.
         DC    C'&STRCNAM(&STRCNST)'
.M252    AIF   (NOT &STRCDBC).M256                            31253.
&STRCPFX.LSC  DC  X'00' LAST CASE NUMBER
.M256    ANOP
         DS    0H
.M258    ANOP
.*       CORP  DOCASE_DEBUG_STUFF                             31259.
.*       CALL  DOCASE_INFO_SAVE                               31073.
&STRCOP1(&STRCNST)  SETC  '0'                                 31266.
&STRCOP2(&STRCNST)  SETC  '&XADDR'                            31267.
&STRCOP3(&STRCNST)  SETC  '&CFORMAT'                          31268.
&STRCOP4(&STRCNST)  SETC  '&XLENG'                            31269.
&STRCINF(&STRCNST)  SETC  '&BRCASE1.010&XRANGA'               31270.
.*       CORP  DOCASE_INFOR_SAVE                              31282.
         AIF   ('&LABEL' EQ '').M079                          31076.
&LABEL   DS    0H
.M079    ANOP
.FIN     MEND
./ ADD NAME=DOCASEND 8512-86097-86097-1148-00004-00004-00000-ISPFDYN
         MACRO
         DOCASEND  &USRNAME
         ESACOD  &USRNAME
         MEND
./ ADD NAME=DOEND    8512-86097-86097-1148-00004-00004-00000-ISPFDYN
         MACRO
         DOEND  &USRNAME
         OD     &USRNAME
         MEND
./ ADD NAME=EDIT     8512-85095-85095-1207-00347-00347-00000-ISPFDYN
         MACRO
&NAME    EDIT &P1,                                                     *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &P6,                                                    *
               &P7,                                                    *
               &P8,                                                    *
               &DATASET=,               DATASET NAME                   *
               &VOLUME=,                VOLUME                         *
               &PASSWORD=,              PASSWORD                       *
               &PANEL=,                 PANEL ID                       *
               &MACRO=,                 MACRO NAME                     *
               &PROFILE=,               PROFILE NAME                   *
               &DATAID=,                DATA ID                        *
               &MEMBER=,                MEMBER NAME                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFEDIT,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         GBLC  &SPFLVL
         LCLC  &NDX,&TEMP
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @EDIT &P1,&P2,&P3,&P4,&P5,&P6,&P7,&P8,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P1' NE '').LVLERR
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AIF   ('&P5' NE '').LVLERR
         AIF   ('&P6' NE '').LVLERR
         AIF   ('&P7' NE '').LVLERR
         AIF   ('&P8' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
.*       AIF   ('&DATASET' EQ '').ERR1
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFEDIT).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATASET' EQ '').CNT0
         AIF   ('&DATASET'(1,1) EQ '''').GENLIT
.CNT0    AIF   ('&VOLUME' EQ '').CNT1
         AIF   ('&VOLUME'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&PASSWORD' EQ '').CNT2
         AIF   ('&PASSWORD'(1,1) EQ '''').GENLIT
.CNT2    AIF   ('&PANEL' EQ '').CNT3
         AIF   ('&PANEL'(1,1) EQ '''').GENLIT
.CNT3    AIF   ('&DATAID' EQ '').CNT4
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
.CNT4    AIF   ('&MEMBER' EQ '').CNT5
         AIF   ('&MEMBER'(1,1) EQ '''').GENLIT
.CNT5    AIF   ('&MACRO' EQ '').CNT6
         AIF   ('&MACRO'(1,1) EQ '''').GENLIT
.CNT6    AIF   ('&PROFILE' EQ '').CNT7
         AIF   ('&PROFILE'(1,1) EQ '''').GENLIT
.CNT7    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFEDIT).BYP20
EDIT     DC    CL8'EDIT'                EDIT LITERAL FOR ISPF
&SPFEDIT SETB 1
.BYP20   ANOP
         AIF   ('&DATASET' EQ '').BYP30
         AIF   ('&DATASET'(1,1) NE '''').BYP30
SPFD&NDX DC    CL56&DATASET             EDIT THIS DATASET
.BYP30   ANOP
         AIF   ('&VOLUME' EQ '').BYP40
         AIF   ('&VOLUME'(1,1) NE '''').BYP40
SPFV&NDX DC    CL6&VOLUME               GENERATED VOLUME
.BYP40   ANOP
         AIF   ('&PASSWORD' EQ '').BYP50
         AIF   ('&PASSWORD'(1,1) NE '''').BYP50
SPFP&NDX DC    CL8&PASSWORD             GENERATED PASSWORD
.BYP50   ANOP
         AIF   ('&PANEL' EQ '').BYP60
         AIF   ('&PANEL'(1,1) NE '''').BYP60
SPFI&NDX DC    CL8&PANEL                GENERATED PANEL ID
.BYP60   ANOP
         AIF   ('&DATAID' EQ '').BYP62
         AIF   ('&DATAID'(1,1) NE '''').BYP62
SPFA&NDX DC    CL8&DATAID               GENERATED DATAID
.BYP62   ANOP
         AIF   ('&MEMBER' EQ '').BYP64
         AIF   ('&MEMBER'(1,1) NE '''').BYP64
SPFM&NDX DC    CL8&MEMBER               GENERATED MEMBER
.BYP64   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP70   ANOP
         AIF   ('&MACRO' EQ '').AYP60
         AIF   ('&MACRO'(1,1) NE '''').AYP60
SPFX&NDX DC    CL8&MACRO                GENERATED DATAID
.AYP60   ANOP
         AIF   ('&PROFILE' EQ '').AYP70
         AIF   ('&PROFILE'(1,1) NE '''').AYP70
SPFY&NDX DC    CL8&PROFILE              GENERATED DATAID
.AYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,EDIT                  GET ADDRESS OF EDIT KEYWORD
         AIF   ('&DATASET' EQ '').BYP85
         AIF   ('&DATASET'(1,1) NE '''').BYP80
         LA    15,SPFD&NDX              GET ADDRESS OF GENERATED DSN
         AGO   .BYP90
.BYP80   ANOP
         LA    15,&DATASET              GET ADDRESS OF DATASET
         AGO   .BYP90
.BYP85   ANOP
         LA    15,SPFNULLC              GET DUMMY ADDRESS FOR DATASET
.BYP90   ANOP
         AIF   ('&VOLUME' EQ '').BYP100
         AIF   ('&VOLUME'(1,1) EQ '''').BYP110
         LA    0,&VOLUME                GET ADDRESS OF VOLUME
         AGO   .BYP120
.BYP110  ANOP
         LA    0,SPFV&NDX               GET ADDRESS OF GENERATED VOLUME
         AGO   .BYP120
.BYP100  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR VOLUME
.BYP120  ANOP
         AIF   ('&PASSWORD' EQ '').BYP140
         AIF   ('&PASSWORD'(1,1) NE '''').BYP130
         LA    1,SPFP&NDX               GET ADDRESS OF GENERATED PASS
         AGO   .BYP150
.BYP130  ANOP
         LA    1,&PASSWORD              GET ADDRESS OF PASSWORD
         AGO   .BYP150
.BYP140  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR PASSWORD
.BYP150  ANOP
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&PANEL' EQ '').BYP170
         AIF   ('&PANEL'(1,1) EQ '''').BYP160
         LA    14,&PANEL                GET ADDRESS OF PANEL ID
         AGO   .BYP180
.BYP160  ANOP
         LA    14,SPFI&NDX              GET ADDRESS OF GENERATED PANEL
         AGO   .BYP180
.BYP170  ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR PANEL ID
.BYP180  ANOP
         AIF   ('&MACRO' EQ '').BYP172
         AIF   ('&MACRO'(1,1) EQ '''').BYP162
         LA    15,&MACRO                GET ADDRESS OF MACRO
         AGO   .BYP182
.BYP162  ANOP
         LA    15,SPFX&NDX              GET ADDRESS OF GENNED MACRO
         AGO   .BYP182
.BYP172  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MACRO
.BYP182  ANOP
         AIF   ('&PROFILE' EQ '').BYP174
         AIF   ('&PROFILE'(1,1) EQ '''').BYP164
         LA    0,&PROFILE               GET ADDRESS OF PROFILE
         AGO   .BYP184
.BYP164  ANOP
         LA    0,SPFY&NDX               GET ADDRESS OF GENNED PROFILE
         AGO   .BYP184
.BYP174  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR PROFILE
.BYP184  ANOP
         AIF   ('&DATAID' EQ '').AYP100
         AIF   ('&DATAID'(1,1) EQ '''').AYP110
         LA    1,&DATAID                GET ADDRESS OF DATAID
         AGO   .AYP120
.AYP100  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM OF DATAID
         AGO   .AYP120
.AYP110  ANOP
         LA    1,SPFA&NDX               GET ADDRESS OF GENNED DATAID
.AYP120  ANOP
         STM   14,1,&TEMP+16            STORE PARMS
         AIF   ('&MEMBER' EQ '').AYP170
         AIF   ('&MEMBER'(1,1) EQ '''').AYP160
         LA    14,&MEMBER               GET ADDRESS OF MEMBER
         AGO   .AYP180
.AYP160  ANOP
         LA    14,SPFM&NDX              GET ADDRESS OF GENNED MEMBER
         AGO   .AYP180
.AYP170  ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR MEMBER
.AYP180  ANOP
         ST    14,&TEMP+32              STORE THE MEMBER PARMS
         OI    &TEMP+32,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 9).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 9).BYPVARS
&SPFVARS SETA  9
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(EDIT)                  EDIT LITERAL
         AIF   ('&DATASET' EQ '').BYP285
         AIF   ('&DATASET'(1,1) NE '''').BYP280
         DC    A(SPFD&NDX)              ADDRESS OF GENERATED DATASET
         AGO   .BYP290
.BYP280  ANOP
         DC    A(&DATASET)              ADDRESS OF DATASET
         AGO   .BYP290
.BYP285  ANOP
         DC    A(SPFNULLC)              ADDRESS OF DUMMY DATASET
.BYP290  ANOP
         AIF   ('&VOLUME' EQ '').BYP200
         AIF   ('&VOLUME'(1,1) EQ '''').BYP210
         DC    A(&VOLUME)               ADDRESS OF VOLUMESER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VOLUME
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VOLUME
.BYP220  ANOP
         AIF   ('&PASSWORD' EQ '').BYP240
         AIF   ('&PASSWORD'(1,1) NE '''').BYP230
         DC    A(SPFP&NDX)              ADDRESS OF GENERATED PASSWORD
         AGO   .BYP250
.BYP230  ANOP
         DC    A(&PASSWORD)             ADDRESS OF PASSWORD
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PASSWORD
.BYP250  ANOP
         AIF   ('&PANEL' EQ '').BYP270
         AIF   ('&PANEL'(1,1) EQ '''').BYP260
         DC    A(&PANEL)                ADDRESS OF PANEL ID
         AGO   .BYP300
.BYP260  ANOP
         DC    A(SPFI&NDX)              ADDRESS OF GENERATED PANEL
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PANEL ID
.BYP300  ANOP
         AIF   ('&MACRO' EQ '').CYP320
         AIF   ('&MACRO'(1,1) EQ '''').CYP310
         DC    A(&MACRO)                ADDRESS OF MACRO
         AGO   .CYP330
.CYP310  ANOP
         DC    A(SPFX&NDX)              ADDRESS OF GENNED MACRO
         AGO   .CYP330
.CYP320  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MACRO
.CYP330  ANOP
         AIF   ('&PROFILE' EQ '').DYP320
         AIF   ('&PROFILE'(1,1) EQ '''').DYP310
         DC    A(&MACRO)                ADDRESS OF PROFILE
         AGO   .DYP330
.DYP310  ANOP
         DC    A(SPFY&NDX)              ADDRESS OF GENNED PROFILE
         AGO   .DYP330
.DYP320  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PROFILE
.DYP330  ANOP
         AIF   ('&DATAID' EQ '').BYP320
         AIF   ('&DATAID'(1,1) EQ '''').BYP310
         DC    A(&DATAID)               ADDRESS OF DATA ID
         AGO   .BYP330
.BYP310  ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENNED DATAID
         AGO   .BYP330
.BYP320  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR DATA ID
.BYP330  ANOP
         AIF   ('&MEMBER' EQ '').BYP374
         AIF   ('&MEMBER'(1,1) EQ '''').BYP364
         DC    A(&MEMBER.+X'80000000')  ADDRESS OF MEMBER
         AGO   .BYP384
.BYP364  ANOP
         DC    A(SPFM&NDX+X'80000000')  ADDRESS OF GENNED MEMBER
         AGO   .BYP384
.BYP374  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR MEMBER
.BYP384  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'REQUIRED DATASET PARAMETER MISSING'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=EDREC    8512-85095-85224-1153-00223-00223-00001-ISPFDYN
         MACRO
&NAME    EDREC &TYPE,                   TYPE OF RECOVERY               *
               &PASS,                   PASSWORD                       *
               &DATA,                   DATA ID                        *
               &CMD,                    COMMAND NAME                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFEDREC,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TYPE' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFEDREC).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TYPE' EQ '').CNT1
         AIF   ('&TYPE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&PASS' EQ '').CNT2
         AIF   ('&PASS'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&DATA' EQ '').CNT3
         AIF   ('&DATA'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&CMD' EQ '').CNT4
         AIF   ('&CMD'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFEDREC).BYP20
EDREC    DC    CL8'EDREC'               ISPF KEYWORD
&SPFEDREC SETB 1
.BYP20   ANOP
         AIF   ('&TYPE' EQ '').BYP30
         AIF   ('&TYPE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TYPE                 GENERATED RECOVERY TYPE
.BYP30   ANOP
         AIF   ('&PASS' EQ '').BYP40
         AIF   ('&PASS'(1,1) NE '''').BYP40
SPFP&NDX DC    CL8&PASS                 GENERATED PASSWORD
.BYP40   ANOP
         AIF   ('&DATA' EQ '').BYP50
         AIF   ('&DATA'(1,1) NE '''').BYP50
SPFD&NDX DC    CL8&DATA                 GENERATED DATA ID
.BYP50   ANOP
         AIF   ('&CMD' EQ '').BYP60
         AIF   ('&CMD'(1,1) NE '''').BYP60
SPFC&NDX DC    CL8&CMD                  GENERATED COMMAND NAME
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,EDREC                 GET ADDRESS OF EDREC KEYWORD
.*
         AIF   ('&TYPE' EQ '').BYP1000
         AIF   ('&TYPE'(1,1) EQ '''').BYP1010
         LA    15,&TYPE                 GET ADDRESS OF TYPE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TYPE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TYPE
.BYP1050 ANOP
.*
         AIF   ('&PASS' EQ '').BYP1100
         AIF   ('&PASS'(1,1) EQ '''').BYP1110
         LA    0,&PASS                  GET ADDRESS OF PASSWORD
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR PASSWORD
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFP&NDX               GET ADDRESS OF GENERATED PASS
.BYP1150 ANOP
.*
         AIF   ('&DATA' EQ '').BYP1200
         AIF   ('&DATA'(1,1) EQ '''').BYP1210
         LA    1,&DATA                  GET ADDRESS OF DATA NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR DATA
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFD&NDX               GET ADDRESS OF GENERATED DATA
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&CMD' EQ '').BYP1300
         AIF   ('&CMD'(1,1) EQ '''').BYP1310
         LA    14,&CMD                  GET ADDRESS OF CMD NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR CMD
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENERATED CMD
.BYP1350 ANOP
         ST    14,&TEMP+16              STORE PARAMETERS INTO LIST
         OI    &TEMP+16,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 5).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 5).BYPVARS
&SPFVARS SETA  5
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(EDREC)                 EDREC LITERAL
.*
         AIF   ('&TYPE' EQ '').BYP2000
         AIF   ('&TYPE'(1,1) EQ '''').BYP2010
         DC    A(&TYPE)                 ADDRESS OF TYPE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TYPE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TYPE
.BYP2050 ANOP
.*
         AIF   ('&PASS' EQ '').BYP2100
         AIF   ('&PASS'(1,1) EQ '''').BYP2110
         DC    A(&PASS)                 ADDRESS OF PASS NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PASS NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFP&NDX)              ADDRESS OF GENERATED PASS
.BYP2150 ANOP
.*
         AIF   ('&DATA' EQ '').BYP2200
         AIF   ('&DATA'(1,1) EQ '''').BYP2210
         DC    A(&DATA)                 ADDRESS OF DATA NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR DATA
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFD&NDX)              ADDRESS OF GENERATED DATA
.BYP2250 ANOP
.*
         AIF   ('&CMD' EQ '').BYP2800
         AIF   ('&CMD'(1,1) EQ '''').BYP2810
         DC    A(&CMD+X'80000000')      ADDRESS OF CMD NAME
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR CMD
         AGO   .BYP2850
.BYP2810 ANOP
         DC    A(SPFC&NDX+X'80000000')  ADDRESS OF GENERATED CMD
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TYPE OF EDIT RECOVERY IS MISSING'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=ELSE     8512-86097-86097-1148-00030-00030-00000-ISPFDYN
         MACRO
&USRNAME ELSE  &BLEND=                                        13001.
         COPY  STRCGBLS
         LCLA  &ELSEBL#           ELSE_BLOCK_NUMBER           13008.
         LCLC  &IFXLAB            IF_EXIT_LABEL               13011.
         STRCTRAC  ELSE                                       13014.
         AIF   (&STRCNST GT &STRCNSL).FIN                     13016.
         STRCVERF  IF,&BLEND                                  13020.
         AIF   (&STRCERR).FIN                                 13025.
         AIF   ('&STRCOP2(&STRCNST)' NE 'ELSE').M033          13029.
         MNOTE 8,' STRC1302 ELSE HAS ALREADY BEEN GENERATED FOR THIS IF*
               '                                              13031.
         MEXIT
.M033    AIF   ('&STRCOP1(&STRCNST)' EQ  '').M041             13034.
         AIF   ('&STRCOP1(&STRCNST)' EQ '&USRNAME').M041      13034.
         MNOTE 8,' STRC1301 ELSE=&STRCOP1(&STRCNST) SPECIFIED ON IF BLO*
               CK &STRCNAM(&STRCNST)'                         13038.
         MEXIT
.M041    ANOP
&ELSEBL# SETA  &STRCLB#+1                                     13042.
         B     $&ELSEBL#.END
         AIF   (NOT &STRCXIT(&STRCNST)).M051                  13046.
&IFXLAB  SETC  '$&STRCBL#(&STRCNST)XIT'                       13048.
&STRCXIT(&STRCNST)  SETB  0                                   13049.
.M051    STRCPOP
&USRNAME STRCPUSH  TYPEVAL=IF,ENDVAL=1,OP2VAL=ELSE,OP3VAL=&IFXLAB
         AIF   ('&USRNAME' EQ '').M069                        13065.
&USRNAME DS    0H
.M069    ANOP
.FIN     MEND
./ ADD NAME=ESAC     8512-86097-86097-1148-00011-00011-00000-ISPFDYN
         MACRO
         ESAC  &USRNAME                                       35001.
         COPY  STRCGBLS
         STRCTRAC  ESAC                                       35005.
         AIF   (&STRCNST GT &STRCNSL).M023                    35007.
         STRCVERF  CASE,&USRNAME                              35009.
         AIF   (&STRCERR).FIN                                 35019.
.M023    STRCPOP
         AIF   (&STRCNST GT &STRCNSL).FIN                     35028.
         B     $&STRCBL#(&STRCNST)END
.FIN     MEND
./ ADD NAME=ESACOD   8512-86097-86097-1148-00160-00160-00000-ISPFDYN
         MACRO
         ESACOD  &USRNAME                                     37001.
         COPY  STRCGBLS
         LCLA  &CASECTR           CASE_COUNTER                37009.
         LCLA  &T                 T                           37010.
         LCLA  &COMPLB#           COMP_LABEL_NO               37011.
         LCLA  &MAXSD             MAX_SD_VALUE                37012.
         LCLA  &BASE              BASE                        37013.
         LCLB  &MISCFND           MISC_FOUND                  37015.
         LCLB  &MULTOF4           MULTIPLESOF4                37016.
         LCLB  &XRANGA            INDEX_RANGE_ASSURED         37018.
         LCLB  &ANYCOMP           ANY_COMP_CASES              37021.
         LCLB  &ANYSELF           ANY_SELFDEF_CASES           37023.
         LCLB  &RANGREQ           RANGE_TEST_REQD             37025.
         LCLC  &CFORMAT           CASE_FORMAT                 37028.
         LCLC  &XADDR             INDEX_ADDR                  37030.
         LCLC  &NOCASE            NOCASE                      37031.
         LCLC  &LABEL             LABEL                       37033.
         LCLA  &I                 I                    37185. 37238.
         LCLA  &INCR              INCR                        37238.
         STRCTRAC  ESACOD                                     37038.
         AIF   (&STRCNST GT &STRCNSL).M083                    37040.
         STRCVERF  DOCASE,&USRNAME                            37042.
         AIF   (&STRCERR).FIN                                 37052.
.*       CALL  ESACOD_INFO_UNPACK                             37056.
&CASECTR SETA  &STRCOP1(&STRCNST)                             37096.
&XADDR   SETC  '&STRCOP2(&STRCNST)'                           37097.
&CFORMAT SETC  '&STRCOP3(&STRCNST)'                           37098.
&MISCFND SETB  ('&STRCINF(&STRCNST)'(2,1) EQ '1')             37099.
&MULTOF4 SETB  ('&STRCINF(&STRCNST)'(3,1) EQ '1')             37100.
&XRANGA  SETB  ('&STRCINF(&STRCNST)'(5,1) EQ '1')             37101.
&STRCPFX SETC  '$&STRCBL#(&STRCNST)'                          37102.
.*       CORP  ESACOD_INFO_UNPACK                             37103.
         AIF   ('&CFORMAT' NE 'GENERAL').M064                 37060.
.*       CALL  ESACOD_GENERAL_CASE_CHOICE                     37062.
.*       CALL  ESACOD_GENERAL_CASE_INFO                       37109.
&I       SETA  &STRCGNL                                       37187.
&STRCGNL SETA  &I-1                                           37188.
         AIF   (&I LE &STRCGNX).M192                          37189.
&STRCERR SETB  1                                              37191.
         AGO   .M199                                          37192.
.M192    ANOP
&MAXSD   SETA  &STRCMCV(&I)                                   37193.
&ANYSELF SETB  (&MAXSD GE 0)                                  37194.
&COMPLB# SETA  &STRCCL#(&I)                                   37195.
&ANYCOMP SETB  (&COMPLB# GT 1)                                37196.
&BASE    SETA  ((&I-1)*256)+1                                 37197.
&STRCERR SETB  0                                              37198.
.M199    ANOP
.*       CORP  ESACOD_GENERAL_CASE_INFO                       37200.
         AIF   (&STRCERR).M131                                37112.
         AIF   (NOT &ANYSELF).M121                            37114.
.*       CALL  ESACOD_SELFDEF_GEN                             37116.
&LABEL   SETC  '&STRCPFX.BEG'                                 37156.
         AIF   (NOT &ANYCOMP).M163                            37160.
&NOCASE  SETC  '&STRCPFX.C1'                                  37161.
         AGO   .M170                                          37162.
.M163    AIF   (NOT &MISCFND).M166                            37163.
&NOCASE  SETC  '&STRCPFX.MSC'                                 37164.
         AGO   .M170                                          37165.
.M166    ANOP
&NOCASE  SETC  '&STRCPFX.END'                                 37167.
.M170    ANOP
&RANGREQ SETB  ((NOT &XRANGA) OR &ANYCOMP)                    37170.
         AIF   (NOT &RANGREQ).M176                            37171.
.*       CALL  ESACOD_OUT_OF_RANGE_CHECK                      37173.
         AIF   ('&XADDR' NE '').M224                          37207.
&LABEL   LTR   1,1
         AIF   (&STRCOCC(&BASE)).M211                         37210.
         BNP   &NOCASE
         AGO   .M215                                          37215.
.M211    BM    &NOCASE
.M215    C     1,&STRCPFX.SIZ
         BH    &NOCASE
         AIF   (NOT &MULTOF4).M232                            37218.
         LA    0,B'00000011'
         NR    0,1
         BNZ   &NOCASE
         AGO   .M232                                          37224.
.M224    ANOP
&LABEL   CLI   &XADDR,&MAXSD
         BH    &NOCASE
         AIF   (NOT &MULTOF4).M232                            37227.
         TM    &XADDR,B'00000011'
         BNZ   &NOCASE
.M232    ANOP
&LABEL   SETC  ''                                             37233.
.*       CORP  ESACOD_OUT_OF_RANGE_CHECK                      37234.
.M176    ANOP
.*       CALL  ESACOD_BRVCT_GEN                               37177.
         AIF   ('&XADDR' EQ '').M245                          37240.
&LABEL   SR    1,1
&LABEL   SETC  ''                                             37243.
         IC    1,&XADDR
.M245    AIF   (NOT &MULTOF4).M249                            37246.
&INCR    SETA  4                                              37248.
         AGO   .M253                                          37249.
.M249    ANOP
&INCR    SETA  1                                              37250.
&LABEL   SLA   1,2
&LABEL   SETC  ''                                             37252.
.M253    AIF   (&STRCOCC(&BASE) OR '&XADDR' NE '').M256       37254.
&LABEL   B     *(1)
&I       SETA  &INCR                                          37260.
         AGO   .M262                                          37262.
.M256    ANOP
&LABEL   B     *+4(1)
&I       SETA  0                                              37257.
.M262    ANOP
&LABEL   SETC  ''                                             37263.
.M264    AIF   (&I GT &MAXSD).M273                            37264.
         AIF   (&STRCOCC(&BASE+&I)).M267                      37266.
         B     &NOCASE
         AGO   .M271                                          37271.
.M267    B     &STRCPFX.G&I
.M271    ANOP
&I       SETA  &I+&INCR                                       37272.
         AGO   .M264                                          37273.
.M273    AIF   (NOT &RANGREQ OR '&XADDR' NE '').M280          37276.
&STRCPFX.SIZ  DC  F'&MAXSD'
.M280    AIF   (NOT &ANYCOMP).M290                            37281.
         AIF   (&MISCFND).M284                                37283.
&STRCPFX.C&COMPLB#  DS  0H
         AGO   .M290                                          37290.
.M284    ANOP
&STRCPFX.C&COMPLB#  EQU  &STRCPFX.MSC
.M290    ANOP
.*       CORP  ESACOD_BRVCT_GEN                               37291.
.*       CORP  ESACOD_SELFDEF_GEN                             37180.
         AGO   .M131                                          37121.
.M121    AIF   (NOT &ANYCOMP).M128                            37123.
.*       CALL  ESACOD_GENERAL_SYMB_ONLY                       37125.
&STRCPFX.BEG  EQU  &STRCPFX.C1
         AIF   (&MISCFND).M143                                37142.
&STRCPFX.C&COMPLB#  DS  0H
         AGO   .M148                                          37148.
.M143    ANOP
&STRCPFX.C&COMPLB#  EQU  &STRCPFX.MSC
.M148    ANOP
.*       CORP  ESACOD_GENERAL_SYMB_ONLY                       37149.
         AGO   .M131                                          37128.
.M128    MNOTE 8,' STRC3701 DOCASE CONTAINS NO VALID CASES'   37130.
.M131    ANOP
.*       CORP  ESACOD_GENERAL_CASE_CHOICE                     37133.
         AGO   .M083                                          37064.
.M064    ANOP
  AIF  ('&CFORMAT' NE 'SPARSE' AND '&CFORMAT' NE 'CHARCOMP').M071
&T       SETA  &STRCCL#(&STRCGNL)                             37067.
&STRCGNL SETA  &STRCGNL-1                                     37069.
         AGO   .M074                                          37071.
.M071    ANOP
&T       SETA  &CASECTR+1                                     37072.
.M074    AIF   (&MISCFND).M076                                37075.
&STRCPFX.C&T  DS  0H
         AGO   .M081                                          37081.
.M076    ANOP
&STRCPFX.C&T  EQU  &STRCPFX.MSC
.M081    ANOP
.M083    STRCPOP
.FIN     MEND
./ ADD NAME=EXIT     8512-86097-86097-1148-00009-00009-00000-ISPFDYN
         MACRO
&USRNAME EXIT  &XTARGET                                       55001.
         COPY  STRCGBLS
         STRCTRAC  EXIT                                       55004.
         AIF   (&STRCNST GT &STRCNSL).M018                    55006.
         STRCXFND  &XTARGET                                   55010.
         AIF   (&STRCERR).M018                                55014.
&USRNAME B     &STRCUBL
.M018    MEND
./ ADD NAME=FI       8512-86097-86097-1148-00013-00013-00000-ISPFDYN
         MACRO
         FI    &USRNAME                                       15001.
         COPY  STRCGBLS
         STRCTRAC  FI                                         15005.
         AIF   (&STRCNST LE &STRCNSL).M012                    15007.
         STRCPOP
         MEXIT
.M012    STRCVERF  IF,&USRNAME                                15012.
         AIF   (&STRCERR).FIN                                 15022.
         AIF   ('&STRCOP1(&STRCNST)' EQ '').M031              15026.
         MNOTE 8,' STRC1501 ELSE BLOCK "&STRCOP1(&STRCNST)" NOT FOUND'
.M031    STRCPOP  &STRCOP3(&STRCNST)                          15031.
.FIN     MEND
./ ADD NAME=FINAL    8512-86097-86097-1148-00021-00021-00000-ISPFDYN
         MACRO
         FINAL
         COPY  STRCGBLS
         STRCTRAC  FINAL
.M008    AIF   (&STRCNST LE 0).M021                           53008.
         AIF   (&STRCNST LE &STRCNSL).M013                    53010.
         MNOTE 8,' STRC5301 BLEND OF OUTSTANDING BLOCK ASSUMED'
         AGO   .M016                                          53013.
.M013    MNOTE 8,' STRC5301 BLEND OF &STRCNAM(&STRCNST) ASSUMED'
.M016    BLEND
         AGO   .M008                                          53021.
.M021    AIF   (NOT &STRCSFP).M033                            53023.
         AIF   ('&STRCPSP' NE '$FIRSTSV').M029                53025.
$FIRSTSV DC    0F'0',X'FFFFFFFF',A(0,0) DUMMY SAVEAREA
$LASTSAV EQU   $FIRSTSV
         AGO   .M033                                          53029.
.M029    ANOP
$LASTSAV EQU   &STRCPSA
&STRCPSP EQU   0
.M033    ANOP
         MEND
./ ADD NAME=FTCLOSE  8512-85095-85095-1207-00200-00200-00000-ISPFDYN
         MACRO
&LABEL   FTCLOSE &P1,                                                  *
               &P2,                                                    *
               &P3,                                                    *
               &NAME=,                  MEMBER                         *
               &LIBRARY=,               LIBRARY                        *
               &NOREPL=,                ISPF KEYWORD                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFFTCLOSE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         GBLC  &SPFLVL
         LCLC  &NDX,&TEMP
         AIF   ('&SPFLVL' NE '1').NL1
&LABEL   @FTCLOSE &P1,&P2,&P3,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P1' NE '').LVLERR
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
         AIF   ('&NOREPL' EQ '').K1
         AIF   ('&NOREPL'(1,1) NE '''' OR '&NOREPL' EQ '''NOREPL''').K1
         MNOTE 4,'WARNING - NOREPL KEYWORD EXPECTED IN QUOTES'
.K1      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFFTCLOSE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&NAME' EQ '').CNT1
         AIF   ('&NAME'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&LIBRARY' EQ '').CNT2
         AIF   ('&LIBRARY'(1,1) EQ '''').GENLIT
.CNT2    AIF   ('&NOREPL' EQ '').CNT3
         AIF   ('&NOREPL'(1,1) EQ '''').GENLIT
.CNT3    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFFTCLOSE).BYP20
FTCLOSE  DC    CL8'FTCLOSE'             ISPF KEYWORD
&SPFFTCLOSE SETB 1
.BYP20   ANOP
         AIF   ('&NAME' EQ '').BYP40
         AIF   ('&NAME'(1,1) NE '''').BYP40
SPFM&NDX DC    CL8&NAME                 GENERATED MEMBER
.BYP40   ANOP
         AIF   ('&LIBRARY' EQ '').BYP50
         AIF   ('&LIBRARY'(1,1) NE '''').BYP50
SPFL&NDX DC    CL8&LIBRARY              GENERATED LIBRARY
.BYP50   ANOP
         AIF   ('&NOREPL' EQ '').BYP60
         AIF   ('&NOREPL'(1,1) NE '''').BYP60
SPFX&NDX DC    CL8&NOREPL               ISPF KEYWORD
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,FTCLOSE               GET ADDRESS OF FTCLOSE KEYWORD
         AIF   ('&NAME' EQ '').BYP100
         AIF   ('&NAME'(1,1) EQ '''').BYP110
         LA    15,&NAME                 GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFM&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         AIF   ('&LIBRARY' EQ '').BYP140
         AIF   ('&LIBRARY'(1,1) NE '''').BYP130
         LA    0,SPFL&NDX               GET ADDRESS OF GENERATED LIB
         AGO   .BYP150
.BYP130  ANOP
         LA    0,&LIBRARY               GET ADDRESS OF LIBRARY
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR LIBRARY
.BYP150  ANOP
         AIF   ('&NOREPL' EQ '').BYP170
         AIF   ('&NOREPL'(1,1) EQ '''').BYP175
         LA    1,&NOREPL                GET ADDRESS OF KEYWORD
         AGO   .BYP180
.BYP170  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR KEYWORD
         AGO   .BYP180
.BYP175  ANOP
         LA    1,SPFX&NDX               GET GENNED NOREPL
.BYP180  ANOP
         STM   14,1,&TEMP               STORE PARAMETERS
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(FTCLOSE)               BROWSE LITERAL
         AIF   ('&NAME' EQ '').BYP200
         AIF   ('&NAME'(1,1) EQ '''').BYP210
         DC    A(&NAME)                 ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFM&NDX)              ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MEMBER
.BYP220  ANOP
         AIF   ('&LIBRARY' EQ '').BYP240
         AIF   ('&LIBRARY'(1,1) NE '''').BYP230
         DC    A(SPFL&NDX)              ADDRESS OF GENERATED LIBRARY
         AGO   .BYP250
.BYP230  ANOP
         DC    A(&LIBRARY)              ADDRESS OF LIBRARY
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR LIBRARY
.BYP250  ANOP
         AIF   ('&NOREPL' EQ '').BYP270
         AIF   ('&NOREPL'(1,1) EQ '''').BYP275
         DC    A(&NOREPL+X'80000000')   ADDRESS OF KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR KEYWORD
         AGO   .BYP300
.BYP275  ANOP
         DC    A(SPFX&NDX+X'80000000')  GENNED NOREPL KEYWORD
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=FTERASE  8512-85095-85095-1207-00169-00169-00000-ISPFDYN
         MACRO
&NAME    FTERASE &MEM,                  MEMBER NAME (POSITIONAL)       *
               &P2,                                                    *
               &LIBRARY=,               LIBRARY NAME                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFFTERASE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @FTERASE &MEM,&P2,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&MEM' EQ '').ERR1
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFFTERASE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&MEM' EQ '').CNT1
         AIF   ('&MEM'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&LIBRARY' EQ '').CNT2
         AIF   ('&LIBRARY'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFFTERASE).BYP20
FTERASE  DC    CL8'FTERASE'             ISPF KEYWORD
&SPFFTERASE SETB 1
.BYP20   ANOP
         AIF   ('&MEM' EQ '').BYP40
         AIF   ('&MEM'(1,1) NE '''').BYP40
SPFM&NDX DC    CL8&MEM                  GENERATED NAME
.BYP40   ANOP
         AIF   ('&LIBRARY' EQ '').BYP50
         AIF   ('&LIBRARY'(1,1) NE '''').BYP50
SPFL&NDX DC    CL8&LIBRARY              GENERATED LIBRARY
.BYP50   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,FTERASE               GET ADDRESS OF FTERASE KEYWORD
         AIF   ('&MEM' EQ '').BYP100
         AIF   ('&MEM'(1,1) EQ '''').BYP110
         LA    15,&MEM                  GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFM&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         AIF   ('&LIBRARY' EQ '').BYP140
         AIF   ('&LIBRARY'(1,1) NE '''').BYP130
         LA    0,SPFL&NDX               GET ADDRESS OF GENERATED LIB
         AGO   .BYP150
.BYP130  ANOP
         LA    0,&LIBRARY               GET ADDRESS OF LIBRARY
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR LIBRARY
.BYP150  ANOP
         STM   14,0,&TEMP               STORE PARAMETERS
         OI    &TEMP+8,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(FTERASE)               BROWSE LITERAL
         AIF   ('&MEM' EQ '').BYP200
         AIF   ('&MEM'(1,1) EQ '''').BYP210
         DC    A(&MEM)                  ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFM&NDX)              ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MEMBER
.BYP220  ANOP
         AIF   ('&LIBRARY' EQ '').BYP240
         AIF   ('&LIBRARY'(1,1) NE '''').BYP230
         DC    A(SPFL&NDX+X'80000000')  ADDRESS OF GENERATED LIBRARY
         AGO   .BYP250
.BYP230  ANOP
         DC    A(&LIBRARY+X'80000000')  ADDRESS OF LIBRARY
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR LIBRARY
.BYP250  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'MEMBER NAME REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=FTINCL   8512-85095-85095-1207-00170-00170-00000-ISPFDYN
         MACRO
&NAME    FTINCL &SKEL,                  (POSITIONAL MEMBER NAME)       *
               &P2,                                                    *
               &NOFT=,                  NOFT KEYWORD                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFFTINCL,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @FTINCL &SKEL,&P2,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&SKEL' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
         AIF   ('&NOFT' EQ '').K1
         AIF   ('&NOFT'(1,1) NE '''' OR '&NOFT' EQ '''NOFT''').K1
         MNOTE 4,'WARNING - NOFT KEYWORD EXPECTED IN QUOTES'
.K1      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFFTINCL).GENLIT
         AIF   ('&SKEL' EQ '').CNT1
         AIF   ('&SKEL'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&NOFT' EQ '').CNT2
         AIF   ('&NOFT'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFFTINCL).BYP20
FTINCL   DC    CL8'FTINCL'              ISPF KEYWORD
&SPFFTINCL SETB 1
.BYP20   ANOP
         AIF   ('&SKEL' EQ '').BYP40
         AIF   ('&SKEL'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&SKEL                 GENERATED MEMBER NAME
.BYP40   ANOP
         AIF   ('&NOFT' EQ '').BYP60
         AIF   ('&NOFT'(1,1) NE '''').BYP60
SPFX&NDX DC    CL8&NOFT                 NOFT KEYWORD
.BYP60   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,FTINCL                GET ADDRESS OF FTINCL KEYWORD
         AIF   ('&SKEL' EQ '').BYP100
         AIF   ('&SKEL'(1,1) EQ '''').BYP110
         LA    15,&SKEL                 GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFS&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         AIF   ('&NOFT' EQ '').BYP170
         AIF   ('&NOFT'(1,1) EQ '''').BYP175
         LA    0,&NOFT                  GET ADDRESS OF NOFT
         AGO   .BYP180
.BYP170  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR NOFT
         AGO   .BYP180
.BYP175  ANOP
         LA    0,SPFX&NDX               GET GENNED NOFT KWYWORD
.BYP180  ANOP
         STM   14,0,&TEMP               STORE PARAMETERS
         OI    &TEMP+8,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(FTINCL)                BROWSE LITERAL
         AIF   ('&SKEL' EQ '').BYP200
         AIF   ('&SKEL'(1,1) EQ '''').BYP210
         DC    A(&SKEL)                 ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MEMBER
.BYP220  ANOP
         AIF   ('&NOFT' EQ '').BYP270
         AIF   ('&NOFT'(1,1) EQ '''').BYP275
         DC    A(&NOFT+X'80000000')     ADDRESS OF NOFT KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR NOFT
         AGO   .BYP300
.BYP275  ANOP
         DC    A(SPFX&NDX+X'80000000')  GENNED NOFT KEYWORD
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'SKELETON NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=FTOPEN   8512-85095-85095-1207-00137-00137-00000-ISPFDYN
         MACRO
&NAME    FTOPEN &P1,&TEMP=,             TEMP KEYWORD                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFFTOPEN,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEM
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @FTOPEN &P1,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P1' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEM     SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEM     SETC  '&MF(2)'
.BYP17   ANOP
         AIF   ('&TEMP' EQ '').K1
         AIF   ('&TEMP'(1,1) NE '''' OR '&TEMP' EQ '''TEMP''').K1
         MNOTE 4,'WARNING - TEMP KEYWORD EXPECTED IN QUOTES'
.K1      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFFTOPEN).GENLIT
         AIF   ('&TEMP' EQ '').CNT1
         AIF   ('&TEMP'(1,1) EQ '''').GENLIT
.CNT1    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFFTOPEN).BYP20
FTOPEN   DC    CL8'FTOPEN'              ISPF KEYWORD
&SPFFTOPEN SETB 1
.BYP20   ANOP
         AIF   ('&TEMP' EQ '').BYP60
         AIF   ('&TEMP'(1,1) NE '''').BYP60
SPFX&NDX DC    CL8&TEMP                 ISPF TEMP KEYWORD
.BYP60   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,FTOPEN                GET ADDRESS OF FTOPEN KEYWORD
         AIF   ('&TEMP' EQ '').BYP170
         AIF   ('&TEMP'(1,1) EQ '''').BYP175
         LA    15,&TEMP                 GET ADDRESS OF TEMP
         AGO   .BYP180
.BYP170  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TEMP
         AGO   .BYP180
.BYP175  ANOP
         LA    15,SPFX&NDX              GET GENNED TEMP KEYWORD
.BYP180  ANOP
         STM   14,15,&TEM               STORE PARAMETERS
         OI    &TEM+4,X'80'             MARK LAST PARM
         LA    1,&TEM                   GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(FTOPEN)                BROWSE LITERAL
         AIF   ('&TEMP' EQ '').BYP270
         AIF   ('&TEMP'(1,1) EQ '''').BYP275
         DC    A(&TEMP+X'80000000')     ADDRESS OF TEMP KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR TEMP
         AGO   .BYP300
.BYP275  ANOP
         DC    A(SPFX&NDX+X'80000000')  GENNED TEMP KEYWORD
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'INVALID VALUE FOR TEMP PARM - FOUND ''&TEMP'''
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=GETMSG   8512-85095-85095-1207-00274-00274-00000-ISPFDYN
         MACRO
&NAME    GETMSG &P1,                                                   *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &MSG=,                   MESSAGE NAME                   *
               &SHORTMSG=,              VAR FOR SHORT MESSAGE          *
               &LONGMSG=,               VAR FOR LONG MESSAGE           *
               &ALARM=,                 VAR FOR ALARM VALUE            *
               &HELP=,                  VAR FOR HELP PANEL             *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFGETMSG,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @GETMSG &P1,&P2,&P3,&P4,&P5,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P1' NE '').LVLERR
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AIF   ('&P5' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&MSG' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFGETMSG).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&MSG' EQ '').CNT1
         AIF   ('&MSG'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&SHORTMSG' EQ '').CNT2
         AIF   ('&SHORTMSG'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&LONGMSG' EQ '').CNT3
         AIF   ('&LONGMSG'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&ALARM' EQ '').CNT4
         AIF   ('&ALARM'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&HELP' EQ '').CNT5
         AIF   ('&HELP'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFGETMSG).BYP20
GETMSG   DC    CL8'GETMSG'              ISPF KEYWORD
&SPFGETMSG SETB 1
.BYP20   ANOP
         AIF   ('&MSG' EQ '').BYP30
         AIF   ('&MSG'(1,1) NE '''').BYP30
SPFM&NDX DC    CL8&MSG                  GENERATED MESSAGE NAME
.BYP30   ANOP
         AIF   ('&SHORTMSG' EQ '').BYP40
         AIF   ('&SHORTMSG'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&SHORTMSG             GENERATED SHORT MESSAGE
.BYP40   ANOP
         AIF   ('&LONGMSG' EQ '').BYP50
         AIF   ('&LONGMSG'(1,1) NE '''').BYP50
SPFL&NDX DC    CL8&LONGMSG              GENERATED LONG MESSAGE
.BYP50   ANOP
         AIF   ('&ALARM' EQ '').BYP60
         AIF   ('&ALARM'(1,1) NE '''').BYP60
SPFA&NDX DC    CL8&ALARM                GENERATED ALARM VAR FIELD
.BYP60   ANOP
         AIF   ('&HELP' EQ '').BYP70
         AIF   ('&HELP'(1,1) NE '''').BYP70
SPFH&NDX DC    CL8&HELP                 GENERATED HELP VAR FIELD
.BYP70   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,GETMSG                GET ADDRESS OF GETMSG KEYWORD
.*
         AIF   ('&MSG' EQ '').BYP1000
         AIF   ('&MSG'(1,1) EQ '''').BYP1010
         LA    15,&MSG                  GET ADDRESS OF MESSAGE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MSG
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFM&NDX              GET ADDRESS OF GENERATED MSG
.BYP1050 ANOP
.*
         AIF   ('&SHORTMSG' EQ '').BYP1100
         AIF   ('&SHORTMSG'(1,1) EQ '''').BYP1110
         LA    0,&SHORTMSG              GET ADDRESS OF SHORT MSG
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR SHORT MSG
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SHORT
.BYP1150 ANOP
.*
         AIF   ('&LONGMSG' EQ '').BYP1200
         AIF   ('&LONGMSG'(1,1) EQ '''').BYP1210
         LA    1,&LONGMSG               GET ADDRESS OF LONG MSG NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR LONG MSG
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFL&NDX               GET ADDRESS OF GENERATED LONG
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&ALARM' EQ '').BYP1300
         AIF   ('&ALARM'(1,1) EQ '''').BYP1310
         LA    14,&ALARM                GET ADDRESS OF ALARM NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR ALARM
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFA&NDX              GET ADDRESS OF GENERATED ALARM
.BYP1350 ANOP
.*
         AIF   ('&HELP' EQ '').BYP1400
         AIF   ('&HELP'(1,1) EQ '''').BYP1410
         LA    15,&HELP                 GET ADDRESS OF HELP NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR HELP
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFH&NDX              GET ADDRESS OF GENERATED HELP
.BYP1450 ANOP
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(GETMSG)                GETMSG LITERAL
.*
         AIF   ('&MSG' EQ '').BYP2000
         AIF   ('&MSG'(1,1) EQ '''').BYP2010
         DC    A(&MSG)                  ADDRESS OF MESSAGE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MSG NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFM&NDX)              ADDRESS OF GENERATED MSG
.BYP2050 ANOP
.*
         AIF   ('&SHORTMSG' EQ '').BYP2100
         AIF   ('&SHORTMSG'(1,1) EQ '''').BYP2110
         DC    A(&SHORTMSG)             ADDRESS OF SHORT MSG
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR SHORT MSG
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED SHORT MSG
.BYP2150 ANOP
.*
         AIF   ('&LONGMSG' EQ '').BYP2200
         AIF   ('&LONGMSG'(1,1) EQ '''').BYP2210
         DC    A(&LONGMSG)              ADDRESS OF LONG MESSAGE
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR LONG MESSAGE
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFL&NDX)              ADDRESS OF GENERATED LONG MES
.BYP2250 ANOP
.*
         AIF   ('&ALARM' EQ '').BYP2300
         AIF   ('&ALARM'(1,1) EQ '''').BYP2310
         DC    A(&ALARM)                ADDRESS OF ALARM NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ALARM
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENERATED ALARM
.BYP2350 ANOP
.*
         AIF   ('&HELP' EQ '').BYP2800
         AIF   ('&HELP'(1,1) EQ '''').BYP2810
         DC    A(&HELP+X'80000000')     ADDRESS OF HELP NAME
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR HELP
         AGO   .BYP2850
.BYP2810 ANOP
         DC    A(SPFH&NDX+X'80000000')  ADDRESS OF GENERATED HELP
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'THE MESSAGE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=GRTERM   8512-85095-85095-1207-00094-00094-00000-ISPFDYN
         MACRO
&NAME    GRTERM &LOAD=ISPLINK,          ISPF ADDRESS                   *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFGRTERM,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFGRTERM).GENLIT
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFGRTERM).BYP20
GRTERM   DC    CL8'GRTERM'              ISPF KEYWORD
&SPFGRTERM SETB 1
.BYP20   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,GRTERM                GET ADDRESS OF GRTERM KEYWORD
         ST    14,&TEMP                 STORE PARAMETERS INTO LIST
         OI    &TEMP,X'80'              MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 0).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 0).BYPVARS
&SPFVARS SETA  0
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(GRTERM+X'80000000')    GRTERM LITERAL
.*
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=IF       8512-86097-86097-1148-00125-00125-00000-ISPFDYN
         MACRO
&USRNAME IF    &REL=,&MASK=,&EXIT=,&ELSE=                     11001.
         COPY  STRCGBLS
         LCLB  &VALIDX            VALID_EXIT                  11012.
         LCLC  &XLABEL            EXIT_LABEL                  11016.
         LCLC  &LABEL             LABEL                       11018.
         LCLC  &HOLD              HOLD                        11121.
         LCLC  &TARGET            TARGET                      11209.
         STRCTRAC   IF                                        11020.
&USRNAME STRCPUSH   TYPEVAL=IF,OP1VAL=&ELSE,ENDVAL=1          11022.
         AIF   (&STRCERR).FIN                                 11030.
         AIF   ('&REL&MASK' EQ '').M037                       11034.
         MNOTE 8,' STRC1102 REL= OR MASK= NOT IN PARENTHESES--IGNORED'
.M037    ANOP
&LABEL   SETC  '&USRNAME'                                     11038.
&VALIDX  SETB  ('&EXIT' NE '')                                11040.
         AIF   ('&SYSLIST(1,1)' NE 'ASYNCH').M045             11042.
.*       CALL  IF_ASYNCH_BRANCH                               11044.
         AIF   (NOT &VALIDX).M084                             11080.
         MNOTE 8,' STRC1101 EXIT= IGNORED WITH "ASYNCH"'      11082.
&VALIDX  SETB  0                                              11083.
.M084    ANOP
&LABEL   B     &STRCPFX.END
&LABEL   SETC  ''                                             11087.
.*       CORP  IF_ASYNCH_BRANCH                               11088.
         AGO   .M060                                          11045.
.M045    ANOP
.*       CALL  IF_SET_CONDITIONAL_TEST_SPECS                  11046.
&STRCUBL SETC  '&STRCPFX.END'                                 11106.
&STRCUFL SETC  '&STRCPFX.BEG'                                 11109.
&STRCUFC SETB  1                                              11111.
&STRCFLU SETB  0                                              11113.
.*       CORP  IF_SET_CONDITIONAL_TEST_SPECS                  11114.
         AIF   (NOT &VALIDX).M056                             11050.
.*       CALL  IF_EXIT_SPECS                                  11052.
         AIF   ('&ELSE' EQ '').M127                           11123.
         MNOTE 8,' STRC1103 EXIT= IGNORED WITH ELSE='         11125.
&VALIDX  SETB  0                                              11126.
         AGO   .M160                                          11127.
.M127    ANOP
&HOLD    SETC  '&STRCUBL'                                     11128.
         STRCXFND  &EXIT                                      11130.
         AIF   (NOT &STRCDBC).M145                            11136.
&XLABEL  SETC  '&STRCUBL'                                     11138.
&STRCUBL SETC  '&HOLD'                                        11139.
         AGO   .M159                                          11145.
.M145    ANOP
&STRCUFL SETC  '&STRCPFX'                                     11146.
&STRCUFC SETB  0                                              11147.
&STRCEND(&STRCNST)  SETB  0                                   11148.
         AIF   (NOT &STRCERR).M159                            11149.
&STRCUBL SETC  '&STRCPFX'                                     11154.
&STRCFLU SETB  1                                              11155.
&STRCERR SETB  0                                              11157.
.M159    ANOP
.M160    ANOP
.*       CORP  IF_EXIT_SPECS                                  11161.
.M056    ANOP
.*       CALL  IF_CONDITIONAL_GENERATOR                       11057.
&STRCFRX SETA  1                                              11173.
&STRCLSX SETA  N'&SYSLIST                                     11174.
&STRCUID SETC  'I'                                            11177.
         AIF   (NOT &STRCDDM).M180                            DEBUGMACS
         MNOTE *,' STRC1199 CALL CEP  &SYSLIST(1),&SYSLIST(2),&SYSLIST(*
               3),&SYSLIST(4),&SYSLIST(5),...'                DEBUGMACS
.M180    ANOP
&LABEL   STRCCEP  &SYSLIST(1),&SYSLIST(2),&SYSLIST(3),&SYSLIST(4),     *
               &SYSLIST(5),&SYSLIST(6),&SYSLIST(7),&SYSLIST(8),        *
               &SYSLIST(9),&SYSLIST(10),&SYSLIST(11),&SYSLIST(12),     *
               &SYSLIST(13),&SYSLIST(14),&SYSLIST(15),&SYSLIST(16),    *
               &SYSLIST(17),&SYSLIST(18),&SYSLIST(19),&SYSLIST(20),    *
               &SYSLIST(21),&SYSLIST(22),&SYSLIST(23),&SYSLIST(24),    *
               &SYSLIST(25),&SYSLIST(26),&SYSLIST(27),&SYSLIST(28),    *
               &SYSLIST(29),&SYSLIST(30),&SYSLIST(31),&SYSLIST(32),    *
               &SYSLIST(33),&SYSLIST(34),&SYSLIST(35),&SYSLIST(36),    *
               &SYSLIST(37),&SYSLIST(38),&SYSLIST(39),&SYSLIST(40),    *
               &SYSLIST(41),&SYSLIST(42),&SYSLIST(43),&SYSLIST(44),    *
               &SYSLIST(45),&SYSLIST(46),&SYSLIST(47),&SYSLIST(48),    *
               &SYSLIST(49),&SYSLIST(50)                      11180.
         AIF   (&STRCFLU).M200                                11198.
&LABEL   SETC  ''                                             11202.
         AGO   .M203                                          11203.
.M200    ANOP
&LABEL   SETC  '&STRCUFL'                                     11200.
.M203    ANOP
.*       CORP  IF_CONDITIONAL_GENERATOR                       11204.
.M060    ANOP
.*       CALL  IF_BLOCK_COUNT                                 11061.
         AIF   ('&SYSLIST(1,1)' NE 'ASYNCH').M219             11211.
         AIF   (NOT &STRCDBN).M218                            11213.
         DC    C'&STRCNAM(&STRCNST)',0H'0'
.M218    AGO   .M258                                          11218.
.M219    AIF   (NOT (&STRCDBC OR &STRCDBN)).M257              11220.
         AIF   (NOT (&STRCDBC)).M229                          11222.
&LABEL   LH    1,&STRCPFX.IFC
&LABEL   SETC  ''                                             11226.
         LA    1,1(1)
         STH   1,&STRCPFX.IFC
.M229    AIF   ('&XLABEL' NE '').M235                         11231.
&TARGET  SETC  '&STRCPFX.GO'                                  11233.
         AGO   .M239                                          11235.
.M235    ANOP
&TARGET  SETC  '&XLABEL'                                      11236.
.M239    ANOP
&LABEL   B     &TARGET
         AIF   ('&XLABEL' NE '').M245                         11241.
&LABEL   SETC  '&TARGET'                                      11243.
         AGO   .M247                                          11245.
.M245    ANOP
&LABEL   SETC  ''                                             11246.
.M247    ANOP
         AIF   (NOT &STRCDBN).M252                            11248.
         DC    C'&STRCNAM(&STRCNST)',0H'0'
.M252    AIF   (NOT &STRCDBC).M256                            11253.
&STRCPFX.IFC  DC  H'0' IF COUNT
.M256    ANOP
.M257    ANOP
.M258    ANOP
.*       CORP  IF_BLOCK_COUNT                                 11259.
         AIF   ('&LABEL' EQ '').M067                          11064.
&LABEL   DS    0H
.M067    AIF   (NOT &VALIDX).M073                             11068.
         FI
.M073    ANOP
.FIN     MEND
./ ADD NAME=IFEND    8512-86097-86097-1148-00004-00004-00000-ISPFDYN
         MACRO
         IFEND  &USRNAME
         FI     &USRNAME
         MEND
./ ADD NAME=ISPEXEC  8512-85095-85095-1207-00143-00143-00000-ISPFDYN
         MACRO
&NAME    ISPEXEC &BUFLEN,               MEMBER NAME                    *
               &BUF,                    LIBRARY NAME                   *
               &LOAD=ISPEXEC,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         LCLA  &LEN
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&BUF' EQ '').ERR1
         AIF   ('&BUF'(1,1) EQ '''' AND '&BUFLEN' NE '').WARN
.CONT    ANOP
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (T'&BUFLEN EQ 'N').GENLIT
.CNT1    AIF   ('&BUF' EQ '').CNT2
         AIF   ('&BUF'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   ('&BUFLEN' EQ '').BYP40
         AIF   (T'&BUFLEN NE 'N').BYP40
         AIF   ('&BUF'(1,1) EQ '''').BYP40
SPFL&NDX DC    F'&BUFL'                 BUFFER LENGTH GENERATED
.BYP40   ANOP
         AIF   ('&BUF'(1,1) NE '''').BYP50
         CNOP  0,4
&LEN     SETA  K'&BUF+3
&LEN     SETA  &LEN/4*4
SPFB&NDX DC    CL&LEN&BUF               GENERATED ISPEXEC BUFFER
SPFL&NDX DC    F'&LEN'                  GENERATED ISPEXEC LENGTH
.BYP50   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         AIF   ('&BUFLEN' EQ '').BYP100
         AIF   ('&BUF'(1,1) EQ '''').BYP100
         AIF   (T'&BUF EQ 'N').BYP100
         LA    15,&BUFLEN               GET ADDRESS OF BUFFER LENGTH
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFL&NDX              GET ADDRESS OF GENNED LENGTH
.BYP120  ANOP
         AIF   ('&BUF'(1,1) NE '''').BYP130
         LA    0,SPFB&NDX               GET ADDRESS OF GENERATED BUF
         AGO   .BYP150
.BYP130  ANOP
         LA    0,&BUF                   GET ADDRESS OF BUFFER
         AGO   .BYP150
.BYP150  ANOP
         STM   15,0,&TEMP               STORE PARAMETERS
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         AIF   ('&BUFLEN' EQ '').BYP200
         AIF   ('&BUF'(1,1) EQ '''').BYP200
         AIF   (T'&BUFLEN EQ 'N').BYP200
         DC    A(&BUFLEN)               ADDRESS OF BUFFER LENGTH
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFL&NDX)              ADDRESS OF GENNED LENGTH
.BYP220  ANOP
         AIF   ('&BUF'(1,1) NE '''').BYP230
         DC    A(SPFB&NDX+X'80000000')  ADDRESS OF GENERATED BUFFER
         AGO   .BYP250
.BYP230  ANOP
         DC    A(&BUF+X'80000000')      ADDRESS OF BUFFER
.BYP250  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'BUFFER FOR ISPEXEC COMMAND IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.WARN    ANOP
         MNOTE 4,'BUFFER LENGTH IS IGNORED FOR LITERAL BUFFER'
         AGO   .CONT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=ISPF     8512-85095-85095-1207-00236-00236-00000-ISPFDYN
         MACRO
&NAME    ISPF  &FUNC,                   FUNCTION REQUESTED             *
               &LIST=SPFPARMS,          FOR ALL FUNCTIONS              *
               &COUNT=,                 COUNT OF PARM ADDRESSES        *
               &MINIMUM=,               MINIMUM COUNT OF PARMS         *
               &ISPLINK=(YES,ISPLINK),  GENERATE ISPLINK FULLWORD      *
               &ISPEXEC=(NO),           GENERATE ISPEXEC FULLWORD      *
               &FULL=NO,                GENERATE UNSTRING WORK AREA    *
               &LEVEL=2,                LEVEL OF MACROS IN USE         *
               &LASTCC=                 GENERATE EQUATE IN PARMS
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLOAD,&SPFDELETE,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         GBLC  &SPFLVL
         LCLC  &NDX,&TEMP
         LCLA  &CNT,&LMT
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       EDIT  GENERAL PARAMETERS
.**********************************************************************
.*
         AIF   ('&COUNT' NE '' AND                                     *
               T'&COUNT NE 'N').ERROR5
         AIF   ('&MINIMUM' NE '' AND                                   *
               T'&MINIMUM NE 'N').ERROR5A
         AIF   ('&ISPLINK(1)' NE 'YES' AND                             *
               '&ISPLINK(1)' NE 'NO').ERROR6
         AIF   ('&ISPEXEC(1)' NE 'YES' AND                             *
               '&ISPEXEC(1)' NE 'NO').ERROR7
         AIF   ('&FULL' NE 'YES' AND                                   *
               '&FULL' NE 'NO').ERROR8
         AIF   ('&MINIMUM' EQ '' OR &MINIMUM LE &SPFVARS).CONT11
&SPFVARS SETA  &MINIMUM
.CONT11  ANOP
.*
.**********************************************************************
.*       EDIT FUNCTION
.**********************************************************************
.*
         AIF   ('&FUNC' EQ 'PARMS').PARMS
         AIF   ('&FUNC' EQ 'LOAD').LOAD
         AIF   ('&FUNC' EQ 'DELETE').DEL
         AIF   ('&FUNC' EQ 'DEBUG').DEBUG
         AIF   ('&FUNC' EQ 'DEBUGOFF').DEBUGOFF
         AIF   ('&FUNC' EQ 'SUPPRESS').SUPRESS
         AIF   ('&FUNC' EQ 'RESET').RESET
         AIF   ('&FUNC' EQ 'SET').SET
         AGO   .ERROR1
.*
.**********************************************************************
.*       ISPF PARMS FUNCTION
.**********************************************************************
.*
.PARMS   ANOP
         AIF   (&SPFLOAD AND &SPFDELETE).PARMSG
         MNOTE 4,'        NO ISPF LOAD AND DELETE HAS BEEN DONE'
.*
.**********************************************************************
.*       GENERATE ISPF PARMS AREA
.**********************************************************************
.*
.PARMSG  AIF   ('&NAME' EQ '').BYP0
&NAME    DS    0H
.BYP0    AIF   ('&LIST' EQ '').BYP1
         AIF   ('&COUNT' NE '').PARMSD
         AIF   (&SPFVARS EQ 0).DONTGEN
&LIST    DS    &SPFVARS.F               ISPF PARAMETER LIST
.DONTGEN ANOP
&SPFVARC SETA  &SPFVARS
&SPFVAR  SETB  1
         AGO   .BYP1
.PARMSD  ANOP
         AIF   (&COUNT LT &SPFVARS).ERRVAR
&LIST    DS    &COUNT.F                 ISPF PARAMETER LIST
&SPFVARC SETA  &COUNT
&SPFVAR  SETB  1
.BYP1    ANOP
         AIF   ('&ISPLINK(1)' EQ 'NO').BYP2
&TEMP    SETC  '&ISPLINK(2)'
         AIF   ('&TEMP' NE '').CONT1
&TEMP    SETC  'ISPLINK'
.CONT1   ANOP
&TEMP    DS    A                        CONTAINS ISPLINK ADDRESS
.BYP2    ANOP
         AIF   ('&ISPEXEC(1)' EQ 'NO').BYP3
&TEMP    SETC  '&ISPEXEC(2)'
         AIF   ('&TEMP' NE '').CONT2
&TEMP    SETC  'ISPEXEC'
.CONT2   ANOP
&TEMP    DS    A                        CONTAINS ISPEXEC ADDRESS
.BYP3    ANOP
         AIF   ('&FULL' EQ 'NO').BYP4
SPFCMD   DS    CL80                     COMMAND RETURNED FROM UNSTRING
SPFCMDP  DS    19CL80                   PARMS RETURNED FROM UNSTRING
SPFCOUNT DS    F                        NUMBER OF PARMS RETURNED
.BYP4    ANOP
         AIF   ('&LASTCC' EQ '').BYP5
&LASTCC  EQU   15                       EQUATE REG 15 TO LASTCC
.BYP5    ANOP
         MEXIT
.*
.**********************************************************************
.*       ISPF LOAD FUNCTION
.**********************************************************************
.*
.LOAD    ANOP
.*
.**********************************************************************
.*       GENERATE ISPF LOAD AREA
.**********************************************************************
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
&SPFLOAD SETB  1
         AIF   ('&ISPLINK(1)' NE 'YES').BYP11
         LOAD  EP=ISPLINK               LOAD ISPLINK
         AIF   ('&ISPLINK(2)' EQ '').BYP11
         ST    0,&ISPLINK(2)            STORE ISPLINK ADDRESS
.BYP11   ANOP
         AIF   ('&ISPEXEC(1)' NE 'YES').BYP12
         LOAD  EP=ISPEXEC               LOAD ISPEXEC
         AIF   ('&ISPEXEC(2)' EQ '').BYP12
         ST    0,&ISPEXEC(2)            STORE ISPEXEC ADDRESS
.BYP12   ANOP
         MEXIT
.*
.**********************************************************************
.*       ISPF DELETE FUNCTION
.**********************************************************************
.*
.DEL     ANOP
.*
.**********************************************************************
.*       GENERATE ISPF LOAD AREA
.**********************************************************************
.*
         AIF   ('&NAME' EQ '').BYP20
&NAME    DS    0H
.BYP20   ANOP
&SPFDELETE SETB  1
         AIF   ('&ISPLINK(1)' NE 'YES').BYP21
         DELETE EP=ISPLINK              DEL ISPLINK
.BYP21   ANOP
         AIF   ('&ISPEXEC(1)' NE 'YES').BYP22
         DELETE EP=ISPEXEC              LOAD ISPLINK
.BYP22   ANOP
         MEXIT
.*
.**********************************************************************
.*       ISPF DEBUG FUNCTION
.**********************************************************************
.*
.DEBUG   ANOP
&SPFDEBUG SETB 1
         MEXIT
.*
.**********************************************************************
.*       ISPF DEBUGOFF FUNCTION
.**********************************************************************
.*
.DEBUGOFF ANOP
&SPFDEBUG SETB 0
         MEXIT
.*
.**********************************************************************
.*       ISPF SUPRESS AND GENERATE CODE
.**********************************************************************
.*
.SUPRESS ANOP
&CNT     SETA  1
&LMT     SETA  N'&LIST
.SUPLOOP ANOP
         AIF   (&CNT GT &LMT).SUPEXIT
         ISPFSUPP &LIST(&CNT)
&CNT     SETA  &CNT+1
         AGO   .SUPLOOP
.SUPEXIT ANOP
         MEXIT
.*
.**********************************************************************
.*       ISPF RESET CODE
.**********************************************************************
.*
.RESET   ANOP
&CNT     SETA  1
&LMT     SETA  N'&LIST
.SUPLOO2 ANOP
         AIF   (&CNT GT &LMT).SUPEXI2
         ISPFREST &LIST(&CNT)
&CNT     SETA  &CNT+1
         AGO   .SUPLOO2
.SUPEXI2 ANOP
         MEXIT
.*
.**********************************************************************
.*       ISPF SET LEVEL CODE
.**********************************************************************
.*
.SET     ANOP
&SPFLVL  SETC  '&LEVEL'
         MEXIT
.*
.**********************************************************************
.*       ERRORS ISSUED FROM MACRO
.**********************************************************************
.*
.ERROR1  ANOP
         MNOTE 16,'INVALID ISPF FUNCTION - FOUND ''&FUNC'''
         MEXIT
.ERROR5  ANOP
         MNOTE 16,'COUNT= VALUE MUST BE NUMERIC - FOUND ''&COUNT'''
         MEXIT
.ERROR5A ANOP
         MNOTE 16,'MINIMUM= VALUE MUST BE NUMERIC - FOUND ''&MINIMUM'''
         MEXIT
.ERROR6  ANOP
         MNOTE 16,'ISPLINK= VALUE MUST BE YES OR NO - FOUND ''&ISPLINK(*
               1)'''
         MEXIT
.ERROR7  ANOP
         MNOTE 16,'ISPEXEC= VALUE MUST BE YES OR NO - FOUND ''&ISPEXEC(*
               1)'''
         MEXIT
.ERROR8  ANOP
         MNOTE 16,'FULL= VALUE MUST BE YES OR NO - FOUND ''&FULL'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'COUNT= COUNT IS NOT LARGE ENOUGH FOR LARGEST LIST'
         MEXIT
         MEND
./ ADD NAME=ISPFREST 8512-85095-85095-1208-00534-00534-00000-ISPFDYN
         MACRO
         ISPFREST &VAR
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFASIS
         GBLB  &SPFBIT
         GBLB  &SPFBROWSE
         GBLB  &SPFCANCEL
         GBLB  &SPFCHAR
         GBLB  &SPFCONTROL
         GBLB  &SPFDISABLE
         GBLB  &SPFDISPLAY
         GBLB  &SPFEDIT
         GBLB  &SPFEDREC
         GBLB  &SPFENABLE
         GBLB  &SPFENTER
         GBLB  &SPFEND
         GBLB  &SPFERRORS
         GBLB  &SPFFIXED
         GBLB  &SPFFTCLOSE
         GBLB  &SPFFTERASE
         GBLB  &SPFFTINCL
         GBLB  &SPFFTOPEN
         GBLB  &SPFGETMSG
         GBLB  &SPFGRTERM
         GBLB  &SPFHEX
         GBLB  &SPFISPEXEC
         GBLB  &SPFISREDIT
         GBLB  &SPFLINE
         GBLB  &SPFLOCK
         GBLB  &SPFLOG
         GBLB  &SPFLOCATE
         GBLB  &SPFMOVE
         GBLB  &SPFNEWCOPY
         GBLB  &SPFNEXT
         GBLB  &SPFNO
         GBLB  &SPFNOCMD
         GBLB  &SPFNOFT
         GBLB  &SPFNONDISPL
         GBLB  &SPFNOREAD
         GBLB  &SPFNOREPL
         GBLB  &SPFNOWRITE
         GBLB  &SPFORDER
         GBLB  &SPFPREVIOUS
         GBLB  &SPFPROFILE
         GBLB  &SPFREFRESH
         GBLB  &SPFREPLCOPY
         GBLB  &SPFREPLACE
         GBLB  &SPFRESTORE
         GBLB  &SPFRETURN
         GBLB  &SPFSAVE
         GBLB  &SPFSELECT
         GBLB  &SPFSETMSG
         GBLB  &SPFSHARE
         GBLB  &SPFSHARED
         GBLB  &SPFSM
         GBLB  &SPFSPLIT
         GBLB  &SPFTBADD
         GBLB  &SPFTBBOTTOM
         GBLB  &SPFTBCLOSE
         GBLB  &SPFTBCREATE
         GBLB  &SPFTBDELETE
         GBLB  &SPFTBDISPL
         GBLB  &SPFTBEND
         GBLB  &SPFTBERASE
         GBLB  &SPFTBEXIST
         GBLB  &SPFTBGET
         GBLB  &SPFTBMOD
         GBLB  &SPFTBOPEN
         GBLB  &SPFTBPUT
         GBLB  &SPFTBQUERY
         GBLB  &SPFTBSARG
         GBLB  &SPFTBSAVE
         GBLB  &SPFTBSCAN
         GBLB  &SPFTBSKIP
         GBLB  &SPFTBSORT
         GBLB  &SPFTBSTATS
         GBLB  &SPFTBTOP
         GBLB  &SPFTBVCLEAR
         GBLB  &SPFTEMP
         GBLB  &SPFUSER
         GBLB  &SPFVCOPY
         GBLB  &SPFVDEFINE
         GBLB  &SPFVDELETE
         GBLB  &SPFVGET
         GBLB  &SPFVPUT
         GBLB  &SPFVREPLACE
         GBLB  &SPFVRESET
         GBLB  &SPFWRITE
         GBLB  &SPFYES
.*
.**********************************************************************
.*       AIF CODE
.**********************************************************************
.*
         AIF   ('&VAR' NE 'ASIS' AND '&VAR' NE 'ALL').B50
&SPFASIS SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B50     ANOP
.*
         AIF   ('&VAR' NE 'BIT' AND '&VAR' NE 'ALL').B60
&SPFBIT SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B60     ANOP
.*
         AIF   ('&VAR' NE 'BROWSE' AND '&VAR' NE 'ALL').B100
&SPFBROWSE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B100    ANOP
.*
         AIF   ('&VAR' NE 'CANCEL' AND '&VAR' NE 'ALL').B110
&SPFCANCEL SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B110    ANOP
.*
         AIF   ('&VAR' NE 'CHAR' AND '&VAR' NE 'ALL').B115
&SPFCHAR SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B115    ANOP
.*
         AIF   ('&VAR' NE 'CONTROL' AND '&VAR' NE 'ALL').B200
&SPFCONTROL SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B200    ANOP
.*
         AIF   ('&VAR' NE 'DISABLE' AND '&VAR' NE 'ALL').B210
&SPFDISABLE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B210    ANOP
.*
         AIF   ('&VAR' NE 'DISPLAY' AND '&VAR' NE 'ALL').B300
&SPFDISPLAY SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B300    ANOP
.*
         AIF   ('&VAR' NE 'EDIT' AND '&VAR' NE 'ALL').B400
&SPFEDIT SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B400    ANOP
.*
         AIF   ('&VAR' NE 'EDREC' AND   '&VAR' NE 'ALL').B500
&SPFEDREC SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B500    ANOP
.*
         AIF   ('&VAR' NE 'END' AND     '&VAR' NE 'ALL').B510
&SPFEND SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B510    ANOP
.*
         AIF   ('&VAR' NE 'ENABLE' AND  '&VAR' NE 'ALL').B515
&SPFENABLE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B515    ANOP
.*
         AIF   ('&VAR' NE 'ENTER' AND   '&VAR' NE 'ALL').B520
&SPFENTER SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B520    ANOP
.*
         AIF   ('&VAR' NE 'ERRORS' AND  '&VAR' NE 'ALL').B525
&SPFERRORS SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B525    ANOP
.*
         AIF   ('&VAR' NE 'FIXED' AND   '&VAR' NE 'ALL').B550
&SPFFIXED SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B550    ANOP
.*
         AIF   ('&VAR' NE 'FTCLOSE' AND '&VAR' NE 'ALL').B600
&SPFFTCLOSE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B600    ANOP
.*
         AIF   ('&VAR' NE 'FTERASE' AND '&VAR' NE 'ALL').B700
&SPFFTERASE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B700    ANOP
.*
         AIF   ('&VAR' NE 'FTINCL' AND '&VAR' NE 'ALL').B800
&SPFFTINCL SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B800    ANOP
.*
         AIF   ('&VAR' NE 'FTOPEN' AND '&VAR' NE 'ALL').B900
&SPFFTOPEN SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B900    ANOP
.*
         AIF   ('&VAR' NE 'GETMSG' AND '&VAR' NE 'ALL').B1000
&SPFGETMSG SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1000   ANOP
.*
         AIF   ('&VAR' NE 'GRTERM' AND '&VAR' NE 'ALL').B1100
&SPFGRTERM SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1100   ANOP
.*
         AIF   ('&VAR' NE 'HEX' AND '&VAR' NE 'ALL').B1125
&SPFHEX SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1125   ANOP
.*
         AIF   ('&VAR' NE 'ISPEXEC' AND '&VAR' NE 'ALL').B1150
&SPFISPEXEC SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1150   ANOP
.*
         AIF   ('&VAR' NE 'ISREDIT' AND '&VAR' NE 'ALL').B1200
&SPFISREDIT SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1200   ANOP
.*
         AIF   ('&VAR' NE 'LINE' AND '&VAR' NE 'ALL').B1250
&SPFLINE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1250   ANOP
.*
         AIF   ('&VAR' NE 'LOCK' AND '&VAR' NE 'ALL').B1275
&SPFLOCK SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1275   ANOP
.*
         AIF   ('&VAR' NE 'LOG' AND '&VAR' NE 'ALL').B1300
&SPFLOG SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1300   ANOP
.*
         AIF   ('&VAR' NE 'LOCATE' AND '&VAR' NE 'ALL').B1310
&SPFLOCATE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1310   ANOP
.*
         AIF   ('&VAR' NE 'MOVE' AND '&VAR' NE 'ALL').B1320
&SPFMOVE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1320   ANOP
.*
         AIF   ('&VAR' NE 'NEWCOPY' AND '&VAR' NE 'ALL').B1400
&SPFNEWCOPY SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1400   ANOP
.*
         AIF   ('&VAR' NE 'NEXT' AND '&VAR' NE 'ALL').B1410
&SPFNEXT SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1410   ANOP
.*
         AIF   ('&VAR' NE 'NO' AND '&VAR' NE 'ALL').B1500
&SPFNO SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1500   ANOP
.*
         AIF   ('&VAR' NE 'NOCMD' AND '&VAR' NE 'ALL').B1510
&SPFNOCMD SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1510   ANOP
.*
         AIF   ('&VAR' NE 'NOFT' AND '&VAR' NE 'ALL').B1515
&SPFNOFT SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1515   ANOP
.*
         AIF   ('&VAR' NE 'NONDISPL' AND '&VAR' NE 'ALL').B1520
&SPFNONDISPL SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1520   ANOP
.*
         AIF   ('&VAR' NE 'NOREAD' AND '&VAR' NE 'ALL').B1522
&SPFNOREAD SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1522   ANOP
.*
         AIF   ('&VAR' NE 'NOREPL' AND '&VAR' NE 'ALL').B1524
&SPFNOREPL SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1524   ANOP
.*
         AIF   ('&VAR' NE 'NOWRITE' AND '&VAR' NE 'ALL').B1600
&SPFNOWRITE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1600   ANOP
.*
         AIF   ('&VAR' NE 'ORDER' AND '&VAR' NE 'ALL').B1601
&SPFORDER SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1601   ANOP
.*
         AIF   ('&VAR' NE 'PREVIOUS' AND '&VAR' NE 'ALL').B1605
&SPFPREVIOUS SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1605   ANOP
.*
         AIF   ('&VAR' NE 'PROFILE' AND '&VAR' NE 'ALL').B1607
&SPFPROFILE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1607   ANOP
.*
         AIF   ('&VAR' NE 'REFRESH' AND '&VAR' NE 'ALL').B1610
&SPFREFRESH SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1610   ANOP
.*
         AIF   ('&VAR' NE 'REPLCOPY' AND '&VAR' NE 'ALL').B1612
&SPFREPLCOPY SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1612   ANOP
.*
         AIF   ('&VAR' NE 'REPLACE' AND '&VAR' NE 'ALL').B1614
&SPFREPLACE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1614   ANOP
.*
         AIF   ('&VAR' NE 'RESTORE' AND '&VAR' NE 'ALL').B1620
&SPFRESTORE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1620   ANOP
.*
         AIF   ('&VAR' NE 'SAVE' AND '&VAR' NE 'ALL').B1630
&SPFSAVE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1630   ANOP
.*
         AIF   ('&VAR' NE 'SELECT' AND '&VAR' NE 'ALL').B1700
&SPFSELECT SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1700   ANOP
.*
         AIF   ('&VAR' NE 'SETMSG' AND '&VAR' NE 'ALL').B1800
&SPFSETMSG SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1800   ANOP
.*
         AIF   ('&VAR' NE 'SHARE' AND '&VAR' NE 'ALL').B1805
&SPFSHARE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1805   ANOP
.*
         AIF   ('&VAR' NE 'SHARED' AND '&VAR' NE 'ALL').B1807
&SPFSHARED SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1807   ANOP
.*
         AIF   ('&VAR' NE 'SPLIT' AND '&VAR' NE 'ALL').B1810
&SPFSPLIT SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1810   ANOP
.*
         AIF   ('&VAR' NE 'TBADD' AND '&VAR' NE 'ALL').B1900
&SPFTBADD SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B1900   ANOP
.*
         AIF   ('&VAR' NE 'TBBOTTOM' AND '&VAR' NE 'ALL').B2000
&SPFTBBOTTOM SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B2000   ANOP
.*
         AIF   ('&VAR' NE 'TBCLOSE' AND '&VAR' NE 'ALL').B2100
&SPFTBCLOSE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B2100   ANOP
.*
         AIF   ('&VAR' NE 'TBCREATE' AND '&VAR' NE 'ALL').B2200
&SPFTBCREATE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B2200   ANOP
.*
         AIF   ('&VAR' NE 'TBDELETE' AND '&VAR' NE 'ALL').B2300
&SPFTBDELETE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B2300   ANOP
.*
         AIF   ('&VAR' NE 'TBDISPL' AND '&VAR' NE 'ALL').B2400
&SPFTBDISPL SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B2400   ANOP
.*
         AIF   ('&VAR' NE 'TBEND' AND '&VAR' NE 'ALL').B2500
&SPFTBEND SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B2500   ANOP
.*
         AIF   ('&VAR' NE 'TBERASE' AND '&VAR' NE 'ALL').B2600
&SPFTBERASE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B2600   ANOP
.*
         AIF   ('&VAR' NE 'TBEXIST' AND '&VAR' NE 'ALL').B2700
&SPFTBEXIST SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B2700   ANOP
.*
         AIF   ('&VAR' NE 'TBGET' AND '&VAR' NE 'ALL').B2800
&SPFTBGET SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B2800   ANOP
.*
         AIF   ('&VAR' NE 'TBMOD' AND '&VAR' NE 'ALL').B2900
&SPFTBMOD SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B2900   ANOP
.*
         AIF   ('&VAR' NE 'TBOPEN' AND '&VAR' NE 'ALL').B3000
&SPFTBOPEN SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3000   ANOP
.*
         AIF   ('&VAR' NE 'TBPUT' AND '&VAR' NE 'ALL').B3100
&SPFTBPUT SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3100   ANOP
.*
         AIF   ('&VAR' NE 'TBQUERY' AND '&VAR' NE 'ALL').B3200
&SPFTBQUERY SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3200   ANOP
.*
         AIF   ('&VAR' NE 'TBSARG' AND '&VAR' NE 'ALL').B3300
&SPFTBSARG SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3300   ANOP
.*
         AIF   ('&VAR' NE 'TBSAVE' AND '&VAR' NE 'ALL').B3400
&SPFTBSAVE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3400   ANOP
.*
         AIF   ('&VAR' NE 'TBSCAN' AND '&VAR' NE 'ALL').B3500
&SPFTBSCAN SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3500   ANOP
.*
         AIF   ('&VAR' NE 'TBSKIP' AND '&VAR' NE 'ALL').B3600
&SPFTBSKIP SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3600   ANOP
.*
         AIF   ('&VAR' NE 'TBSORT' AND '&VAR' NE 'ALL').B3700
&SPFTBSORT SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3700   ANOP
         AIF   ('&VAR' NE 'TBSTATS' AND '&VAR' NE 'ALL').B3750
&SPFTBSTATS SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3750   ANOP
.*
         AIF   ('&VAR' NE 'TBTOP' AND '&VAR' NE 'ALL').B3800
&SPFTBTOP SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3800   ANOP
.*
         AIF   ('&VAR' NE 'TBVCLEAR' AND '&VAR' NE 'ALL').B3900
&SPFTBVCLEAR SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3900   ANOP
.*
         AIF   ('&VAR' NE 'TEMP' AND '&VAR' NE 'ALL').B3950
&SPFTEMP SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3950   ANOP
.*
         AIF   ('&VAR' NE 'USER' AND '&VAR' NE 'ALL').B3955
&SPFUSER SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B3955   ANOP
.*
         AIF   ('&VAR' NE 'VCOPY' AND '&VAR' NE 'ALL').B4000
&SPFVCOPY SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B4000   ANOP
.*
         AIF   ('&VAR' NE 'VDEFINE' AND '&VAR' NE 'ALL').B4100
&SPFVDEFINE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B4100   ANOP
.*
         AIF   ('&VAR' NE 'VDELETE' AND '&VAR' NE 'ALL').B4200
&SPFVDELETE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B4200   ANOP
.*
         AIF   ('&VAR' NE 'VGET' AND '&VAR' NE 'ALL').B4300
&SPFVGET SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B4300   ANOP
.*
         AIF   ('&VAR' NE 'VPUT' AND '&VAR' NE 'ALL').B4400
&SPFVPUT SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B4400   ANOP
.*
         AIF   ('&VAR' NE 'VREPLACE' AND '&VAR' NE 'ALL').B4500
&SPFVREPLACE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B4500   ANOP
.*
         AIF   ('&VAR' NE 'VRESET' AND '&VAR' NE 'ALL').B4600
&SPFVRESET SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B4600   ANOP
.*
         AIF   ('&VAR' NE 'WRITE' AND '&VAR' NE 'ALL').B4700
&SPFWRITE SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B4700   ANOP
.*
         AIF   ('&VAR' NE 'YES' AND '&VAR' NE 'ALL').B4800
&SPFYES SETB 0
         AIF   ('&VAR' NE 'ALL').EXIT
.B4800   ANOP
.*
.*
.**********************************************************************
.*       CHECK FOR ERRORS
.**********************************************************************
.*
         AIF   ('&VAR' NE 'ALL').ERR1
.EXIT    MEXIT
.ERR1    ANOP
         MNOTE 16,'INVALID VALUE FOR LIST - FOUND ''&VAR'''
         AGO   .EXIT
         MEND
X        CSECT
         ISPF  SUPPRESS,LIST=CONTROL
         CONTROL ERRORS,CANCEL
         ISPF  RESET,LIST=CONTROL
         CONTROL ERRORS,CANCEL
         END
./ ADD NAME=ISPFSUPP 8512-85095-85095-1208-00631-00631-00000-ISPFDYN
         MACRO
         ISPFSUPP &VAR
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFASIS
         GBLB  &SPFBIT
         GBLB  &SPFBROWSE
         GBLB  &SPFCANCEL
         GBLB  &SPFCHAR
         GBLB  &SPFCONTROL
         GBLB  &SPFDISABLE
         GBLB  &SPFDISPLAY
         GBLB  &SPFEDIT
         GBLB  &SPFEDREC
         GBLB  &SPFENABLE
         GBLB  &SPFENTER
         GBLB  &SPFEND
         GBLB  &SPFERRORS
         GBLB  &SPFFIXED
         GBLB  &SPFFTCLOSE
         GBLB  &SPFFTERASE
         GBLB  &SPFFTINCL
         GBLB  &SPFFTOPEN
         GBLB  &SPFGETMSG
         GBLB  &SPFGRTERM
         GBLB  &SPFHEX
         GBLB  &SPFINPUT
         GBLB  &SPFISPEXEC
         GBLB  &SPFISREDIT
         GBLB  &SPFLINE
         GBLB  &SPFLOCK
         GBLB  &SPFLOG
         GBLB  &SPFLOCATE
         GBLB  &SPFMOVE
         GBLB  &SPFNEWCOPY
         GBLB  &SPFNEXT
         GBLB  &SPFNO
         GBLB  &SPFNOCMD
         GBLB  &SPFNOFT
         GBLB  &SPFNONDISPL
         GBLB  &SPFNOREAD
         GBLB  &SPFNOREPL
         GBLB  &SPFNOWRITE
         GBLB  &SPFORDER
         GBLB  &SPFOUTPUT
         GBLB  &SPFPREVIOUS
         GBLB  &SPFPROFILE
         GBLB  &SPFREFRESH
         GBLB  &SPFREPLCOPY
         GBLB  &SPFREPLACE
         GBLB  &SPFRESTORE
         GBLB  &SPFRETURN
         GBLB  &SPFSAVE
         GBLB  &SPFSELECT
         GBLB  &SPFSETMSG
         GBLB  &SPFSHARE
         GBLB  &SPFSHARED
         GBLB  &SPFSM
         GBLB  &SPFSPLIT
         GBLB  &SPFTBADD
         GBLB  &SPFTBBOTTOM
         GBLB  &SPFTBCLOSE
         GBLB  &SPFTBCREATE
         GBLB  &SPFTBDELETE
         GBLB  &SPFTBDISPL
         GBLB  &SPFTBEND
         GBLB  &SPFTBERASE
         GBLB  &SPFTBEXIST
         GBLB  &SPFTBGET
         GBLB  &SPFTBMOD
         GBLB  &SPFTBOPEN
         GBLB  &SPFTBPUT
         GBLB  &SPFTBQUERY
         GBLB  &SPFTBSARG
         GBLB  &SPFTBSAVE
         GBLB  &SPFTBSCAN
         GBLB  &SPFTBSKIP
         GBLB  &SPFTBSORT
         GBLB  &SPFTBSTATS
         GBLB  &SPFTBTOP
         GBLB  &SPFTBVCLEAR
         GBLB  &SPFTEMP
         GBLB  &SPFUSER
         GBLB  &SPFVCOPY
         GBLB  &SPFVDEFINE
         GBLB  &SPFVDELETE
         GBLB  &SPFVGET
         GBLB  &SPFVPUT
         GBLB  &SPFVREPLACE
         GBLB  &SPFVRESET
         GBLB  &SPFWRITE
         GBLB  &SPFYES
.*
         GBLB  &SPFLMCLOSE
         GBLB  &SPFLMERASE
         GBLB  &SPFLMFREE
         GBLB  &SPFLMGET
         GBLB  &SPFLMINIT
         GBLB  &SPFLMMADD
         GBLB  &SPFLMMDEL
         GBLB  &SPFLMMFIND
         GBLB  &SPFLMMLIST
         GBLB  &SPFLMMREN
         GBLB  &SPFLMMREP
         GBLB  &SPFLMOPEN
         GBLB  &SPFLMPUT
         GBLB  &SPFLMQUERY
         GBLB  &SPFLMRENAME
.*
.**********************************************************************
.*       AIF CODE
.**********************************************************************
.*
         AIF   ('&VAR' NE 'ASIS' AND '&VAR' NE 'ALL').B50
&SPFASIS SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B50     ANOP
.*
         AIF   ('&VAR' NE 'BIT' AND '&VAR' NE 'ALL').B60
&SPFBIT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B60     ANOP
.*
         AIF   ('&VAR' NE 'BROWSE' AND '&VAR' NE 'ALL').B100
&SPFBROWSE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B100    ANOP
.*
         AIF   ('&VAR' NE 'CANCEL' AND '&VAR' NE 'ALL').B110
&SPFCANCEL SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B110    ANOP
.*
         AIF   ('&VAR' NE 'CHAR' AND '&VAR' NE 'ALL').B115
&SPFCHAR SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B115    ANOP
.*
         AIF   ('&VAR' NE 'CONTROL' AND '&VAR' NE 'ALL').B200
&SPFCONTROL SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B200    ANOP
.*
         AIF   ('&VAR' NE 'DISABLE' AND '&VAR' NE 'ALL').B210
&SPFDISABLE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B210    ANOP
.*
         AIF   ('&VAR' NE 'DISPLAY' AND '&VAR' NE 'ALL').B300
&SPFDISPLAY SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B300    ANOP
.*
         AIF   ('&VAR' NE 'EDIT' AND '&VAR' NE 'ALL').B400
&SPFEDIT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B400    ANOP
.*
         AIF   ('&VAR' NE 'EDREC' AND   '&VAR' NE 'ALL').B500
&SPFEDREC SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B500    ANOP
.*
         AIF   ('&VAR' NE 'END' AND     '&VAR' NE 'ALL').B510
&SPFEND SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B510    ANOP
.*
         AIF   ('&VAR' NE 'ENABLE' AND  '&VAR' NE 'ALL').B515
&SPFENABLE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B515    ANOP
.*
         AIF   ('&VAR' NE 'ENTER' AND   '&VAR' NE 'ALL').B520
&SPFENTER SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B520    ANOP
.*
         AIF   ('&VAR' NE 'ERRORS' AND  '&VAR' NE 'ALL').B525
&SPFERRORS SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B525    ANOP
.*
         AIF   ('&VAR' NE 'FIXED' AND   '&VAR' NE 'ALL').B550
&SPFFIXED SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B550    ANOP
.*
         AIF   ('&VAR' NE 'FTCLOSE' AND '&VAR' NE 'ALL').B600
&SPFFTCLOSE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B600    ANOP
.*
         AIF   ('&VAR' NE 'FTERASE' AND '&VAR' NE 'ALL').B700
&SPFFTERASE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B700    ANOP
.*
         AIF   ('&VAR' NE 'FTINCL' AND '&VAR' NE 'ALL').B800
&SPFFTINCL SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B800    ANOP
.*
         AIF   ('&VAR' NE 'FTOPEN' AND '&VAR' NE 'ALL').B900
&SPFFTOPEN SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B900    ANOP
.*
         AIF   ('&VAR' NE 'GETMSG' AND '&VAR' NE 'ALL').B1000
&SPFGETMSG SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1000   ANOP
.*
         AIF   ('&VAR' NE 'GRTERM' AND '&VAR' NE 'ALL').B1100
&SPFGRTERM SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1100   ANOP
.*
         AIF   ('&VAR' NE 'HEX' AND '&VAR' NE 'ALL').B1125
&SPFHEX SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1125   ANOP
.*
         AIF   ('&VAR' NE 'INPUT' AND '&VAR' NE 'ALL').B1140
&SPFINPUT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1140   ANOP
.*
         AIF   ('&VAR' NE 'ISPEXEC' AND '&VAR' NE 'ALL').B1150
&SPFISPEXEC SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1150   ANOP
.*
         AIF   ('&VAR' NE 'ISREDIT' AND '&VAR' NE 'ALL').B1200
&SPFISREDIT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1200   ANOP
.*
         AIF   ('&VAR' NE 'LINE' AND '&VAR' NE 'ALL').B1250
&SPFLINE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1250   ANOP
.*
         AIF   ('&VAR' NE 'LOCK' AND '&VAR' NE 'ALL').B1275
&SPFLOCK SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1275   ANOP
.*
         AIF   ('&VAR' NE 'LOG' AND '&VAR' NE 'ALL').B1300
&SPFLOG SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1300   ANOP
.*
         AIF   ('&VAR' NE 'LOCATE' AND '&VAR' NE 'ALL').B1310
&SPFLOCATE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1310   ANOP
.*
         AIF   ('&VAR' NE 'MOVE' AND '&VAR' NE 'ALL').B1320
&SPFMOVE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1320   ANOP
.*
         AIF   ('&VAR' NE 'NEWCOPY' AND '&VAR' NE 'ALL').B1400
&SPFNEWCOPY SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1400   ANOP
.*
         AIF   ('&VAR' NE 'NEXT' AND '&VAR' NE 'ALL').B1410
&SPFNEXT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1410   ANOP
.*
         AIF   ('&VAR' NE 'NO' AND '&VAR' NE 'ALL').B1500
&SPFNO SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1500   ANOP
.*
         AIF   ('&VAR' NE 'NOCMD' AND '&VAR' NE 'ALL').B1510
&SPFNOCMD SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1510   ANOP
.*
         AIF   ('&VAR' NE 'NOFT' AND '&VAR' NE 'ALL').B1515
&SPFNOFT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1515   ANOP
.*
         AIF   ('&VAR' NE 'NONDISPL' AND '&VAR' NE 'ALL').B1520
&SPFNONDISPL SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1520   ANOP
.*
         AIF   ('&VAR' NE 'NOREAD' AND '&VAR' NE 'ALL').B1522
&SPFNOREAD SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1522   ANOP
.*
         AIF   ('&VAR' NE 'NOREPL' AND '&VAR' NE 'ALL').B1524
&SPFNOREPL SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1524   ANOP
.*
         AIF   ('&VAR' NE 'NOWRITE' AND '&VAR' NE 'ALL').B1600
&SPFNOWRITE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1600   ANOP
.*
         AIF   ('&VAR' NE 'ORDER' AND '&VAR' NE 'ALL').B1601
&SPFORDER SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1601   ANOP
.*
         AIF   ('&VAR' NE 'OUTPUT' AND '&VAR' NE 'ALL').B1602
&SPFOUTPUT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1602   ANOP
.*
         AIF   ('&VAR' NE 'PREVIOUS' AND '&VAR' NE 'ALL').B1605
&SPFPREVIOUS SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1605   ANOP
.*
         AIF   ('&VAR' NE 'PROFILE' AND '&VAR' NE 'ALL').B1607
&SPFPROFILE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1607   ANOP
.*
         AIF   ('&VAR' NE 'REFRESH' AND '&VAR' NE 'ALL').B1610
&SPFREFRESH SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1610   ANOP
.*
         AIF   ('&VAR' NE 'REPLCOPY' AND '&VAR' NE 'ALL').B1612
&SPFREPLCOPY SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1612   ANOP
.*
         AIF   ('&VAR' NE 'REPLACE' AND '&VAR' NE 'ALL').B1614
&SPFREPLACE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1614   ANOP
.*
         AIF   ('&VAR' NE 'RESTORE' AND '&VAR' NE 'ALL').B1620
&SPFRESTORE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1620   ANOP
.*
         AIF   ('&VAR' NE 'SAVE' AND '&VAR' NE 'ALL').B1630
&SPFSAVE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1630   ANOP
.*
         AIF   ('&VAR' NE 'SELECT' AND '&VAR' NE 'ALL').B1700
&SPFSELECT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1700   ANOP
.*
         AIF   ('&VAR' NE 'SETMSG' AND '&VAR' NE 'ALL').B1800
&SPFSETMSG SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1800   ANOP
.*
         AIF   ('&VAR' NE 'SHARE' AND '&VAR' NE 'ALL').B1805
&SPFSHARE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1805   ANOP
.*
         AIF   ('&VAR' NE 'SHARED' AND '&VAR' NE 'ALL').B1807
&SPFSHARED SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1807   ANOP
.*
         AIF   ('&VAR' NE 'SPLIT' AND '&VAR' NE 'ALL').B1810
&SPFSPLIT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1810   ANOP
.*
         AIF   ('&VAR' NE 'TBADD' AND '&VAR' NE 'ALL').B1900
&SPFTBADD SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B1900   ANOP
.*
         AIF   ('&VAR' NE 'TBBOTTOM' AND '&VAR' NE 'ALL').B2000
&SPFTBBOTTOM SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B2000   ANOP
.*
         AIF   ('&VAR' NE 'TBCLOSE' AND '&VAR' NE 'ALL').B2100
&SPFTBCLOSE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B2100   ANOP
.*
         AIF   ('&VAR' NE 'TBCREATE' AND '&VAR' NE 'ALL').B2200
&SPFTBCREATE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B2200   ANOP
.*
         AIF   ('&VAR' NE 'TBDELETE' AND '&VAR' NE 'ALL').B2300
&SPFTBDELETE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B2300   ANOP
.*
         AIF   ('&VAR' NE 'TBDISPL' AND '&VAR' NE 'ALL').B2400
&SPFTBDISPL SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B2400   ANOP
.*
         AIF   ('&VAR' NE 'TBEND' AND '&VAR' NE 'ALL').B2500
&SPFTBEND SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B2500   ANOP
.*
         AIF   ('&VAR' NE 'TBERASE' AND '&VAR' NE 'ALL').B2600
&SPFTBERASE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B2600   ANOP
.*
         AIF   ('&VAR' NE 'TBEXIST' AND '&VAR' NE 'ALL').B2700
&SPFTBEXIST SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B2700   ANOP
.*
         AIF   ('&VAR' NE 'TBGET' AND '&VAR' NE 'ALL').B2800
&SPFTBGET SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B2800   ANOP
.*
         AIF   ('&VAR' NE 'TBMOD' AND '&VAR' NE 'ALL').B2900
&SPFTBMOD SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B2900   ANOP
.*
         AIF   ('&VAR' NE 'TBOPEN' AND '&VAR' NE 'ALL').B3000
&SPFTBOPEN SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3000   ANOP
.*
         AIF   ('&VAR' NE 'TBPUT' AND '&VAR' NE 'ALL').B3100
&SPFTBPUT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3100   ANOP
.*
         AIF   ('&VAR' NE 'TBQUERY' AND '&VAR' NE 'ALL').B3200
&SPFTBQUERY SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3200   ANOP
.*
         AIF   ('&VAR' NE 'TBSARG' AND '&VAR' NE 'ALL').B3300
&SPFTBSARG SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3300   ANOP
.*
         AIF   ('&VAR' NE 'TBSAVE' AND '&VAR' NE 'ALL').B3400
&SPFTBSAVE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3400   ANOP
.*
         AIF   ('&VAR' NE 'TBSCAN' AND '&VAR' NE 'ALL').B3500
&SPFTBSCAN SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3500   ANOP
.*
         AIF   ('&VAR' NE 'TBSKIP' AND '&VAR' NE 'ALL').B3600
&SPFTBSKIP SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3600   ANOP
.*
         AIF   ('&VAR' NE 'TBSORT' AND '&VAR' NE 'ALL').B3700
&SPFTBSORT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3700   ANOP
         AIF   ('&VAR' NE 'TBSTATS' AND '&VAR' NE 'ALL').B3750
&SPFTBSTATS SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3750   ANOP
.*
         AIF   ('&VAR' NE 'TBTOP' AND '&VAR' NE 'ALL').B3800
&SPFTBTOP SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3800   ANOP
.*
         AIF   ('&VAR' NE 'TBVCLEAR' AND '&VAR' NE 'ALL').B3900
&SPFTBVCLEAR SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3900   ANOP
.*
         AIF   ('&VAR' NE 'TEMP' AND '&VAR' NE 'ALL').B3950
&SPFTEMP SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3950   ANOP
.*
         AIF   ('&VAR' NE 'USER' AND '&VAR' NE 'ALL').B3955
&SPFUSER SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B3955   ANOP
.*
         AIF   ('&VAR' NE 'VCOPY' AND '&VAR' NE 'ALL').B4000
&SPFVCOPY SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B4000   ANOP
.*
         AIF   ('&VAR' NE 'VDEFINE' AND '&VAR' NE 'ALL').B4100
&SPFVDEFINE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B4100   ANOP
.*
         AIF   ('&VAR' NE 'VDELETE' AND '&VAR' NE 'ALL').B4200
&SPFVDELETE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B4200   ANOP
.*
         AIF   ('&VAR' NE 'VGET' AND '&VAR' NE 'ALL').B4300
&SPFVGET SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B4300   ANOP
.*
         AIF   ('&VAR' NE 'VPUT' AND '&VAR' NE 'ALL').B4400
&SPFVPUT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B4400   ANOP
.*
         AIF   ('&VAR' NE 'VREPLACE' AND '&VAR' NE 'ALL').B4500
&SPFVREPLACE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B4500   ANOP
.*
         AIF   ('&VAR' NE 'VRESET' AND '&VAR' NE 'ALL').B4600
&SPFVRESET SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B4600   ANOP
.*
         AIF   ('&VAR' NE 'WRITE' AND '&VAR' NE 'ALL').B4700
&SPFWRITE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B4700   ANOP
.*
         AIF   ('&VAR' NE 'YES' AND '&VAR' NE 'ALL').B4800
&SPFYES SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B4800   ANOP
.*
         AIF   ('&VAR' NE 'LMCLOSE' AND '&VAR' NE 'ALL').B4900
&SPFLMCLOSE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B4900   ANOP
.*
         AIF   ('&VAR' NE 'LMERASE' AND '&VAR' NE 'ALL').B5000
&SPFLMERASE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B5000   ANOP
.*
         AIF   ('&VAR' NE 'LMFREE' AND  '&VAR' NE 'ALL').B5100
&SPFLMFREE SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B5100   ANOP
.*
         AIF   ('&VAR' NE 'LMGET' AND   '&VAR' NE 'ALL').B5200
&SPFLMGET SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B5200   ANOP
.*
         AIF   ('&VAR' NE 'LMINIT' AND  '&VAR' NE 'ALL').B5300
&SPFLMINIT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B5300   ANOP
.*
         AIF   ('&VAR' NE 'LMMADD' AND  '&VAR' NE 'ALL').B5400
&SPFLMMADD SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B5400   ANOP
.*
         AIF   ('&VAR' NE 'LMMDEL' AND  '&VAR' NE 'ALL').B5500
&SPFLMMDEL SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B5500   ANOP
.*
         AIF   ('&VAR' NE 'LMMFIND' AND '&VAR' NE 'ALL').B5600
&SPFLMMFIND SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B5600   ANOP
.*
         AIF   ('&VAR' NE 'LMMLIST' AND '&VAR' NE 'ALL').B5700
&SPFLMMLIST SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B5700   ANOP
.*
         AIF   ('&VAR' NE 'LMMREN' AND  '&VAR' NE 'ALL').B5800
&SPFLMMREN SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B5800   ANOP
.*
         AIF   ('&VAR' NE 'LMMREP' AND  '&VAR' NE 'ALL').B5900
&SPFLMMREP SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B5900   ANOP
.*
         AIF   ('&VAR' NE 'LMOPEN' AND  '&VAR' NE 'ALL').B6000
&SPFLMOPEN SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B6000   ANOP
.*
         AIF   ('&VAR' NE 'LMPUT' AND   '&VAR' NE 'ALL').B6100
&SPFLMPUT SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B6100   ANOP
.*
         AIF   ('&VAR' NE 'LMQUERY' AND '&VAR' NE 'ALL').B6200
&SPFLMQUERY SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B6200   ANOP
.*
         AIF   ('&VAR' NE 'LMRENAME' AND '&VAR' NE 'ALL').B6300
&SPFLMRENAME SETB 1
         AIF   ('&VAR' NE 'ALL').EXIT
.B6300   ANOP
.*
.*
.**********************************************************************
.*       CHECK FOR ERRORS
.**********************************************************************
.*
         AIF   ('&VAR' NE 'ALL').ERR1
.EXIT    MEXIT
.ERR1    ANOP
         MNOTE 16,'INVALID VALUE FOR LIST - FOUND ''&VAR'''
         AGO   .EXIT
         MEND
./ ADD NAME=ISREDIT  8512-85095-85095-1208-00150-00150-00000-ISPFDYN
         MACRO
&NAME    ISREDIT &BUFLEN,               MEMBER NAME                    *
               &BUF,                    LIBRARY NAME                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFISREDIT,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         LCLA  &LEN
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&BUF' EQ '').ERR1
         AIF   ('&BUF'(1,1) EQ '''' AND '&BUFLEN' NE '').WARN
.CONT    ANOP
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFISREDIT).GENLIT
         AIF   (T'&BUFLEN EQ 'N').GENLIT
.CNT1    AIF   ('&BUF' EQ '').CNT2
         AIF   ('&BUF'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFISREDIT).BYP20
ISREDIT  DC    CL8'ISREDIT'             ISPF KEYWORD
&SPFISREDIT SETB 1
.BYP20   ANOP
         AIF   ('&BUFLEN' EQ '').BYP40
         AIF   (T'&BUFLEN NE 'N').BYP40
         AIF   ('&BUF'(1,1) EQ '''').BYP40
SPFL&NDX DC    F'&BUFLEN'               BUFFER LENGTH GENERATED
.BYP40   ANOP
         AIF   ('&BUF'(1,1) NE '''').BYP50
         CNOP  0,4
&LEN     SETA  K'&BUF+3
&LEN     SETA  &LEN/4*4
SPFB&NDX DC    CL&LEN&BUF               GENERATED ISREDIT BUFFER
SPFL&NDX DC    F'&LEN'                  GENERATED ISREDIT LENGTH
.BYP50   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,ISREDIT               GET ADDRESS OF ISREDIT KEYWORD
         AIF   ('&BUFLEN' EQ '').BYP100
         AIF   ('&BUF'(1,1) EQ '''').BYP100
         AIF   (T'&BUFLEN EQ 'N').BYP100
         LA    15,&BUFLEN               GET ADDRESS OF BUFFER LENGTH
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFL&NDX              GET ADDRESS OF GENNED LENGTH
.BYP120  ANOP
         AIF   ('&BUF'(1,1) NE '''').BYP130
         LA    0,SPFB&NDX               GET ADDRESS OF GENERATED BUF
         AGO   .BYP150
.BYP130  ANOP
         LA    0,&BUF                   GET ADDRESS OF BUFFER
         AGO   .BYP150
.BYP150  ANOP
         STM   14,0,&TEMP               STORE PARAMETERS
         OI    &TEMP+8,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(ISREDIT)               BROWSE LITERAL
         AIF   ('&BUFLEN' EQ '').BYP200
         AIF   ('&BUF'(1,1) EQ '''').BYP200
         AIF   (T'&BUFLEN EQ 'N').BYP200
         DC    A(&BUFLEN)               ADDRESS OF BUFFER LENGTH
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFL&NDX)              ADDRESS OF GENNED LENGTH
.BYP220  ANOP
         AIF   ('&BUF'(1,1) NE '''').BYP230
         DC    A(SPFB&NDX+X'80000000')  ADDRESS OF GENERATED BUFFER
         AGO   .BYP250
.BYP230  ANOP
         DC    A(&BUF+X'80000000')      ADDRESS OF BUFFER
.BYP250  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'BUFFER FOR ISREDIT COMMAND IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.WARN    ANOP
         MNOTE 4,'BUFFER LENGTH IS IGNORED FOR LITERAL BUFFER'
         AGO   .CONT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMCLOSE  8512-85095-85095-1208-00150-00150-00000-ISPFDYN
         MACRO
&LABEL   LMCLOSE &DATAID=,              DATAID NAME                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMCLOSE              GLOBAL FOR LMCLOSE LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMCLOSE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMCLOSE).BYP20
LMCLOSE  DC    CL8'LMCLOSE'             ISPF KEYWORD
&SPFLMCLOSE SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMCLOSE               GET ADDRESS OF LMCLOSE KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         STM   14,15,&TEMP              STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMCLOSE)               GET ADDRESS OF LMCLOSE KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID+X'80000000')   GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX+X'80000000')  GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMERASE  8512-85095-85095-1208-00218-00218-00000-ISPFDYN
         MACRO
&LABEL   LMERASE &PROJECT=,             PROJECT NAME                   *
               &GROUP=,                 VARIABLE FOR GROUP             *
               &TYPE=,                  LOCK OPTION                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMERASE              GLOBAL FOR LMERASE LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&PROJECT' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMERASE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&PROJECT'(1,1) EQ '''').GENLIT
.*
         AIF   ('&GROUP' EQ '').CNT2
         AIF   ('&GROUP'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&TYPE' EQ '').CNT6
         AIF   ('&TYPE'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMERASE).BYP20
LMERASE  DC    CL8'LMERASE'             ISPF KEYWORD
&SPFLMERASE SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&PROJECT' EQ '').BYP30
         AIF   ('&PROJECT'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&PROJECT              GENERATED PROJECT NAME
.BYP30   ANOP
.*
.*
         AIF   ('&GROUP' EQ '').BYP50
         AIF   ('&GROUP'(1,1) NE '''').BYP50
SPFA&NDX DC    CL8&GROUP                GROUP NAME
.BYP50   ANOP
.*
.*
         AIF   ('&TYPE' EQ '').BYP90
         AIF   ('&TYPE'(1,1) NE '''').BYP90
SPFB&NDX DC    CL8&TYPE                 TYPE OPTION
.BYP90   ANOP
.*
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMERASE               GET ADDRESS OF LMERASE KEYWORD
.*
.*
         AIF   ('&PROJECT'(1,1) EQ '''').BYP1010
         LA    15,&PROJECT              GET ADDRESS OF PROJECT NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED PROJECT
.BYP1050 ANOP
.*
.*
         AIF   ('&GROUP' EQ '').BYP1200
         AIF   ('&GROUP'(1,1) EQ '''').BYP1210
         LA    0,&GROUP                 GET ADDRESS OF GROUP VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR GROUP
         AGO   .BYP1250
.BYP1210 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENNED GROUP
.BYP1250 ANOP
.*
.*
         AIF   ('&TYPE' EQ '').BYP1100
         AIF   ('&TYPE'(1,1) EQ '''').BYP1110
         LA    1,&TYPE                  GET ADDRESS OF &TYPE
         AGO   .BYP1150
.BYP1100 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR TYPE
         AGO   .BYP1150
.BYP1110 ANOP
         LA    1,SPFB&NDX               GENNED TYPE
.BYP1150 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMERASE)               GET ADDRESS OF LMERASE KEYWORD
.*
.*
         AIF   ('&PROJECT'(1,1) EQ '''').BY1010
         DC    A(&PROJECT)              GET ADDRESS OF PROJECT NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED PROJECT
.BY1050 ANOP
.*
.*
         AIF   ('&GROUP' EQ '').BY1200
         AIF   ('&GROUP'(1,1) EQ '''').BY1210
         DC    A(&GROUP)                GET ADDRESS OF GROUP VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR GROUP
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFA&NDX)              GET ADDRESS OF GENNED GROUP
.BY1250 ANOP
.*
.*
         AIF   ('&TYPE' EQ '').BY1600
         AIF   ('&TYPE'(1,1) EQ '''').BY1610
         DC    A(&TYPE+X'80000000')     GET ADDRESS OF TYPE VARIABLE
         AGO   .BY1650
.BY1600 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR TYPE
         AGO   .BY1650
.BY1610 ANOP
         DC    A(SPFB&NDX+X'80000000')  GET ADDRESS OF GENNED TYPE
.BY1650 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'PROJECT NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMFREE   8512-85095-85095-1208-00150-00150-00000-ISPFDYN
         MACRO
&LABEL   LMFREE &DATAID=,               DATAID NAME                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMFREE               GLOBAL FOR LMFREE LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMFREE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMFREE).BYP20
LMFREE   DC    CL8'LMFREE'              ISPF KEYWORD
&SPFLMFREE SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMFREE                GET ADDRESS OF LMFREE KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         STM   14,15,&TEMP              STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMFREE)                GET ADDRESS OF LMFREE KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID+X'80000000')   GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX+X'80000000')  GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMGET    8512-85095-85095-1208-00284-00284-00000-ISPFDYN
         MACRO
&LABEL   LMGET &DATAID=,                DATAID NAME                    *
               &MODE=,                  MODE                           *
               &DATALOC=,                                              *
               &DATALEN=,                                              *
               &MAXLEN=,                                               *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMGET                GLOBAL FOR LMGET LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMGET).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
         AIF   ('&MODE' EQ '').CNT2
         AIF   ('&MODE'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&DATALOC' EQ '').CNT3
         AIF   ('&DATALOC'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&DATALEN' EQ '').CNT4
         AIF   ('&DATALEN'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   (T'&MAXLEN EQ 'N').GENLIT
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMGET).BYP20
LMGET    DC    CL8'LMGET'               ISPF KEYWORD
&SPFLMGET SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
         AIF   ('&MODE' EQ '').BYP40
         AIF   ('&MODE'(1,1) NE '''').BYP40
SPFA&NDX DC    CL8&MODE                 MODE TYPE
.BYP40   ANOP
.*
.*
         AIF   ('&DATALOC' EQ '').BYP50
         AIF   ('&DATALOC'(1,1) NE '''').BYP50
SPFB&NDX DC    CL8&DATALOC              DATALOC VARIABLE NAME
.BYP50   ANOP
.*
.*
         AIF   ('&DATALEN' EQ '').BYP60
         AIF   ('&DATALEN'(1,1) NE '''').BYP60
SPFC&NDX DC    CL8&DATALEN              DATALEN VARIABLE NAME
.BYP60   ANOP
.*
.*
         AIF   (T'&MAXLEN NE 'N').BYP70
SPFD&NDX DC    F'&MAXLEN'               MAXLEN
.BYP70   ANOP
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMGET                 GET ADDRESS OF LMGET KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         AIF   ('&MODE' EQ '').BYP1100
         AIF   ('&MODE'(1,1) EQ '''').BYP1110
         LA    0,&MODE                  GET ADDRESS OF &MODE
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR MODE
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFA&NDX               GET GENNED MODE
.BYP1150 ANOP
.*
.*
         AIF   ('&DATALOC' EQ '').BYP1200
         AIF   ('&DATALOC'(1,1) EQ '''').BYP1210
         LA    1,&DATALOC               GET ADDRESS OF DATALOC VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR DATALOC
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFB&NDX               GET ADDRESS OF GENNED DATALOC
.BYP1250 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&DATALEN' EQ '').BYP1300
         AIF   ('&DATALEN'(1,1) EQ '''').BYP1310
         LA    14,&DATALEN              GET ADDRESS OF DATALEN VARIABLE
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR DATALEN
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENNED DATALEN
.BYP1350 ANOP
.*
.*
         AIF   (T'&MAXLEN EQ 'N').BYP1410
         AIF   ('&MAXLEN' EQ '').BYP1400
         LA    15,&MAXLEN               GET ADDRESS OF MAXLEN
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MAXLEN
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFD&NDX              GET ADDRESS OF GENNED MAXLEN
.BYP1450 ANOP
.*
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMGET)                 GET ADDRESS OF LMGET KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID)               GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
         AIF   ('&MODE' EQ '').BY1100
         AIF   ('&MODE'(1,1) EQ '''').BY1110
         DC    A(&MODE)                 GET ADDRESS OF &MODE
         AGO   .BY1150
.BY1100 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR MODE
         AGO   .BY1150
.BY1110 ANOP
         DC    A(SPFA&NDX)              GET GENNED MODE
.BY1150 ANOP
.*
.*
         AIF   ('&DATALOC' EQ '').BY1200
         AIF   ('&DATALOC'(1,1) EQ '''').BY1210
         DC    A(&DATALOC)              GET ADDRESS OF DATALOC VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR DATALOC
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFB&NDX)              GET ADDRESS OF GENNED DATALOC
.BY1250 ANOP
.*
.*
         AIF   ('&DATALEN' EQ '').BY1300
         AIF   ('&DATALEN'(1,1) EQ '''').BY1310
         DC    A(&DATALEN)              GET ADDRESS OF DATALEN VARIABLE
         AGO   .BY1350
.BY1300 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR DATALEN
         AGO   .BY1350
.BY1310 ANOP
         DC    A(SPFC&NDX)              GET ADDRESS OF GENNED DATALEN
.BY1350 ANOP
.*
.*
         AIF   ('&MAXLEN' EQ '').BY1400
         AIF   (T'&MAXLEN EQ 'N').BY1410
         DC    A(&MAXLEN+X'80000000')   GET ADDRESS OF MAXLEN VARIABLE
         AGO   .BY1450
.BY1400 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR MAXLEN
         AGO   .BY1450
.BY1410 ANOP
         DC    A(SPFD&NDX+X'80000000')  GET ADDRESS OF GENNED MAXLEN
.BY1450 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMINIT   8512-85095-85095-1208-00568-00568-00000-ISPFDYN
         MACRO
&LABEL   LMINIT &DATAID=,               DATAID NAME                    *
               &PROJECT=,               PROJECT NAME                   *
               &GROUP1=,                GROUP 1 NAME                   *
               &GROUP2=,                GROUP 2 NAME                   *
               &GROUP3=,                GROUP 3 NAME                   *
               &GROUP4=,                GROUP 4 NAME                   *
               &TYPE=,                  TYPE                           *
               &DATASET=,               DATASET NAME                   *
               &DDNAME=,                DDNAME                         *
               &VOLUME=,                VOL SER                        *
               &PASSWORD=,              PASSWORD                       *
               &ENQ=,                   ENQ TYPE                       *
               &ORG=,                   ORGANIZATION                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMINIT               GLOBAL FOR LMINIT LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMINIT).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
         AIF   ('&PROJECT' EQ '').CNT1
         AIF   ('&PROJECT'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&GROUP1' EQ '').CNT2
         AIF   ('&GROUP1'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&GROUP2' EQ '').CNT3
         AIF   ('&GROUP2'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&GROUP3' EQ '').CNT4
         AIF   ('&GROUP3'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&GROUP4' EQ '').CNT5
         AIF   ('&GROUP4'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AIF   ('&TYPE' EQ '').CNT6
         AIF   ('&TYPE'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AIF   ('&DATASET' EQ '').CNT7
         AIF   ('&DATASET'(1,1) EQ '''').GENLIT
.CNT7    ANOP
         AIF   ('&DDNAME' EQ '').CNT8
         AIF   ('&DDNAME'(1,1) EQ '''').GENLIT
.CNT8    ANOP
         AIF   ('&VOLUME' EQ '').CNT9
         AIF   ('&VOLUME'(1,1) EQ '''').GENLIT
.CNT9    ANOP
         AIF   ('&PASSWORD' EQ '').CNT10
         AIF   ('&PASSWORD'(1,1) EQ '''').GENLIT
.CNT10   ANOP
         AIF   ('&ENQ' EQ '').CNT11
         AIF   ('&ENQ'(1,1) EQ '''').GENLIT
.CNT11   ANOP
         AIF   ('&ORG' EQ '').CNT12
         AIF   ('&ORG'(1,1) EQ '''').GENLIT
.CNT12   ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMINIT).BYP20
LMINIT   DC    CL8'LMINIT'              ISPF KEYWORD
&SPFLMINIT SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
         AIF   ('&PROJECT' EQ '').BYP40
         AIF   ('&PROJECT'(1,1) NE '''').BYP40
SPFA&NDX DC    CL8&PROJECT              PROJECT VARIABLE NAME
.BYP40   ANOP
.*
.*
         AIF   ('&GROUP1' EQ '').BYP50
         AIF   ('&GROUP1'(1,1) NE '''').BYP50
SPFB&NDX DC    CL8&GROUP1               GROUP1 VARIABLE NAME
.BYP50   ANOP
.*
.*
         AIF   ('&GROUP2' EQ '').BYP60
         AIF   ('&GROUP2'(1,1) NE '''').BYP60
SPFC&NDX DC    CL8&GROUP2               GROUP2 VARIABLE NAME
.BYP60   ANOP
.*
.*
         AIF   ('&GROUP3' EQ '').BYP70
         AIF   ('&GROUP3'(1,1) NE '''').BYP70
SPFD&NDX DC    CL8&GROUP3               GROUP3 VARIABLE NAME
.BYP70   ANOP
.*
.*
         AIF   ('&GROUP4' EQ '').BYP80
         AIF   ('&GROUP4'(1,1) NE '''').BYP80
SPFE&NDX DC    CL8&GROUP4               USERE VARIABLE NAME
.BYP80   ANOP
.*
.*
         AIF   ('&TYPE' EQ '').BYP90
         AIF   ('&TYPE'(1,1) NE '''').BYP90
SPFF&NDX DC    CL8&TYPE                 TYPE VARIABLE NAME
.BYP90   ANOP
.*
.*
         AIF   ('&DATASET' EQ '').BYP100
         AIF   ('&DATASET'(1,1) NE '''').BYP100
SPFG&NDX DC    CL56&DATASET             DATASET NAME
.BYP100  ANOP
.*
.*
         AIF   ('&DDNAME' EQ '').BYP110
         AIF   ('&DDNAME'(1,1) NE '''').BYP110
SPFH&NDX DC    CL8&DDNAME               DDNAME VARIABLE NAME
.BYP110  ANOP
.*
.*
         AIF   ('&VOLUME' EQ '').BYP120
         AIF   ('&VOLUME'(1,1) NE '''').BYP120
SPFI&NDX DC    CL6&VOLUME               VOLUME VARIABLE NAME
.BYP120  ANOP
.*
.*
         AIF   ('&PASSWORD' EQ '').BYP130
         AIF   ('&PASSWORD'(1,1) NE '''').BYP130
SPFJ&NDX DC    CL8&PASSWORD             PASSWORD VARIABLE NAME
.BYP130  ANOP
.*
.*
         AIF   ('&ENQ' EQ '').BYP140
         AIF   ('&ENQ'(1,1) NE '''').BYP140
SPFK&NDX DC    CL8&ENQ                  ENQ VARIABLE NAME
.BYP140  ANOP
.*
.*
         AIF   ('&ORG' EQ '').BYP150
         AIF   ('&ORG'(1,1) NE '''').BYP150
SPFL&NDX DC    CL8&ORG                  ORG VARIABLE NAME
.BYP150  ANOP
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMINIT                GET ADDRESS OF LMINIT KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         AIF   ('&PROJECT' EQ '').BYP1100
         AIF   ('&PROJECT'(1,1) EQ '''').BYP1110
         LA    0,&PROJECT               GET ADDRESS OF PROJECT VARIABLE
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR PROJECT
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENNED PROJECT
.BYP1150 ANOP
.*
.*
         AIF   ('&GROUP1' EQ '').BYP1200
         AIF   ('&GROUP1'(1,1) EQ '''').BYP1210
         LA    1,&GROUP1                GET ADDRESS OF GROUP1 VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR GROUP1
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFB&NDX               GET ADDRESS OF GENNED GROUP1
.BYP1250 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&GROUP2' EQ '').BYP1300
         AIF   ('&GROUP2'(1,1) EQ '''').BYP1310
         LA    14,&GROUP2               GET ADDRESS OF GROUP2 VARIABLE
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR GROUP2
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENNED GROUP2
.BYP1350 ANOP
.*
.*
         AIF   ('&GROUP3' EQ '').BYP1400
         AIF   ('&GROUP3'(1,1) EQ '''').BYP1410
         LA    15,&GROUP3               GET ADDRESS OF GROUP3 VARIABLE
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR GROUP3
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFD&NDX              GET ADDRESS OF GENNED GROUP3
.BYP1450 ANOP
.*
.*
         AIF   ('&GROUP4' EQ '').BYP1500
         AIF   ('&GROUP4'(1,1) EQ '''').BYP1510
         LA    0,&GROUP4                GET ADDRESS OF GROUP4 VARIABLE
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR GROUP4
         AGO   .BYP1550
.BYP1510 ANOP
         LA    0,SPFE&NDX               GET ADDRESS OF GENNED GROUP4
.BYP1550 ANOP
.*
.*
         AIF   ('&TYPE' EQ '').BYP1600
         AIF   ('&TYPE'(1,1) EQ '''').BYP1610
         LA    1,&TYPE                  ADDRESS OF TYPE VARIABLE
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR TYPE
         AGO   .BYP1650
.BYP1610 ANOP
         LA    1,SPFF&NDX               GET ADDRESS OF GENNED TYPE
.BYP1650 ANOP
.*
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&DATASET' EQ '').BYP1700
         AIF   ('&DATASET'(1,1) EQ '''').BYP1710
         LA    14,&DATASET              ADDRESS OF DATASET NAME
         AGO   .BYP1750
.BYP1700 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR DATASET
         AGO   .BYP1750
.BYP1710 ANOP
         LA    14,SPFG&NDX              GET ADDRESS OF GENNED DATASET
.BYP1750 ANOP
.*
.*
         AIF   ('&DDNAME' EQ '').BYP1800
         AIF   ('&DDNAME'(1,1) EQ '''').BYP1810
         LA    15,&DDNAME               ADDRESS OF DDNAME VARIABLE
         AGO   .BYP1850
.BYP1800 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR DDNAME
         AGO   .BYP1850
.BYP1810 ANOP
         LA    15,SPFH&NDX              GET ADDRESS OF GENNED DDNAME
.BYP1850 ANOP
.*
.*
         AIF   ('&VOLUME' EQ '').BYP1900
         AIF   ('&VOLUME'(1,1) EQ '''').BYP1910
         LA    0,&VOLUME                ADDRESS OF VOLUME VARIABLE
         AGO   .BYP1950
.BYP1900 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR VOLUME
         AGO   .BYP1950
.BYP1910 ANOP
         LA    0,SPFI&NDX               GET ADDRESS OF GENNED VOLUME
.BYP1950 ANOP
.*
.*
         AIF   ('&PASSWORD' EQ '').BYP2000
         AIF   ('&PASSWORD'(1,1) EQ '''').BYP2010
         LA    1,&PASSWORD              ADDRESS OF PASSWORD VARIABLE
         AGO   .BYP2050
.BYP2000 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR PASSWORD
         AGO   .BYP2050
.BYP2010 ANOP
         LA    1,SPFJ&NDX               GET ADDRESS OF GENNED PASSWORD
.BYP2050 ANOP
.*
.*
         STM   14,1,&TEMP+32            STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&ENQ' EQ '').BYP2100
         AIF   ('&ENQ'(1,1) EQ '''').BYP2110
         LA    14,&ENQ                  ADDRESS OF ENQ VARIABLE
         AGO   .BYP2150
.BYP2100 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR ENQ
         AGO   .BYP2150
.BYP2110 ANOP
         LA    14,SPFK&NDX              GET ADDRESS OF GENNED ENQ
.BYP2150 ANOP
.*
.*
         AIF   ('&ORG' EQ '').BYP2200
         AIF   ('&ORG'(1,1) EQ '''').BYP2210
         LA    15,&ORG                  ADDRESS OF ORG VARIABLE
         AGO   .BYP2250
.BYP2200 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR ORG
         AGO   .BYP2250
.BYP2210 ANOP
         LA    15,SPFL&NDX              GET ADDRESS OF GENNED ORG
.BYP2250 ANOP
.*
.*
         STM   14,15,&TEMP+48           STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+52,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 14).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 14).BYPVARS
&SPFVARS SETA  14
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMINIT)                GET ADDRESS OF LMINIT KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID)               GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
         AIF   ('&PROJECT' EQ '').BY1100
         AIF   ('&PROJECT'(1,1) EQ '''').BY1110
         DC    A(&PROJECT)              GET ADDRESS OF PROJECT VARIABLE
         AGO   .BY1150
.BY1100 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR PROJECT
         AGO   .BY1150
.BY1110 ANOP
         DC    A(SPFA&NDX)              GET ADDRESS OF GENNED PROJECT
.BY1150 ANOP
.*
.*
         AIF   ('&GROUP1' EQ '').BY1200
         AIF   ('&GROUP1'(1,1) EQ '''').BY1210
         DC    A(&GROUP1)               GET ADDRESS OF GROUP1 VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR GROUP1
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFB&NDX)              GET ADDRESS OF GENNED GROUP1
.BY1250 ANOP
.*
.*
         AIF   ('&GROUP2' EQ '').BY1300
         AIF   ('&GROUP2'(1,1) EQ '''').BY1310
         DC    A(&GROUP2)               GET ADDRESS OF GROUP2 VARIABLE
         AGO   .BY1350
.BY1300 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR GROUP2
         AGO   .BY1350
.BY1310 ANOP
         DC    A(SPFC&NDX)              GET ADDRESS OF GENNED GROUP2
.BY1350 ANOP
.*
.*
         AIF   ('&GROUP3' EQ '').BY1400
         AIF   ('&GROUP3'(1,1) EQ '''').BY1410
         DC    A(&GROUP3)               GET ADDRESS OF GROUP3 VARIABLE
         AGO   .BY1450
.BY1400 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR GROUP3
         AGO   .BY1450
.BY1410 ANOP
         DC    A(SPFD&NDX)              GET ADDRESS OF GENNED GROUP3
.BY1450 ANOP
.*
.*
         AIF   ('&GROUP4' EQ '').BY1500
         AIF   ('&GROUP4'(1,1) EQ '''').BY1510
         DC    A(&GROUP4)               GET ADDRESS OF GROUP4 VARIABLE
         AGO   .BY1550
.BY1500 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR GROUP4
         AGO   .BY1550
.BY1510 ANOP
         DC    A(SPFE&NDX)              GET ADDRESS OF GENNED GROUP4
.BY1550 ANOP
.*
.*
         AIF   ('&TYPE' EQ '').BY1600
         AIF   ('&TYPE'(1,1) EQ '''').BY1610
         DC    A(&TYPE)                 ADDRESS OF TYPE VARIABLE
         AGO   .BY1650
.BY1600 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR TYPE
         AGO   .BY1650
.BY1610 ANOP
         DC    A(SPFF&NDX)              GET ADDRESS OF GENNED TYPE
.BY1650 ANOP
.*
.*
         AIF   ('&DATASET' EQ '').BY1700
         AIF   ('&DATASET'(1,1) EQ '''').BY1710
         DC    A(&DATASET)              ADDRESS OF DATASET NAME
         AGO   .BY1750
.BY1700 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR DATASET
         AGO   .BY1750
.BY1710 ANOP
         DC    A(SPFG&NDX)              GET ADDRESS OF GENNED DATASET
.BY1750 ANOP
.*
.*
         AIF   ('&DDNAME' EQ '').BY1800
         AIF   ('&DDNAME'(1,1) EQ '''').BY1810
         DC    A(&DDNAME)               ADDRESS OF DDNAME VARIABLE
         AGO   .BY1850
.BY1800 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR DDNAME
         AGO   .BY1850
.BY1810 ANOP
         DC    A(SPFH&NDX)              GET ADDRESS OF GENNED DDNAME
.BY1850 ANOP
.*
.*
         AIF   ('&VOLUME' EQ '').BY1900
         AIF   ('&VOLUME'(1,1) EQ '''').BY1910
         DC    A(&VOLUME)               ADDRESS OF VOLUME VARIABLE
         AGO   .BY1950
.BY1900 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR VOLUME
         AGO   .BY1950
.BY1910 ANOP
         DC    A(SPFI&NDX)              GET ADDRESS OF GENNED VOLUME
.BY1950 ANOP
.*
.*
         AIF   ('&PASSWORD' EQ '').BY2000
         AIF   ('&PASSWORD'(1,1) EQ '''').BY2010
         DC    A(&PASSWORD)             ADDRESS OF PASSWORD VARIABLE
         AGO   .BY2050
.BY2000 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR PASSWORD
         AGO   .BY2050
.BY2010 ANOP
         DC    A(SPFJ&NDX)              GET ADDRESS OF GENNED PASSWORD
.BY2050 ANOP
.*
.*
         AIF   ('&ENQ' EQ '').BY2100
         AIF   ('&ENQ'(1,1) EQ '''').BY2110
         DC    A(&ENQ)                  ADDRESS OF ENQ VARIABLE
         AGO   .BY2150
.BY2100 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR ENQ
         AGO   .BY2150
.BY2110 ANOP
         DC    A(SPFK&NDX)              GET ADDRESS OF GENNED ENQ
.BY2150 ANOP
.*
.*
         AIF   ('&ORG' EQ '').BY2200
         AIF   ('&ORG'(1,1) EQ '''').BY2210
         DC    A(&ORG+X'80000000')      ADDRESS OF ORG VARIABLE
         AGO   .BY2250
.BY2200 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR ORG
         AGO   .BY2250
.BY2210 ANOP
         DC    A(SPFL&NDX+X'80000000')  GET ADDRESS OF GENNED ORG
.BY2250 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMMADD   8512-85095-85095-1208-00218-00218-00000-ISPFDYN
         MACRO
&LABEL   LMMADD &DATAID=,               DATAID NAME                    *
               &MEMBER=,                VARIABLE FOR MEMBER            *
               &STATS=,                 LOCK OPTION                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMMADD               GLOBAL FOR LMMADD LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMMADD).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
.*
         AIF   ('&MEMBER' EQ '').CNT2
         AIF   ('&MEMBER'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&STATS' EQ '').CNT6
         AIF   ('&STATS'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMMADD).BYP20
LMMADD   DC    CL8'LMMADD'              ISPF KEYWORD
&SPFLMMADD SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP50
         AIF   ('&MEMBER'(1,1) NE '''').BYP50
SPFA&NDX DC    CL8&MEMBER               MEMBER NAME
.BYP50   ANOP
.*
.*
         AIF   ('&STATS' EQ '').BYP90
         AIF   ('&STATS'(1,1) NE '''').BYP90
SPFB&NDX DC    CL8&STATS                STATS OPTION
.BYP90   ANOP
.*
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMMADD                GET ADDRESS OF LMMADD KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP1200
         AIF   ('&MEMBER'(1,1) EQ '''').BYP1210
         LA    0,&MEMBER                GET ADDRESS OF MEMBER VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR MEMBER
         AGO   .BYP1250
.BYP1210 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENNED MEMBER
.BYP1250 ANOP
.*
.*
         AIF   ('&STATS' EQ '').BYP1100
         AIF   ('&STATS'(1,1) EQ '''').BYP1110
         LA    1,&STATS                 GET ADDRESS OF &STATS
         AGO   .BYP1150
.BYP1100 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR STATS
         AGO   .BYP1150
.BYP1110 ANOP
         LA    1,SPFB&NDX               GENNED STATS
.BYP1150 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMMADD)                GET ADDRESS OF LMMADD KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID)               GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BY1200
         AIF   ('&MEMBER'(1,1) EQ '''').BY1210
         DC    A(&MEMBER)               GET ADDRESS OF MEMBER VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR MEMBER
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFA&NDX)              GET ADDRESS OF GENNED MEMBER
.BY1250 ANOP
.*
.*
         AIF   ('&STATS' EQ '').BY1600
         AIF   ('&STATS'(1,1) EQ '''').BY1610
         DC    A(&STATS+X'80000000')    GET ADDRESS OF STATS VARIABLE
         AGO   .BY1650
.BY1600 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR STATS
         AGO   .BY1650
.BY1610 ANOP
         DC    A(SPFB&NDX+X'80000000')  GET ADDRESS OF GENNED STATS
.BY1650 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMMDEL   8512-85095-85095-1208-00186-00186-00000-ISPFDYN
         MACRO
&LABEL   LMMDEL &DATAID=,               DATAID NAME                    *
               &MEMBER=,                VARIABLE FOR MEMBER            *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMMDEL               GLOBAL FOR LMMDEL LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMMDEL).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
.*
         AIF   ('&MEMBER' EQ '').CNT2
         AIF   ('&MEMBER'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMMDEL).BYP20
LMMDEL   DC    CL8'LMMDEL'              ISPF KEYWORD
&SPFLMMDEL SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP50
         AIF   ('&MEMBER'(1,1) NE '''').BYP50
SPFA&NDX DC    CL8&MEMBER               MEMBER NAME
.BYP50   ANOP
.*
.*
.*
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMMDEL                GET ADDRESS OF LMMDEL KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP1200
         AIF   ('&MEMBER'(1,1) EQ '''').BYP1210
         LA    0,&MEMBER                GET ADDRESS OF MEMBER VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR MEMBER
         AGO   .BYP1250
.BYP1210 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENNED MEMBER
.BYP1250 ANOP
.*
.*
         STM   14,0,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+8,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMMDEL)                GET ADDRESS OF LMMDEL KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID)               GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BY1200
         AIF   ('&MEMBER'(1,1) EQ '''').BY1210
         DC    A(&MEMBER+X'80000000')   GET ADDRESS OF MEMBER VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR MEMBER
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFA&NDX+X'80000000')  GET ADDRESS OF GENNED MEMBER
.BY1250 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMMFIND  8512-85095-85095-1208-00352-00352-00000-ISPFDYN
         MACRO
&LABEL   LMMFIND &DATAID=,              DATAID NAME                    *
               &MEMBER=,                VARIABLE FOR MEMBER            *
               &LOCK=,                  LOCK OPTION                    *
               &LRECL=,                 VARIABLE FOR LRECL             *
               &RECFM=,                 VARIABLE FOR RECFM             *
               &GROUP=,                 VARIABLE FOR GROUP             *
               &STATS=,                 VARIABLE FOR STATS             *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMMFIND              GLOBAL FOR LMMFIND LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMMFIND).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
.*
         AIF   ('&LOCK' EQ '').CNT1
         AIF   ('&LOCK'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&MEMBER' EQ '').CNT2
         AIF   ('&MEMBER'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&LRECL' EQ '').CNT3
         AIF   ('&LRECL'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&RECFM' EQ '').CNT4
         AIF   ('&RECFM'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&GROUP' EQ '').CNT5
         AIF   ('&GROUP'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AIF   ('&STATS' EQ '').CNT6
         AIF   ('&STATS'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMMFIND).BYP20
LMMFIND  DC    CL8'LMMFIND'             ISPF KEYWORD
&SPFLMMFIND SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
         AIF   ('&LOCK' EQ '').BYP40
         AIF   ('&LOCK'(1,1) NE '''').BYP40
SPFB&NDX DC    CL8&LOCK                 LOCK OPTION
.BYP40   ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP50
         AIF   ('&MEMBER'(1,1) NE '''').BYP50
SPFA&NDX DC    CL8&MEMBER               MEMBER NAME
.BYP50   ANOP
.*
.*
         AIF   ('&LRECL' EQ '').BYP60
         AIF   ('&LRECL'(1,1) NE '''').BYP60
SPFC&NDX DC    CL8&LRECL                LRECL VARIABLE NAME
.BYP60   ANOP
         AIF   ('&RECFM' EQ '').BYP70
         AIF   ('&RECFM'(1,1) NE '''').BYP70
SPFD&NDX DC    CL8&RECFM                RECFM VARIABLE NAME
.BYP70   ANOP
         AIF   ('&GROUP' EQ '').BYP80
         AIF   ('&GROUP'(1,1) NE '''').BYP80
SPFE&NDX DC    CL8&GROUP                GROUP VARIABLE NAME
.BYP80   ANOP
         AIF   ('&STATS' EQ '').BYP90
         AIF   ('&STATS'(1,1) NE '''').BYP90
SPFF&NDX DC    CL8&STATS                STATS OPTION
.BYP90   ANOP
.*
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMMFIND               GET ADDRESS OF LMMFIND KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP1200
         AIF   ('&MEMBER'(1,1) EQ '''').BYP1210
         LA    0,&MEMBER                GET ADDRESS OF MEMBER VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR MEMBER
         AGO   .BYP1250
.BYP1210 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENNED MEMBER
.BYP1250 ANOP
.*
.*
         AIF   ('&LOCK' EQ '').BYP1100
         AIF   ('&LOCK'(1,1) EQ '''').BYP1110
         LA    1,&LOCK                  GET ADDRESS OF &LOCK
         AGO   .BYP1150
.BYP1100 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR LOCK
         AGO   .BYP1150
.BYP1110 ANOP
         LA    1,SPFB&NDX               GENNED LOCK
.BYP1150 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&LRECL' EQ '').BYP1300
         AIF   ('&LRECL'(1,1) EQ '''').BYP1310
         LA    14,&LRECL                GET ADDRESS OF LRECL VARIABLE
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR LRECL
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENNED LRECL
.BYP1350 ANOP
.*
.*
         AIF   ('&RECFM' EQ '').BYP1400
         AIF   ('&RECFM'(1,1) EQ '''').BYP1410
         LA    15,&RECFM                GET ADDRESS OF RECFM VARIABLE
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR RECFM
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFD&NDX              GET ADDRESS OF GENNED RECFM
.BYP1450 ANOP
.*
.*
         AIF   ('&GROUP' EQ '').BYP1500
         AIF   ('&GROUP'(1,1) EQ '''').BYP1510
         LA    0,&GROUP                 GET ADDRESS OF GROUP VARIABLE
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR GROUP
         AGO   .BYP1550
.BYP1510 ANOP
         LA    0,SPFE&NDX               GET ADDRESS OF GENNED GROUP
.BYP1550 ANOP
.*
.*
         AIF   ('&STATS' EQ '').BYP1600
         AIF   ('&STATS'(1,1) EQ '''').BYP1610
         LA    1,&STATS                 GET ADDRESS OF STATS KEYWORD
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR STATS
         AGO   .BYP1650
.BYP1610 ANOP
         LA    1,SPFF&NDX               GET ADDRESS OF GENNED STATS
.BYP1650 ANOP
.*
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+28,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 8).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 8).BYPVARS
&SPFVARS SETA  8
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMMFIND)               GET ADDRESS OF LMMFIND KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID)               GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BY1200
         AIF   ('&MEMBER'(1,1) EQ '''').BY1210
         DC    A(&MEMBER)               GET ADDRESS OF MEMBER VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR MEMBER
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFA&NDX)              GET ADDRESS OF GENNED MEMBER
.BY1250 ANOP
.*
.*
         AIF   ('&LOCK' EQ '').BY1100
         AIF   ('&LOCK'(1,1) EQ '''').BY1110
         DC    A(&LOCK)                 GET ADDRESS OF &LOCK
         AGO   .BY1150
.BY1100 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR LOCK
         AGO   .BY1150
.BY1110 ANOP
         DC    A(SPFB&NDX)              GENNED LOCK
.BY1150 ANOP
.*
.*
         AIF   ('&LRECL' EQ '').BY1300
         AIF   ('&LRECL'(1,1) EQ '''').BY1310
         DC    A(&LRECL)                GET ADDRESS OF LRECL VARIABLE
         AGO   .BY1350
.BY1300 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR LRECL
         AGO   .BY1350
.BY1310 ANOP
         DC    A(SPFC&NDX)              GET ADDRESS OF GENNED LRECL
.BY1350 ANOP
.*
.*
         AIF   ('&RECFM' EQ '').BY1400
         AIF   ('&RECFM'(1,1) EQ '''').BY1410
         DC    A(&RECFM)                GET ADDRESS OF RECFM VARIABLE
         AGO   .BY1450
.BY1400 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR RECFM
         AGO   .BY1450
.BY1410 ANOP
         DC    A(SPFD&NDX)              GET ADDRESS OF GENNED RECFM
.BY1450 ANOP
.*
.*
         AIF   ('&GROUP' EQ '').BY1500
         AIF   ('&GROUP'(1,1) EQ '''').BY1510
         DC    A(&GROUP)                GET ADDRESS OF GROUP VARIABLE
         AGO   .BY1550
.BY1500 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR GROUP
         AGO   .BY1550
.BY1510 ANOP
         DC    A(SPFE&NDX)              GET ADDRESS OF GENNED GROUP
.BY1550 ANOP
.*
.*
         AIF   ('&STATS' EQ '').BY1600
         AIF   ('&STATS'(1,1) EQ '''').BY1610
         DC    A(&STATS+X'80000000')    GET ADDRESS OF STATS VARIABLE
         AGO   .BY1650
.BY1600 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR STATS
         AGO   .BY1650
.BY1610 ANOP
         DC    A(SPFF&NDX+X'80000000')  GET ADDRESS OF GENNED STATS
.BY1650 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMMLIST  8512-85095-85095-1208-00260-00260-00000-ISPFDYN
         MACRO
&LABEL   LMMLIST &DATAID=,              DATAID NAME                    *
               &OPTION=,                OPTION OF INPUT OR OUTPUT      *
               &MEMBER=,                VARIABLE FOR MEMBER            *
               &STATS=,                 VARIABLE FOR STATS             *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMMLIST              GLOBAL FOR LMMLIST LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMMLIST).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
.*
         AIF   ('&OPTION' EQ '').CNT1
         AIF   ('&OPTION'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&MEMBER' EQ '').CNT2
         AIF   ('&MEMBER'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&STATS' EQ '').CNT3
         AIF   ('&STATS'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMMLIST).BYP20
LMMLIST  DC    CL8'LMMLIST'             ISPF KEYWORD
&SPFLMMLIST SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
         AIF   ('&OPTION' EQ '').BYP40
         AIF   ('&OPTION'(1,1) NE '''').BYP40
SPFA&NDX DC    CL8&OPTION               OPTION TYPE
.BYP40   ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP50
         AIF   ('&MEMBER'(1,1) NE '''').BYP50
SPFB&NDX DC    CL8&MEMBER               MEMBER VARIABLE NAME
.BYP50   ANOP
.*
.*
         AIF   ('&STATS' EQ '').BYP60
         AIF   ('&STATS'(1,1) NE '''').BYP60
SPFC&NDX DC    CL8&STATS                STATS VARIABLE NAME
.BYP60   ANOP
.*
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMMLIST               GET ADDRESS OF LMMLIST KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         AIF   ('&OPTION' EQ '').BYP1100
         AIF   ('&OPTION'(1,1) EQ '''').BYP1110
         LA    0,&OPTION                GET ADDRESS OF &OPTION
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR OPTION
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFA&NDX               GENNED OPTION
.BYP1150 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP1200
         AIF   ('&MEMBER'(1,1) EQ '''').BYP1210
         LA    1,&MEMBER                GET ADDRESS OF MEMBER VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR MEMBER
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFB&NDX               GET ADDRESS OF GENNED MEMBER
.BYP1250 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&STATS' EQ '').BYP1300
         AIF   ('&STATS'(1,1) EQ '''').BYP1310
         LA    14,&STATS                GET ADDRESS OF STATS VARIABLE
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR STATS
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENNED STATS
.BYP1350 ANOP
.*
.*
         ST    14,&TEMP+16              STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+16,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 5).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 5).BYPVARS
&SPFVARS SETA  5
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMMLIST)               GET ADDRESS OF LMMLIST KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID)               GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
         AIF   ('&OPTION' EQ '').BY1100
         AIF   ('&OPTION'(1,1) EQ '''').BY1110
         DC    A(&OPTION)               GET ADDRESS OF &OPTION
         AGO   .BY1150
.BY1100 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR OPTION
         AGO   .BY1150
.BY1110 ANOP
         DC    A(SPFA&NDX)              GENNED OPTION
.BY1150 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BY1200
         AIF   ('&MEMBER'(1,1) EQ '''').BY1210
         DC    A(&MEMBER)               GET ADDRESS OF MEMBER VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR MEMBER
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFB&NDX)              GET ADDRESS OF GENNED MEMBER
.BY1250 ANOP
.*
.*
         AIF   ('&STATS' EQ '').BY1300
         AIF   ('&STATS'(1,1) EQ '''').BY1310
         DC    A(&STATS+X'80000000')    GET ADDRESS OF STATS VARIABLE
         AGO   .BY1350
.BY1300 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR STATS
         AGO   .BY1350
.BY1310 ANOP
         DC    A(SPFC&NDX+X'80000000')  GET ADDRESS OF GENNED STATS
.BY1350 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID OPTION - EXPECTED INPUT OR OUTPUT - FOUND ''*
               &OPTION'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMMREN   8512-85095-85095-1208-00218-00218-00000-ISPFDYN
         MACRO
&LABEL   LMMREN &DATAID=,               DATAID NAME                    *
               &MEMBER=,                VARIABLE FOR MEMBER            *
               &NEWNAME=,               LOCK OPTION                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMMREN               GLOBAL FOR LMMREN LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMMREN).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
.*
         AIF   ('&MEMBER' EQ '').CNT2
         AIF   ('&MEMBER'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&NEWNAME' EQ '').CNT6
         AIF   ('&NEWNAME'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMMREN).BYP20
LMMREN   DC    CL8'LMMREN'              ISPF KEYWORD
&SPFLMMREN SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP50
         AIF   ('&MEMBER'(1,1) NE '''').BYP50
SPFA&NDX DC    CL8&MEMBER               MEMBER NAME
.BYP50   ANOP
.*
.*
         AIF   ('&NEWNAME' EQ '').BYP90
         AIF   ('&NEWNAME'(1,1) NE '''').BYP90
SPFB&NDX DC    CL8&NEWNAME              NEWNAME OPTION
.BYP90   ANOP
.*
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMMREN                GET ADDRESS OF LMMREN KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP1200
         AIF   ('&MEMBER'(1,1) EQ '''').BYP1210
         LA    0,&MEMBER                GET ADDRESS OF MEMBER VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR MEMBER
         AGO   .BYP1250
.BYP1210 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENNED MEMBER
.BYP1250 ANOP
.*
.*
         AIF   ('&NEWNAME' EQ '').BYP1100
         AIF   ('&NEWNAME'(1,1) EQ '''').BYP1110
         LA    1,&NEWNAME               GET ADDRESS OF &NEWNAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR NEWNAME
         AGO   .BYP1150
.BYP1110 ANOP
         LA    1,SPFB&NDX               GENNED NEWNAME
.BYP1150 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMMREN)                GET ADDRESS OF LMMREN KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID)               GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BY1200
         AIF   ('&MEMBER'(1,1) EQ '''').BY1210
         DC    A(&MEMBER)               GET ADDRESS OF MEMBER VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR MEMBER
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFA&NDX)              GET ADDRESS OF GENNED MEMBER
.BY1250 ANOP
.*
.*
         AIF   ('&NEWNAME' EQ '').BY1600
         AIF   ('&NEWNAME'(1,1) EQ '''').BY1610
         DC    A(&NEWNAME+X'80000000')  GET ADDRESS OF NEWNAME VARIABLE
         AGO   .BY1650
.BY1600 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR NEWNAME
         AGO   .BY1650
.BY1610 ANOP
         DC    A(SPFB&NDX+X'80000000')  GET ADDRESS OF GENNED NEWNAME
.BY1650 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMMREP   8512-85095-85095-1208-00218-00218-00000-ISPFDYN
         MACRO
&LABEL   LMMREP &DATAID=,               DATAID NAME                    *
               &MEMBER=,                VARIABLE FOR MEMBER            *
               &STATS=,                 LOCK OPTION                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMMREP               GLOBAL FOR LMMREP LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMMREP).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
.*
         AIF   ('&MEMBER' EQ '').CNT2
         AIF   ('&MEMBER'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&STATS' EQ '').CNT6
         AIF   ('&STATS'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMMREP).BYP20
LMMREP   DC    CL8'LMMREP'              ISPF KEYWORD
&SPFLMMREP SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP50
         AIF   ('&MEMBER'(1,1) NE '''').BYP50
SPFA&NDX DC    CL8&MEMBER               MEMBER NAME
.BYP50   ANOP
.*
.*
         AIF   ('&STATS' EQ '').BYP90
         AIF   ('&STATS'(1,1) NE '''').BYP90
SPFB&NDX DC    CL8&STATS                STATS OPTION
.BYP90   ANOP
.*
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMMREP                GET ADDRESS OF LMMREP KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BYP1200
         AIF   ('&MEMBER'(1,1) EQ '''').BYP1210
         LA    0,&MEMBER                GET ADDRESS OF MEMBER VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR MEMBER
         AGO   .BYP1250
.BYP1210 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENNED MEMBER
.BYP1250 ANOP
.*
.*
         AIF   ('&STATS' EQ '').BYP1100
         AIF   ('&STATS'(1,1) EQ '''').BYP1110
         LA    1,&STATS                 GET ADDRESS OF &STATS
         AGO   .BYP1150
.BYP1100 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR STATS
         AGO   .BYP1150
.BYP1110 ANOP
         LA    1,SPFB&NDX               GENNED STATS
.BYP1150 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMMREP)                GET ADDRESS OF LMMREP KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID)               GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
         AIF   ('&MEMBER' EQ '').BY1200
         AIF   ('&MEMBER'(1,1) EQ '''').BY1210
         DC    A(&MEMBER)               GET ADDRESS OF MEMBER VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR MEMBER
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFA&NDX)              GET ADDRESS OF GENNED MEMBER
.BY1250 ANOP
.*
.*
         AIF   ('&STATS' EQ '').BY1600
         AIF   ('&STATS'(1,1) EQ '''').BY1610
         DC    A(&STATS+X'80000000')    GET ADDRESS OF STATS VARIABLE
         AGO   .BY1650
.BY1600 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR STATS
         AGO   .BY1650
.BY1610 ANOP
         DC    A(SPFB&NDX+X'80000000')  GET ADDRESS OF GENNED STATS
.BY1650 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMOPEN   8512-85095-85095-1208-00291-00291-00000-ISPFDYN
         MACRO
&LABEL   LMOPEN &DATAID=,               DATAID NAME                    *
               &OPTION=,                OPTION OF INPUT OR OUTPUT      *
               &LRECL=,                 VARIABLE FOR LRECL             *
               &RECFM=,                 VARIABLE FOR RECFM             *
               &ORG=,                   VARIABLE FOR DSORG             *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMOPEN               GLOBAL FOR LMOPEN LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMOPEN).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
         AIF   ('&OPTION' EQ '').CNT1
         AIF   ('&OPTION'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&LRECL' EQ '').CNT2
         AIF   ('&LRECL'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&RECFM' EQ '').CNT3
         AIF   ('&RECFM'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&ORG' EQ '').CNT4
         AIF   ('&ORG'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMOPEN).BYP20
LMOPEN   DC    CL8'LMOPEN'              ISPF KEYWORD
&SPFLMOPEN SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
         AIF   ('&OPTION' EQ '').BYP40
         AIF   ('&OPTION'(1,1) NE '''').BYP40
SPFX&NDX DC    CL8&OPTION               OPTION KEYWORD
.BYP40   ANOP
.*
.*
         AIF   ('&LRECL' EQ '').BYP50
         AIF   ('&LRECL'(1,1) NE '''').BYP50
SPFB&NDX DC    CL8&LRECL                LRECL VARIABLE NAME
.BYP50   ANOP
.*
.*
         AIF   ('&RECFM' EQ '').BYP60
         AIF   ('&RECFM'(1,1) NE '''').BYP60
SPFC&NDX DC    CL8&RECFM                RECFM VARIABLE NAME
.BYP60   ANOP
.*
.*
         AIF   ('&ORG' EQ '').BYP70
         AIF   ('&ORG'(1,1) NE '''').BYP70
SPFD&NDX DC    CL8&ORG                  ORG VARIABLE NAME
.BYP70   ANOP
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMOPEN                GET ADDRESS OF LMOPEN KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         AIF   ('&OPTION' EQ '').BYP1100
         AIF   ('&OPTION'(1,1) EQ '''').BYP1110
         LA    0,&OPTION                GET ADDRESS OF OPTION
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR OPTION
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFX&NDX               GET ADDRESS OF GENNED OPTION
.BYP1150 ANOP
.*
.*
         AIF   ('&LRECL' EQ '').BYP1200
         AIF   ('&LRECL'(1,1) EQ '''').BYP1210
         LA    1,&LRECL                 GET ADDRESS OF LRECL VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR LRECL
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFB&NDX               GET ADDRESS OF GENNED LRECL
.BYP1250 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&RECFM' EQ '').BYP1300
         AIF   ('&RECFM'(1,1) EQ '''').BYP1310
         LA    14,&RECFM                GET ADDRESS OF RECFM VARIABLE
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR RECFM
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENNED RECFM
.BYP1350 ANOP
.*
.*
         AIF   ('&ORG' EQ '').BYP1400
         AIF   ('&ORG'(1,1) EQ '''').BYP1410
         LA    15,&ORG                  GET ADDRESS OF ORG VARIABLE
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR ORG
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFD&NDX              GET ADDRESS OF GENNED ORG
.BYP1450 ANOP
.*
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMOPEN)                GET ADDRESS OF LMOPEN KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID)               GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
         AIF   ('&OPTION' EQ '').BY1100
         AIF   ('&OPTION'(1,1) EQ '''').BY1110
         DC    A(&OPTION)               GET ADDRESS OF OPTION
         AGO   .BY1150
.BY1100 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR OPTION
         AGO   .BY1150
.BY1110 ANOP
         DC    A(SPFX&NDX)              GET ADDRESS OF GENNED OPTION
.BY1150 ANOP
.*
.*
         AIF   ('&LRECL' EQ '').BY1200
         AIF   ('&LRECL'(1,1) EQ '''').BY1210
         DC    A(&LRECL)                GET ADDRESS OF LRECL VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR LRECL
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFB&NDX)              GET ADDRESS OF GENNED LRECL
.BY1250 ANOP
.*
.*
         AIF   ('&RECFM' EQ '').BY1300
         AIF   ('&RECFM'(1,1) EQ '''').BY1310
         DC    A(&RECFM)                GET ADDRESS OF RECFM VARIABLE
         AGO   .BY1350
.BY1300 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR RECFM
         AGO   .BY1350
.BY1310 ANOP
         DC    A(SPFC&NDX)              GET ADDRESS OF GENNED RECFM
.BY1350 ANOP
.*
.*
         AIF   ('&ORG' EQ '').BY1400
         AIF   ('&ORG'(1,1) EQ '''').BY1410
         DC    A(&ORG+X'80000000')      GET ADDRESS OF ORG VARIABLE
         AGO   .BY1450
.BY1400 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR ORG
         AGO   .BY1450
.BY1410 ANOP
         DC    A(SPFD&NDX+X'80000000')  GET ADDRESS OF GENNED ORG
.BY1450 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID OPTION - EXPECTED INPUT OR OUTPUT - FOUND ''*
               &OPTION'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMPUT    8512-85095-85095-1208-00289-00289-00000-ISPFDYN
         MACRO
&LABEL   LMPUT &DATAID=,                DATAID NAME                    *
               &MODE=,                  MODE                           *
               &DATALOC=,                                              *
               &DATALEN=,                                              *
               &NOBSCAN=,                                              *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMPUT                GLOBAL FOR LMPUT LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMPUT).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
         AIF   ('&MODE' EQ '').CNT2
         AIF   ('&MODE'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&DATALOC' EQ '').CNT3
         AIF   ('&DATALOC'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&DATALEN' EQ '').CNT4
         AIF   (T'&DATALEN EQ 'N').GENLIT
.CNT4    ANOP
         AIF   ('&NOBSCAN' EQ '').CNT5
         AIF   ('&NOBSCAN'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMPUT).BYP20
LMPUT    DC    CL8'LMPUT'               ISPF KEYWORD
&SPFLMPUT SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
         AIF   ('&MODE' EQ '').BYP40
         AIF   ('&MODE'(1,1) NE '''').BYP40
SPFA&NDX DC    CL8&MODE                 MODE TYPE
.BYP40   ANOP
.*
.*
         AIF   ('&DATALOC' EQ '').BYP50
         AIF   ('&DATALOC'(1,1) NE '''').BYP50
SPFB&NDX DC    CL8&DATALOC              DATALOC VARIABLE NAME
.BYP50   ANOP
.*
.*
         AIF   ('&DATALEN' EQ '').BYP60
         AIF   (T'&DATALEN NE 'N').BYP60
SPFC&NDX DC    F'&DATALEN'              DATALEN VALUE
.BYP60   ANOP
.*
.*
         AIF   ('&NOBSCAN' EQ '').BYP70
         AIF   ('&NOBSCAN'(1,1) NE '''').BYP70
SPFD&NDX DC    CL8&NOBSCAN              NOSCAN KEYWORD
.BYP70   ANOP
.*
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMPUT                 GET ADDRESS OF LMPUT KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         AIF   ('&MODE' EQ '').BYP1100
         AIF   ('&MODE'(1,1) EQ '''').BYP1110
         LA    0,&MODE                  GET ADDRESS OF &MODE
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR MODE
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFA&NDX               GET GENNED MODE
.BYP1150 ANOP
.*
.*
         AIF   ('&DATALOC' EQ '').BYP1200
         AIF   ('&DATALOC'(1,1) EQ '''').BYP1210
         LA    1,&DATALOC               GET ADDRESS OF DATALOC VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR DATALOC
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFB&NDX               GET ADDRESS OF GENNED DATALOC
.BYP1250 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&DATALEN' EQ '').BYP1300
         AIF   (T'&DATALEN EQ 'N').BYP1310
         LA    14,&DATALEN              GET ADDRESS OF DATALEN
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR DATALEN
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENNED DATALEN
.BYP1350 ANOP
.*
.*
         AIF   ('&NOBSCAN' EQ '').BYP1400
         AIF   ('&NOBSCAN'(1,1) EQ '''').BYP1410
         LA    15,&NOBSCAN              GET ADDRESS OF NOBSCAN
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR NOBSCAN
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFD&NDX              GET ADDRESS OF GENNED NOBSCAN
.BYP1450 ANOP
.*
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMPUT)                 GET ADDRESS OF LMPUT KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID)               GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
         AIF   ('&MODE' EQ '').BY1100
         AIF   ('&MODE'(1,1) EQ '''').BY1110
         DC    A(&MODE)                 GET ADDRESS OF &MODE
         AGO   .BY1150
.BY1100 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR MODE
         AGO   .BY1150
.BY1110 ANOP
         DC    A(SPFA&NDX)              GET GENNED MODE
.BY1150 ANOP
.*
.*
         AIF   ('&DATALOC' EQ '').BY1200
         AIF   ('&DATALOC'(1,1) EQ '''').BY1210
         DC    A(&DATALOC)              GET ADDRESS OF DATALOC VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR DATALOC
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFB&NDX)              GET ADDRESS OF GENNED DATALOC
.BY1250 ANOP
.*
.*
         AIF   ('&DATALEN' EQ '').BY1300
         AIF   (T'&DATALEN EQ 'N').BY1310
         DC    A(&DATALEN)              GET ADDRESS OF DATALEN
         AGO   .BY1350
.BY1300 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR DATALEN
         AGO   .BY1350
.BY1310 ANOP
         DC    A(SPFC&NDX)              GET ADDRESS OF GENNED DATALEN
.BY1350 ANOP
.*
.*
         AIF   ('&NOBSCAN' EQ '').BY1400
         AIF   ('&NOBSCAN'(1,1) EQ '''').BY1410
         DC    A(&NOBSCAN+X'80000000')  GET ADDRESS OF NOBSCAN VARIABLE
         AGO   .BY1450
.BY1400 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR NOBSCAN
         AGO   .BY1450
.BY1410 ANOP
         DC    A(SPFD&NDX+X'80000000')  GET ADDRESS OF GENNED NOBSCAN
.BY1450 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LMQUERY  8512-85095-85095-1208-00514-00514-00000-ISPFDYN
         MACRO
&LABEL   LMQUERY &DATAID=,              DATAID NAME                    *
               &PROJECT=,               PROJECT NAME                   *
               &GROUP1=,                GROUP 1 NAME                   *
               &GROUP2=,                GROUP 2 NAME                   *
               &GROUP3=,                GROUP 3 NAME                   *
               &GROUP4=,                GROUP 4 NAME                   *
               &TYPE=,                  TYPE                           *
               &DATASET=,               DATASET NAME                   *
               &DDNAME=,                DDNAME                         *
               &VOLUME=,                VOL SER                        *
               &ENQ=,                   ENQ TYPE                       *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLMQUERY              GLOBAL FOR LMQUERY LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&DATAID' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLMQUERY).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&DATAID'(1,1) EQ '''').GENLIT
         AIF   ('&PROJECT' EQ '').CNT1
         AIF   ('&PROJECT'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&GROUP1' EQ '').CNT2
         AIF   ('&GROUP1'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&GROUP2' EQ '').CNT3
         AIF   ('&GROUP2'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&GROUP3' EQ '').CNT4
         AIF   ('&GROUP3'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&GROUP4' EQ '').CNT5
         AIF   ('&GROUP4'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AIF   ('&TYPE' EQ '').CNT6
         AIF   ('&TYPE'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AIF   ('&DATASET' EQ '').CNT7
         AIF   ('&DATASET'(1,1) EQ '''').GENLIT
.CNT7    ANOP
         AIF   ('&DDNAME' EQ '').CNT8
         AIF   ('&DDNAME'(1,1) EQ '''').GENLIT
.CNT8    ANOP
         AIF   ('&VOLUME' EQ '').CNT9
         AIF   ('&VOLUME'(1,1) EQ '''').GENLIT
.CNT9    ANOP
         AIF   ('&ENQ' EQ '').CNT11
         AIF   ('&ENQ'(1,1) EQ '''').GENLIT
.CNT11   ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFLMQUERY).BYP20
LMQUERY  DC    CL8'LMQUERY'             ISPF KEYWORD
&SPFLMQUERY SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&DATAID' EQ '').BYP30
         AIF   ('&DATAID'(1,1) NE '''').BYP30
SPFZ&NDX DC    CL8&DATAID               GENERATED DATAID NAME
.BYP30   ANOP
.*
.*
         AIF   ('&PROJECT' EQ '').BYP40
         AIF   ('&PROJECT'(1,1) NE '''').BYP40
SPFA&NDX DC    CL8&PROJECT              PROJECT VARIABLE NAME
.BYP40   ANOP
.*
.*
         AIF   ('&GROUP1' EQ '').BYP50
         AIF   ('&GROUP1'(1,1) NE '''').BYP50
SPFB&NDX DC    CL8&GROUP1               GROUP1 VARIABLE NAME
.BYP50   ANOP
.*
.*
         AIF   ('&GROUP2' EQ '').BYP60
         AIF   ('&GROUP2'(1,1) NE '''').BYP60
SPFC&NDX DC    CL8&GROUP2               GROUP2 VARIABLE NAME
.BYP60   ANOP
.*
.*
         AIF   ('&GROUP3' EQ '').BYP70
         AIF   ('&GROUP3'(1,1) NE '''').BYP70
SPFD&NDX DC    CL8&GROUP3               GROUP3 VARIABLE NAME
.BYP70   ANOP
.*
.*
         AIF   ('&GROUP4' EQ '').BYP80
         AIF   ('&GROUP4'(1,1) NE '''').BYP80
SPFE&NDX DC    CL8&GROUP4               USERE VARIABLE NAME
.BYP80   ANOP
.*
.*
         AIF   ('&TYPE' EQ '').BYP90
         AIF   ('&TYPE'(1,1) NE '''').BYP90
SPFF&NDX DC    CL8&TYPE                 TYPE VARIABLE NAME
.BYP90   ANOP
.*
.*
         AIF   ('&DATASET' EQ '').BYP100
         AIF   ('&DATASET'(1,1) NE '''').BYP100
SPFG&NDX DC    CL8&DATASET              DATASET VARIABLE NAME
.BYP100  ANOP
.*
.*
         AIF   ('&DDNAME' EQ '').BYP110
         AIF   ('&DDNAME'(1,1) NE '''').BYP110
SPFH&NDX DC    CL8&DDNAME               DDNAME VARIABLE NAME
.BYP110  ANOP
.*
.*
         AIF   ('&VOLUME' EQ '').BYP120
         AIF   ('&VOLUME'(1,1) NE '''').BYP120
SPFI&NDX DC    CL8&VOLUME               VOLUME VARIABLE NAME
.BYP120  ANOP
.*
.*
         AIF   ('&ENQ' EQ '').BYP140
         AIF   ('&ENQ'(1,1) NE '''').BYP140
SPFK&NDX DC    CL8&ENQ                  ENQ VARIABLE NAME
.BYP140  ANOP
.*
.*
.*
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,LMQUERY               GET ADDRESS OF LMQUERY KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BYP1010
         LA    15,&DATAID               GET ADDRESS OF DATAID NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFZ&NDX              GET ADDRESS OF GENERATED DATAID
.BYP1050 ANOP
.*
.*
         AIF   ('&PROJECT' EQ '').BYP1100
         AIF   ('&PROJECT'(1,1) EQ '''').BYP1110
         LA    0,&PROJECT               GET ADDRESS OF PROJECT VARIABLE
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR PROJECT
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENNED PROJECT
.BYP1150 ANOP
.*
.*
         AIF   ('&GROUP1' EQ '').BYP1200
         AIF   ('&GROUP1'(1,1) EQ '''').BYP1210
         LA    1,&GROUP1                GET ADDRESS OF GROUP1 VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR GROUP1
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFB&NDX               GET ADDRESS OF GENNED GROUP1
.BYP1250 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&GROUP2' EQ '').BYP1300
         AIF   ('&GROUP2'(1,1) EQ '''').BYP1310
         LA    14,&GROUP2               GET ADDRESS OF GROUP2 VARIABLE
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR GROUP2
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENNED GROUP2
.BYP1350 ANOP
.*
.*
         AIF   ('&GROUP3' EQ '').BYP1400
         AIF   ('&GROUP3'(1,1) EQ '''').BYP1410
         LA    15,&GROUP3               GET ADDRESS OF GROUP3 VARIABLE
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR GROUP3
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFD&NDX              GET ADDRESS OF GENNED GROUP3
.BYP1450 ANOP
.*
.*
         AIF   ('&GROUP4' EQ '').BYP1500
         AIF   ('&GROUP4'(1,1) EQ '''').BYP1510
         LA    0,&GROUP4                GET ADDRESS OF GROUP4 VARIABLE
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR GROUP4
         AGO   .BYP1550
.BYP1510 ANOP
         LA    0,SPFE&NDX               GET ADDRESS OF GENNED GROUP4
.BYP1550 ANOP
.*
.*
         AIF   ('&TYPE' EQ '').BYP1600
         AIF   ('&TYPE'(1,1) EQ '''').BYP1610
         LA    1,&TYPE                  ADDRESS OF TYPE VARIABLE
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR TYPE
         AGO   .BYP1650
.BYP1610 ANOP
         LA    1,SPFF&NDX               GET ADDRESS OF GENNED TYPE
.BYP1650 ANOP
.*
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&DATASET' EQ '').BYP1700
         AIF   ('&DATASET'(1,1) EQ '''').BYP1710
         LA    14,&DATASET              ADDRESS OF DATASET VARIABLE
         AGO   .BYP1750
.BYP1700 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR DATASET
         AGO   .BYP1750
.BYP1710 ANOP
         LA    14,SPFG&NDX              GET ADDRESS OF GENNED DATASET
.BYP1750 ANOP
.*
.*
         AIF   ('&DDNAME' EQ '').BYP1800
         AIF   ('&DDNAME'(1,1) EQ '''').BYP1810
         LA    15,&DDNAME               ADDRESS OF DDNAME VARIABLE
         AGO   .BYP1850
.BYP1800 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR DDNAME
         AGO   .BYP1850
.BYP1810 ANOP
         LA    15,SPFH&NDX              GET ADDRESS OF GENNED DDNAME
.BYP1850 ANOP
.*
.*
         AIF   ('&VOLUME' EQ '').BYP1900
         AIF   ('&VOLUME'(1,1) EQ '''').BYP1910
         LA    0,&VOLUME                ADDRESS OF VOLUME VARIABLE
         AGO   .BYP1950
.BYP1900 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR VOLUME
         AGO   .BYP1950
.BYP1910 ANOP
         LA    0,SPFI&NDX               GET ADDRESS OF GENNED VOLUME
.BYP1950 ANOP
.*
.*
         LA    1,SPFNULLC               GET DUMMY PARM 1
         STM   14,1,&TEMP+32            STORE PARAMETERS INTO LIST
.*
.*
.*
         LA    14,SPFNULLC              GET DUMMY PARM 2
         LA    15,SPFNULLC              GET DUMMY PARM 3
         LA    0,SPFNULLC               GET DUMMY PARM 4
.*
.*
         AIF   ('&ENQ' EQ '').BYP2100
         AIF   ('&ENQ'(1,1) EQ '''').BYP2110
         LA    1,&ENQ                   ADDRESS OF ENQ VARIABLE
         AGO   .BYP2150
.BYP2100 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ENQ
         AGO   .BYP2150
.BYP2110 ANOP
         LA    1,SPFK&NDX               GET ADDRESS OF GENNED ENQ
.BYP2150 ANOP
.*
.*
         STM   14,1,&TEMP+48            STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+60,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 16).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 16).BYPVARS
&SPFVARS SETA  16
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(LMQUERY)               GET ADDRESS OF LMQUERY KEYWORD
.*
.*
         AIF   ('&DATAID'(1,1) EQ '''').BY1010
         DC    A(&DATAID)               GET ADDRESS OF DATAID NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFZ&NDX)              GET ADDRESS OF GENERATED DATAID
.BY1050 ANOP
.*
.*
         AIF   ('&PROJECT' EQ '').BY1100
         AIF   ('&PROJECT'(1,1) EQ '''').BY1110
         DC    A(&PROJECT)              GET ADDRESS OF PROJECT VARIABLE
         AGO   .BY1150
.BY1100 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR PROJECT
         AGO   .BY1150
.BY1110 ANOP
         DC    A(SPFA&NDX)              GET ADDRESS OF GENNED PROJECT
.BY1150 ANOP
.*
.*
         AIF   ('&GROUP1' EQ '').BY1200
         AIF   ('&GROUP1'(1,1) EQ '''').BY1210
         DC    A(&GROUP1)               GET ADDRESS OF GROUP1 VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR GROUP1
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFB&NDX)              GET ADDRESS OF GENNED GROUP1
.BY1250 ANOP
.*
.*
         AIF   ('&GROUP2' EQ '').BY1300
         AIF   ('&GROUP2'(1,1) EQ '''').BY1310
         DC    A(&GROUP2)               GET ADDRESS OF GROUP2 VARIABLE
         AGO   .BY1350
.BY1300 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR GROUP2
         AGO   .BY1350
.BY1310 ANOP
         DC    A(SPFC&NDX)              GET ADDRESS OF GENNED GROUP2
.BY1350 ANOP
.*
.*
         AIF   ('&GROUP3' EQ '').BY1400
         AIF   ('&GROUP3'(1,1) EQ '''').BY1410
         DC    A(&GROUP3)               GET ADDRESS OF GROUP3 VARIABLE
         AGO   .BY1450
.BY1400 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR GROUP3
         AGO   .BY1450
.BY1410 ANOP
         DC    A(SPFD&NDX)              GET ADDRESS OF GENNED GROUP3
.BY1450 ANOP
.*
.*
         AIF   ('&GROUP4' EQ '').BY1500
         AIF   ('&GROUP4'(1,1) EQ '''').BY1510
         DC    A(&GROUP4)               GET ADDRESS OF GROUP4 VARIABLE
         AGO   .BY1550
.BY1500 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR GROUP4
         AGO   .BY1550
.BY1510 ANOP
         DC    A(SPFE&NDX)              GET ADDRESS OF GENNED GROUP4
.BY1550 ANOP
.*
.*
         AIF   ('&TYPE' EQ '').BY1600
         AIF   ('&TYPE'(1,1) EQ '''').BY1610
         DC    A(&TYPE)                 ADDRESS OF TYPE VARIABLE
         AGO   .BY1650
.BY1600 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR TYPE
         AGO   .BY1650
.BY1610 ANOP
         DC    A(SPFF&NDX)              GET ADDRESS OF GENNED TYPE
.BY1650 ANOP
.*
.*
         AIF   ('&DATASET' EQ '').BY1700
         AIF   ('&DATASET'(1,1) EQ '''').BY1710
         DC    A(&DATASET)              ADDRESS OF DATASET VARIABLE
         AGO   .BY1750
.BY1700 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR DATASET
         AGO   .BY1750
.BY1710 ANOP
         DC    A(SPFG&NDX)              GET ADDRESS OF GENNED DATASET
.BY1750 ANOP
.*
.*
         AIF   ('&DDNAME' EQ '').BY1800
         AIF   ('&DDNAME'(1,1) EQ '''').BY1810
         DC    A(&DDNAME)               ADDRESS OF DDNAME VARIABLE
         AGO   .BY1850
.BY1800 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR DDNAME
         AGO   .BY1850
.BY1810 ANOP
         DC    A(SPFH&NDX)              GET ADDRESS OF GENNED DDNAME
.BY1850 ANOP
.*
.*
         AIF   ('&VOLUME' EQ '').BY1900
         AIF   ('&VOLUME'(1,1) EQ '''').BY1910
         DC    A(&VOLUME)               ADDRESS OF VOLUME VARIABLE
         AGO   .BY1950
.BY1900 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR VOLUME
         AGO   .BY1950
.BY1910 ANOP
         DC    A(SPFI&NDX)              GET ADDRESS OF GENNED VOLUME
.BY1950 ANOP
.*
.*
         DC    A(SPFNULLC)              DUMMY PARM 1
         DC    A(SPFNULLC)              DUMMY PARM 2
         DC    A(SPFNULLC)              DUMMY PARM 3
         DC    A(SPFNULLC)              DUMMY PARM 4
.*
.*
         AIF   ('&ENQ' EQ '').BY2100
         AIF   ('&ENQ'(1,1) EQ '''').BY2110
         DC    A(&ENQ+X'80000000')      ADDRESS OF ENQ VARIABLE
         AGO   .BY2150
.BY2100 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR ENQ
         AGO   .BY2150
.BY2110 ANOP
         DC    A(SPFK&NDX+X'80000000')  GET ADDRESS OF GENNED ENQ
.BY2150 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'DATAID NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=LOG      8512-85095-85095-1208-00136-00136-00000-ISPFDYN
         MACRO
&NAME    LOG   &P1,&MSG=,               MEMBER NAME                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFLOG,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @LOG &P1,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P1' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&MSG' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFLOG).GENLIT
         AIF   ('&MSG' EQ '').CNT1
         AIF   ('&MSG'(1,1) EQ '''').GENLIT
.CNT1    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFLOG).BYP20
LOG      DC    CL8'LOG'                 ISPF KEYWORD
&SPFLOG SETB   1
.BYP20   ANOP
         AIF   ('&MSG' EQ '').BYP40
         AIF   ('&MSG'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&MSG                  GENERATED MEMBER NAME
.BYP40   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,LOG                   GET ADDRESS OF LOG KEYWORD
         AIF   ('&MSG' EQ '').BYP100
         AIF   ('&MSG'(1,1) EQ '''').BYP110
         LA    15,&MSG                  GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFS&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         STM   14,15,&TEMP              STORE PARAMETERS
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(LOG)                   BROWSE LITERAL
         AIF   ('&MSG' EQ '').BYP200
         AIF   ('&MSG'(1,1) EQ '''').BYP210
         DC    A(&MSG+X'80000000')      ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFS&NDX+X'80000000')  ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR MEMBER
.BYP220  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'MSG NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=OD       8512-86097-86097-1148-00020-00020-00000-ISPFDYN
         MACRO
         OD    &USRNAME                                       27001.
         COPY  STRCGBLS
         LCLB  &TDLGEND           TDL_GENNED                  27005.
         LCLB  &FINREQD           FIN_LABEL_REQD              27007.
         LCLC  &INFO              INFO                        27010.
         STRCTRAC  OD                                         27012.
         AIF   (&STRCNST GT &STRCNSL).M044                    27014.
         STRCVERF  DO,&USRNAME                                27016.
         AIF   (&STRCERR).FIN                                 27026.
&INFO    SETC  '&STRCINF(&STRCNST)'                           27030.
&TDLGEND SETB  ('&INFO'(5,1) EQ '1')                          27031.
&FINREQD SETB  ('&INFO'(8,1) EQ '1')                          27032.
         AIF   (&TDLGEND).M038                                27033.
         STRCTDL
         AGO   .M044                                          27038.
.M038    AIF   (NOT &FINREQD).M044                            27039.
$&STRCBL#(&STRCNST)FIN  DS    0H
.M044    STRCPOP
.FIN     MEND
./ ADD NAME=ONEND    8512-86097-86097-1148-00004-00004-00000-ISPFDYN
         MACRO
         ONEND  &USRNAME
         ATEND  &USRNAME
         MEND
./ ADD NAME=ONEXIT   8512-86097-86097-1148-00036-00036-00000-ISPFDYN
         MACRO
         ONEXIT  &USRNAME
         COPY  STRCGBLS
         LCLB  &ONGEND            ONEXIT_GENNED               25009.
         LCLB  &TDLGEND           TDL_GENNED                  25011.
         LCLB  &FINREQD           FIN_LABEL_REQD              25014.
         LCLC  &INFO              INFO                        25017.
         STRCTRAC  ONEXIT                                     25019.
         AIF   (&STRCNST GT &STRCNSL).FIN                     25021.
         STRCVERF  DO,&USRNAME                                25025.
         AIF   (&STRCERR).FIN                                 25030.
&INFO    SETC  '&STRCINF(&STRCNST)'                           25034.
&ONGEND  SETB  ('&INFO'(7,1) EQ '1')                          25035.
         AIF   (NOT &ONGEND).M041                             25037.
         MNOTE 8,' STRC2501 MORE THAN ONE "ONEXIT" IN BLOCK'  25039.
         MEXIT
.M041    AIF   (&STRCXIT(&STRCNST)).M046                      25042.
         MNOTE 8,' STRC2502 NO EXIT FOR THIS "DO"'            25044.
         MEXIT
.M046    ANOP
&FINREQD SETB  ('&INFO'(8,1) EQ '1')                          25047.
&STRCPFX SETC  '$&STRCBL#(&STRCNST)'                          25049.
&TDLGEND SETB  ('&INFO'(5,1) EQ '1')                          25050.
         AIF   (&TDLGEND).M059                                25052.
         STRCTDL
         AIF   (NOT &STRCTFT).M063                            25055.
         B     &STRCPFX.END
&STRCEND(&STRCNST)  SETB  1                                   25057.1
         AGO   .M063                                          25059.
.M059    B     &STRCPFX.FIN
&FINREQD SETB  1                                              25061.
.M063    ANOP
&STRCPFX.XIT  DS    0H
&STRCXIT(&STRCNST)  SETB  0                                   25065.
&STRCINF(&STRCNST)  SETC  '&INFO'(1,4)'1'.'&INFO'(6,1)'1&FINREQD'
.FIN     MEND
./ ADD NAME=OUTSECT  8605-84053-84053-1052-00025-00025-00000-ISPFDYN
         MACRO
&N       OUTSECT
         GBLC  &EQC,&RCC,&SAVEC
.*
         L     &EQC.15,&RCC            RETRIEVE RETURN CODE
         L     &EQC.13,4(&EQC.13)      POINT TO CALLER'S SAVEAREA
         ST    &EQC.15,16(&EQC.13)     STORE IN REG 15 SLOT
.*
         AIF   ('&SAVEC' NE 'DYNAM').T1
.*
.* FREE DYNAMIC SAVE AREA
.*
***
*** FREEMAIN ISSUED FOR DYNAMICALLY OBTAINED SAVEAREA.
***
         L     &EQC.1,8(&EQC.13)       FREEMAIN ADDR FROM LSA PTR
         LA    &EQC.0,72               LENGTH VALUE TO R0
         FREEMAIN  R,LV=(&EQC.0),A=(&EQC.1)
         SPACE 2
.T1      ANOP
         LM    &EQC.14,&EQC.12,12(&EQC.13)   RESTORE CALLER'S REGS
         BR    &EQC.14                       RETURN
         SPACE 2
&RCC     DC    F'0'                    RETURN CODE
         MEND
./ ADD NAME=OUTSUB   8605-83363-84053-1048-00009-00009-00000-ISPFDYN
         MACRO
         OUTSUB
         GBLC  &GLBL,&LREG
         SPACE
&GLBL.X  EQU   *
         L     &LREG,&GLBL.SV        RETRIEVE LINK REG
         BR    &LREG                 RETURN
         SPACE 3
         MEND
./ ADD NAME=PROC     8512-86097-86097-1148-00670-00670-00000-ISPFDYN
         MACRO
&USRNAME PROC  &LINKAGE=,&ID=,&BASE=,&WORK=,&SAVE=,&DEBUG=,   81001.   *
               &EXIT=,&DSECT=
         COPY  STRCGBLS
         LCLB  &PROC1             FIRST_PROC                  81010.
         LCLB  &FRKNOWN           FIRST_VALUE_KNOWN           81012.
         LCLB  &OSLINK            OS_LINKAGE                  81014.
         LCLB  &SPECPFX           SPECIAL_PREFIX              81016.
         LCLB  &USING13           USING13                     81018.
         LCLB  &MULTIBS           MULTIBASE                   81019.
         LCLB  &WORKUSD           WORKREG_USED                81021.
         LCLC  &COMMA2            COMMA2                      81024.
         LCLC  &MULT              MULT                        81024.
         LCLC  &FIRST,&LAST       FIRST, LAST                 81027.
         LCLC  &LABEL             LABEL                       81028.
         LCLC  &LOCPTR            LOCAL_POINTER               81029.
         LCLC  &OSPTR             OS_POINTER                  81029.
         LCLC  &PVDEBUG           PREVIOUS_DEBUG_VECTOR       81031.
         LCLC  &IDBYTE            PROC_ID_BYTE                81033.
         LCLC  &SVLENG            SAVE_LENGTH                 81035.
         LCLC  &SVTYPE            SAVE_TYPE                   81037.
         LCLC  &SAVEREG           SAVEREG                     81039.
         LCLC  &WORKREG           WORKREG                     81041.
         LCLA  &OFFSET            OFFSET                      81043.
         LCLA  &OFFSET0           OFFSET_TO_GPR0              81045.
         LCLA  &SAF,&SAL          SAF, SAL                    81046.
         LCLB  &GLOBAL            GLOBAL                      81173.
         LCLB  &STVALUE           SAVETRACE_VALUE             81176.
         LCLB  &STCHECK           SAVETRACE_CHECK             81178.
         LCLA  &I                 I      81165. 81401. 81518. 81948.
.*                                       81890. 81595.1       81966.
         LCLC  &SECT              SECT                        81350.
         LCLC  &QUOTE             QUOTE                       81351.
         LCLC  &TARGET            TARGET                      81352.
         LCLA  &LENGTH            LENGTH                      81354.
         LCLB  &INLINE            INLINE_SAVEAREA             81614.
         LCLC  &BASEREG           BASEREG                     81617.
         LCLC  &X                 X                           81763.
         LCLC  &FWDPTR            FWD_PTR                     81836.
         LCLB  &PCTWVEC           PCT_GENNED_WITH_VECTOR      81867.
         LCLC  &SPOT              COUNT_SPOT                  81869.
         LCLA  &J                 J            81595.1 81890. 81966.
         LCLB  &BIT               MACRO TEMPORARY
         STRCTRAC  PROC                                       81051.
&USRNAME STRCPUSH  TYPEVAL=PROC                               81053.
         AIF   (&STRCERR).FIN                                 81057.
&LABEL   SETC  '&USRNAME'                                     81061.
.*       CALL  PROC_SCAN_OPTIONS                              81063.
&OSLINK  SETB  ('&LINKAGE(1)' NE '')                          81114.
         AIF   ('&LINKAGE(1)' EQ 'OS' OR '&LINKAGE(1)' EQ '').M119
         MNOTE 8,' STRC8101 LINKAGE=&LINKAGE(1) INVALID--"OS" ASSUMED'
.M119    AIF   ('&LINKAGE(2)' EQ 'CSECT' OR '&LINKAGE(2)' EQ '').M123
         MNOTE 8,' STRC8102 SECOND LINKAGE OPERAND IGNORED'   81122.
.M123    ANOP
&WORKREG SETC  '&WORK'                                        81124.
         AIF   ('&WORK' NE 'NONE' AND '&WORK' NE '').M135     81125.
         AIF   (&OSLINK).M131                                 81129.
&WORKREG SETC  '1'                                            81133.
         AGO   .M135                                          81134.
.M131    ANOP
&WORKREG SETC  '2'                                            81131.
.M135    AIF   ('&EXIT' EQ '').M1363                          81136.
&STRCXSV SETC  '&EXIT'                                        81136.2
.M1363   ANOP
&PROC1   SETB  (NOT &STRCNFP)                                 81138.
&STRCNFP SETB  1                                              81139.
.*       CALL  PROC_DEBUG_SET                                 81144.
&GLOBAL  SETB  0                                              81182.
&PVDEBUG SETC '&STRCDBN&STRCDPN&STRCDLB&STRCDBC&STRCDPC&STRCDPT&STRCDCV*
               &STRCDST'                                      81183.
&I       SETA  1                                              81193.
.M194    AIF   (&I GT N'&DEBUG).M307                          81194.
&X       SETC  '&DEBUG(&I)'                                   81196.
         AIF   ('&X' NE 'GLOBAL' AND '&X' NE 'GBL').M201      81198.
&GLOBAL  SETB  1                                              81199.
         AGO   .M305                                          81200.
.M201    AIF   ('&X'(1,1) EQ 'N').SETOFF                      81201.
         AIF   ('&X' NE 'BLOCKNAM' AND '&X' NE 'BN').M210     81201.
&STRCDBN SETB  1                                              81202.
         AGO   .M305                                          81206.
.M210    AIF   ('&X' NE 'PROCNAME' AND '&X' NE 'PN').M219     81210.
&STRCDPN SETB  1                                              81211.
         AGO   .M305                                          81215.
.M219    AIF   ('&X' NE 'LISTBLOC' AND '&X' NE 'LB').M227     81219.
&STRCDLB SETB  1                                              81220.
         AGO   .M305                                          81223.
.M227    AIF   ('&X' NE 'BLOCKCOU' AND '&X' NE 'BC').M235     81227.
&STRCDBC SETB  1                                              81228.
         AGO   .M305                                          81231.
.M235    AIF   ('&X' NE 'PROCCOUN' AND '&X' NE 'PC').M244     81235.
&STRCDPC SETB  1                                              81236.
         AGO   .M305                                          81243.
.M244    AIF   ('&X' NE 'PROCTRAC' AND '&X' NE 'PT').M253     81244.
&STRCDPT SETB  1                                              81245.
         AGO   .M305                                          81249.
.M253    AIF   ('&X' NE 'CORPVALU' AND '&X' NE 'CV').M262     81253.
&STRCDCV SETB  1                                              81254.
         AGO   .M305                                          81258.
.M262    AIF   ('&X' NE 'SAVETRAC' AND '&X' NE 'ST').M274     81262.
&STVALUE SETB  1                                              81266.
&STCHECK SETB  1                                              81267.
         AGO   .M305                                          81269.
.M274    AIF   ('&X' NE 'ALL').M286                           81274.
&STRCDBN SETB  1                                       "ALL"  81275.
&STRCDPN SETB  1                                              81275.
&STRCDLB SETB  1                                              81275.
&STRCDBC SETB  1                                              81275.
&STRCDPC SETB  1                                              81275.
&STRCDPT SETB  1                                              81275.
&STRCDCV SETB  1                                              81275.
&STVALUE SETB  1                                              81275.
&STCHECK SETB  1                                              81280.
         AGO   .M305                                          81281.
.M286    AIF   ('&X' NE 'MACRONAM' AND '&X' NE 'MN').M294     81286.
&STRCDMN SETB  1                                              81287.
         AGO   .M305                                          81290.
.M294    AIF   ('&X' NE 'DEBUGMAC' AND '&X' NE 'DM').M302     81294.
&STRCDDM SETB  1                                              81295.
         AGO   .M305                                          81298.
.SETOFF  AIF   ('&X' NE 'NOBLOCKN' AND '&X' NE 'NBN').M216    81207.
&STRCDBN SETB  0                                              81208.
         AGO   .M305                                          81209.
.M216    AIF   ('&X' NE 'NOPROCNA' AND '&X' NE 'NPN').M224    81216.
&STRCDPN SETB  0                                              81217.
         AGO   .M305                                          81218.
.M224    AIF   ('&X' NE 'NOLISTBL' AND '&X' NE 'NLB').M232    81224.
&STRCDLB SETB  0                                              81225.
         AGO   .M305                                          81226.
.M232    AIF   ('&X' NE 'NOBLOCKC' AND '&X' NE 'NBC').M240    81232.
&STRCDBC SETB  0                                              81233.
         AGO   .M305                                          81234.
.M240    AIF   ('&X' NE 'NOPROCCO' AND '&X' NE 'NPC').M250    81240.
&STRCDPC SETB  0                                              81241.
         AGO   .M305                                          81242.
.M250    AIF   ('&X' NE 'NOPROCTR' AND '&X' NE 'NPT').M259    81250.
&STRCDPT SETB  0                                              81251.
         AGO   .M305                                          81252.
.M259    AIF   ('&X' NE 'NOCORPVA' AND '&X' NE 'NCV').M270    81259.
&STRCDCV SETB  0                                              81260.
         AGO   .M305                                          81261.
.M270    AIF   ('&X' NE 'NOSAVETR' AND '&X' NE 'NST').M274N N 81270.
&STVALUE SETB  0                                              81271.
&STCHECK SETB  1                                              81272.
         AGO   .M305                                          81273.
.M274N   AIF   ('&X' NE 'NONE').M291                  "NONE"  81274.
&STRCDBN SETB  0                                      "NONE"  81275.
&STRCDPN SETB  0                                              81275.
&STRCDLB SETB  0                                              81275.
&STRCDBC SETB  0                                              81275.
&STRCDPC SETB  0                                              81275.
&STRCDPT SETB  0                                              81275.
&STRCDCV SETB  0                                              81275.
&STVALUE SETB  0                                              81275.
&STCHECK SETB  1                                              81280.
         AGO   .M305                                          81281.
.M291    AIF   ('&X' NE 'NOMACRON' AND '&X' NE 'NMN').M299    81291.
&STRCDMN SETB  0                                              81292.
         AGO   .M305                                          81293.
.M299    AIF   ('&X' NE 'NODEBUGM' AND '&X' NE 'NDM').M302    81299.
&STRCDDM SETB  0                                              81300.
         AGO   .M305                                          81301.
.M302    MNOTE 8,' STRC8104 DEBUG=&DEBUG(&I) INVALID--IGNORED'
.M305    ANOP
&I       SETA  &I+1                                           81306.
         AGO   .M194                                          81307.
.M307    AIF   (NOT &STCHECK).M335                            81310.
         AIF   (&STVALUE).M313                                81312.
&STRCDST SETB  0                                              81333.
         AGO   .M335                                          81334.
.M313    AIF   (NOT &PROC1).M324                              81314.
         AIF   (NOT &OSLINK).M321                             81316.
&STRCSFP SETB  1                                              81318.
&STRCDST SETB  1                                              81319.
         MNOTE 4,' STRC8103 WARNING--SAVETRACE REQUIRES "FINAL" MACRO'
         AGO   .M335                                          81321.
.M321    MNOTE 8,' STRC8106 SAVETRACE REQUIRES FIRST PROC TO BE'
         MNOTE 0,'          LINKAGE=OS'                       81322.
         AGO   .M335                                          81324.
.M324    AIF   (&STRCSFP).M326                                81325.
         MNOTE 8,' STRC8105 SAVETRACE MUST BE SPECIFIED ON FIRST PROC'
         AGO   .M335                                          81330.
.M326    ANOP
&STRCDST SETB  1                                              81327.
.M335    AIF   (NOT &GLOBAL).M340                             81336.
&PVDEBUG SETC  ''                                             81338.
.M340    ANOP
.*       CORP  PROC_DEBUG_SET                                 81341.
&SPECPFX SETB  ((&STRCDST OR &STRCDPT OR &STRCDPC) AND &STRCPCT LT 254)
         AIF   (NOT &SPECPFX).M162                            81151.
&STRCPCT SETA  &STRCPCT+1                                     81153.
&STRCHXI SETA  &STRCPCT                                       81155.
         STRCXHEX
&IDBYTE  SETC  '&STRCHXO'                                     81157.
&STRCPFX SETC  '$P&IDBYTE'                                    81158.
         MNOTE *,' STRC8108 PROC &STRCNAM(&STRCNST), DEBUG ID=X''&IDBYT*
               E'''                                           81160.
         AGO   .M164                                          81162.
.M162    ANOP
&IDBYTE  SETC  '00'                                           81163.
.M164    ANOP
.*       CORP  PROC_SCAN_OPTIONS                              81165.
.*       CALL  PROC_HEADER                                    81068.
         AIF   ('&LINKAGE(2)' NE 'CSECT').M361                81356.
&LABEL   CSECT
&LABEL   SETC  ''                                             81359.
         USING *,15
.M361    ANOP
         AIF   (NOT (((&OSLINK OR '&ID' NE '') AND                     *
               '&ID' NE 'NONE') OR &STRCDPN)).M413            81362.
&TARGET  SETC  '&STRCPFX.AA'                                  81365.
&LABEL   B     &TARGET
&LABEL   SETC  '&TARGET'                                      81368.
         AIF ('&ID' NE '' AND '&ID' NE '*' AND '&ID' NE 'NONE').M393
         AIF   ('&USRNAME' NE '').M380                        81371.
         AIF   (&OSLINK).M375                                 81373.
&SECT    SETC  '&STRCNAM(&STRCNST)'                           81377.
         AGO   .M378                                          81377.
.M375    ANOP
&SECT    SETC  '$PRIVATE'                                     81375.
.M378    ANOP
&LENGTH  SETA  8                                              81379.
         AGO   .M383                                          81380.
.M380    ANOP
&SECT    SETC  '&USRNAME'                                     81381.
&LENGTH  SETA  K'&USRNAME                                     81382.
.M383    AIF   (&OSLINK).M385                                 81384.
&LENGTH  SETA  ((&LENGTH+1)/2)*2                              81390.
         DC    CL&LENGTH'&SECT'
         AGO   .M392                                          81392.
.M385    ANOP
&LENGTH  SETA  ((&LENGTH/2)*2)+1                              81386.
         DC    AL1(&LENGTH),CL&LENGTH'&SECT'
.M392    AGO   .M412                                          81393.
.M393    ANOP
&QUOTE   SETC  ''''                                           81394.
&LENGTH  SETA  0                                              81395.
         AIF   ('&ID'(1,1) NE '''').M400                      81396.
&QUOTE   SETC  ''                                             81398.
&LENGTH  SETA  0-2                                            81399.
.M400    AIF   (&OSLINK).M403                                 81402.
&LENGTH  SETA  ((K'&ID+1)/2)*2+&LENGTH                        81408.
         DC    CL&LENGTH&QUOTE&ID&QUOTE
         AGO   .M411                                          81411.
.M403    ANOP
&LENGTH  SETA  ((K'&ID/2)*2)+1+&LENGTH                        81403.
         DC    AL1(&LENGTH),CL&LENGTH&QUOTE&ID&QUOTE
.M411    ANOP
.M412    ANOP
.M413    ANOP
.*       CORP  PROC_HEADER                                    81414.
.*       CALL  PROC_REG_SAVE                                  81071.
&FIRST   SETC  ''                                             81424.
&LAST    SETC  ''                                             81424.
&OFFSET  SETA  0                                              81425.
&OFFSET0 SETA  0                                              81425.
&SAF     SETA  0                                              81425.
&SAL     SETA  0                                              81425.
         AIF   ('&SAVE' NE 'NONE').M436                       81427.
         AIF   (NOT &STRCDST).M474                            81429.
&SVTYPE  SETC  'FULL'                                         81431.
&SVLENG  SETC  '15'                                           81432.
&LABEL   STM   14,12,&STRCPFX.SV+12
&LABEL   SETC  ''                                             81434.
         AGO   .M474                                          81436.
.M436    ANOP
.*       CALL  PROC_SET_SAVE_INFO                             81437.
&FRKNOWN SETB  1                                              81487.
&MULT    SETC  'M'                                            81488.
&COMMA2  SETC  ','                                            81489.
         AIF   (T'&SAVE(1) NE 'O').M496                       81491.
&FIRST   SETC  '14'                                           81493.
&SAF     SETA  14                                             81493.
&LAST    SETC  '12'                                           81494.
&SAL     SETA  12                                             81494.
         AGO   .M527                                          81496.
.M496    AIF   (T'&SAVE(1) NE 'N').M503                       81497.
&SAF     SETA  &SAVE(1)                                       81499.
&FIRST   SETC  '&SAF'                                         81500.
         AGO   .M507                                          81503.
.M503    ANOP
&FIRST   SETC  '&SAVE(1)'                                     81504.
&SAF     SETA  14                                             81505.
&FRKNOWN SETB  0                                              81506.
.M507    AIF   (T'&SAVE(2) NE 'O').M517                       81508.
&LAST    SETC  ''                                             81510.
&MULT    SETC  ''                                             81510.
&COMMA2  SETC  ''                                             81510.
         AIF   (&FRKNOWN).M512                                81511.
&SAL     SETA  12                                             81515.
         AGO   .M516                                          81516.
.M512    ANOP
&SAL     SETA  &SAF                                           81513.
.M516    AGO   .M526                                          81517.
.M517    AIF   (T'&SAVE(2) NE 'N').M522                       81518.
&SAL     SETA  &SAVE(2)                                       81520.
&LAST    SETC  '&SAL'                                         81521.
         AGO   .M526                                          81522.
.M522    ANOP
&LAST    SETC  '&SAVE(2)'                                     81523.
&SAL     SETA  12                                             81524.
.M526    ANOP
.M527    ANOP
.*       CORP  PROC_SET_SAVE_INFO                             81528.
.*       CALL  PROC_DECIDE_SAVE_TYPE                          81446.
         AIF   (NOT &OSLINK).M559                             81542.
&OSPTR   SETC  '(13)'                                         81544.
&LOCPTR  SETC  ''                                             81545.
         AIF   ('&SAVE(3)' NE 'NONE').M549                    81546.
&SVTYPE  SETC  'NONE'                                         81548.
         AGO   .M598                                          81549.
.M549    ANOP
&SVTYPE  SETC  'OSSAVE'                                       81550.
&OFFSET0 SETA  5                                              81551.
&OFFSET  SETA  5                                              81551.
         AIF   ('&SAVE(4)' NE '').M555                        81552.
&SVLENG  SETC  '18'                                           81554.
         AGO   .M598                                          81555.
.M555    ANOP
&SVLENG  SETC  '&SAVE(4)'                                     81556.
         AGO   .M598                                          81559.
.M559    ANOP
&OSPTR   SETC  ''                                             81560.
&LOCPTR  SETC  '&STRCPFX.SV+'                                 81561.
         AIF   (NOT &STRCDST).M568                            81562.
&SVTYPE  SETC  'FULL'                                         81564.
&SVLENG  SETC  '15'                                           81565.
&OFFSET  SETA  5                                              81567.
&OFFSET0 SETA  5                                              81567.
         AGO   .M598                                          81568.
.M568    ANOP
&I       SETA  &SAL-((&SAL+2)/16*16)-&SAF+((&SAF+2)/16*16)+1  81569.
&SVLENG  SETC  '&I'                                           81570.
         AIF   (&SAF NE 14).M582                              81572.
         AIF   (&STRCDPC).M576                                81574.
&SVTYPE  SETC  'NORML'                                        81579.
&OFFSET  SETA  2                                              81580.
&OFFSET0 SETA  2                                              81580.
         AGO   .M598                                          81581.
.M576    ANOP
&SVTYPE  SETC  'NORMLHDR'                                     81576.
&OFFSET  SETA  3                                              81577.
&OFFSET0 SETA  3                                              81577.
         AGO   .M598                                          81578.
.M582    AIF   (&STRCDPC).M584                                81583.
&SVTYPE  SETC  'TRUNC'                                        81588.
&OFFSET  SETA  0                                              81589.
         AGO   .M590                                          81590.
.M584    ANOP
&SVTYPE  SETC  'TRUNCHDR'                                     81585.
&OFFSET  SETA  1                                              81586.
.M590    ANOP
&OFFSET0 SETA  &OFFSET-&SAF                                   81591.
         AIF   (&SAF LE 13).M598                              81592.
&OFFSET0 SETA  &OFFSET0+16                                    81594.
.M598    AIF   (NOT &FRKNOWN OR '&SVTYPE'(1,5) EQ 'TRUNC').M608
&OFFSET  SETA  &OFFSET0+&SAF                                  81603.
         AIF   (&SAF LE 13).M608                              81604.
&OFFSET  SETA  &OFFSET-16                                     81606.
.M608    ANOP
.*       CORP  PROC_DECIDE_SAVE_TYPE                          81609.
         AIF   ('&SVTYPE' NE 'FULL').M461                     81457.
&LABEL   STM   14,12,&STRCPFX.SV+12
         AGO   .M472                                          81461.
.M461    AIF   (&FRKNOWN).M463                                81462.
&LABEL   ST&MULT  &FIRST,&LAST&COMMA2&LOCPTR.(&FIRST+&OFFSET-((&FIRST+2:
               )/16*16))*4&OSPTR
         AGO   .M471                                          81471.
.M463    ANOP
&I       SETA  &OFFSET*4                                      81464.
&LABEL   ST&MULT  &FIRST,&LAST&COMMA2&LOCPTR&I&OSPTR
.M471    ANOP
.M472    ANOP
&LABEL   SETC  ''                                             81473.
.M474    ANOP
.*       CORP  PROC_REG_SAVE                                  81475.
.*       CALL  PROC_ESTABLISH_BASE                            81074.
     AIF  ('&BASE' EQ 'NONE' OR NOT (&OSLINK OR '&BASE' NE '')).M696
&BASEREG SETC  '&BASE(1)'                                     81623.
&INLINE  SETB  ('&SAVE' NE 'NONE' AND '&SAVE(3)' EQ '')       81624.
         AIF   ('&BASEREG' NE '13' OR &INLINE OR &OSLINK).M630
         MNOTE 8,' STRC8109 REGISTER 13 INVALID--IGNORED'     81627.
&BASEREG SETC  ''                                             81628.
.M630    AIF   ('&BASEREG' NE '').M647                        81630.
         AIF   (NOT (&INLINE AND &OSLINK)).M644               81632.
&BASEREG SETC  '&WORKREG'                                     81634.
&USING13 SETB  1                                              81637.
         AIF   ('&WORK' NE 'NONE' OR &WORKUSD).M642           81638.
&LABEL   LR    0,&WORKREG
&LABEL   SETC  ''                                             81641.
.M642    ANOP
&WORKUSD SETB  1                                              81643.
         AGO   .M647                                          81644.
.M644    ANOP
&BASEREG SETC  '12'                                           81645.
.M647    ANOP
&J       SETA  0                                              81648.
&I       SETA  2                                              81649.
.M650    AIF   (&I GT N'&BASE).M662                           81650.
         AIF   ('&BASE(&I)' NE '13').M655                     81652.
         MNOTE 8,' STRC8109 REGISTER 13 INVALID--IGNORED'     81654.
         AGO   .M659                                          81655.
.M655    ANOP
&LABEL   L     &BASE(&I),&STRCPFX.MBR+&J
&LABEL   SETC  ''                                             81658.
.M659    ANOP
&I       SETA  &I+1                                           81660.
&J       SETA  &J+4                                           81661.
         AGO   .M650                                          81662.
.M662    AIF   (NOT &INLINE).M675                             81664.
         AIF   (NOT &OSLINK).M671                             81666.
         CNOP  0,4
.M671    ANOP
&TARGET  SETC  '&STRCPFX.BB'                                  81672.
&LABEL   BAL   &BASEREG,&TARGET
&LABEL   SETC  '&TARGET'                                      81674.
         AGO   .M678                                          81675.
.M675    ANOP
&LABEL   BALR  &BASEREG,0
&LABEL   SETC  ''                                             81677.
.M678    AIF   (&USING13).M682                                81679.
         USING *,&BASEREG
.M682    AIF   (N'&BASE LE 1).M696                            81683.
&STRCPFX.MBP  EQU  *
&MULTIBS SETB  1                                              81686.
&J       SETA  4096                                           81687.
&I       SETA  2                                              81688.
.M689    AIF   (&I GT N'&BASE).M696                           81689.
         USING *+&J,&BASE(&I)
&I       SETA  &I+1                                           81692.
&J       SETA  &J+4096                                        81693.
         AGO   .M689                                          81694.
.M696    ANOP
.*       CORP  PROC_ESTABLISH_BASE                            81697.
.*       CALL  PROC_GEN_SAVE_AREA                             81078.
         AIF   ('&SVTYPE' NE 'OSSAVE').M709                   81703.
.*       CALL  PROC_GEN_OSSAVE_AREA                           81705.
.*       CALL  PROC_DEFINE_NEW_OSSAVE                         81725.
&X       SETC  ''                                             81765.
&SAVEREG SETC  '&WORKREG'                                     81766.
         AIF   ('&SAVE(3)' NE 'DYNAM').M789                   81767.
&LABEL   LA    0,(&SVLENG)*4
&LABEL   SETC  ''                                             81770.
         AIF   ('&WORK' EQ 'NONE').M774                       81771.
         LR    &WORKREG,1
.M774    ANOP
*        GETMAIN  R,LV=(0)
         GETMAIN  R,LV=(0)                                    81775.
         LR    0,&WORKREG
         LR    &WORKREG,1
         AIF   ('&WORK' NE 'NONE').M785                       81778.
         L     1,24(13)
         AIF   ('&FIRST' EQ '14' AND '&LAST' EQ '12').M787    81781.
         MNOTE 4,' STRC8107 REG 1 MUST BE AMONG THOSE SAVED'  81783.
         AGO   .M787                                          81785.
.M785    LR    1,0
.M787    ANOP
&WORKUSD SETB  1                                              81788.
         AGO   .M829                                          81789.
.M789    AIF   ('&SAVE(3)' NE '').M819                        81790.
         AIF   ('&LABEL' NE '').M802                          81792.
         AIF   ('&WORK' NE 'NONE' OR &WORKUSD).M797           81794.
         LR    0,&WORKREG
.M797    ANOP
&WORKUSD SETB  1                                              81798.
         CNOP  0,4
&LABEL   SETC  '&STRCPFX.CC'                                  81800.
         BAL   &WORKREG,&LABEL
         AGO   .M808                                          81802.
.M802    ANOP
&X       SETC  '&STRCPFX.ISV'                                 81803.
         AIF   (&USING13).M808                                81804.
&SAVEREG SETC  '&BASEREG'                                     81806.
.M808    AIF   (&STRCDPT AND &PROC1).M810                     81809.
&X       DC    (&SVLENG)F'0'
         AGO   .M816                                          81816.
.M810    ANOP
&X       DC    A($TRACE),(&SVLENG-1)F'0'
.M816    ANOP                                                 81816.
.*       CALL  PROC_MULTIBASE_GEN (COPY A)                    81817.
         AIF   (NOT &MULTIBS).M989A                           81969.
         AIF   ('&LABEL' NE '').M975AA                        81971.
&LABEL   SETC  '&STRCPFX.FF'                                  81973.
         B     &LABEL
.M975AA  ANOP
&I       SETA  2                                              81976.
&J       SETA  4096                                           81977.
&X       SETC  '&STRCPFX.MBR'                                 81978.
.M979A   AIF   (&I GT N'&BASE).M986A                          81979.
&X       DC    A(&STRCPFX.MBP+&J)
&X       SETC  ''                                             81983.
&I       SETA  &I+1                                           81984.
&J       SETA  &J+4096                                        81985.
         AGO   .M979A                                         81986.
.M986A   ANOP
&MULTIBS SETB  0                                              81988.
.M989A   ANOP
.*       CORP  PROC_MULTIBASE_GEN (COPY A)                    81990.
         AGO   .M829                                          81819.
.M819    AIF   ('&WORK' NE 'NONE' OR &WORKUSD).M824           81820.
&LABEL   LR    0,&WORKREG
&LABEL   SETC  ''                                             81823.
.M824    ANOP
&WORKUSD SETB  1                                              81825.
&LABEL   LA    &WORKREG,&SAVE(3)
&LABEL   SETC  ''                                             81827.
.M829    ANOP
.*       CORP  PROC_DEFINE_NEW_OSSAVE                         81831.
         AIF   (NOT (&STRCDST AND &PROC1)).M737               81728.
&LABEL   ST    13,$FIRSTSV+4
&LABEL   SETC  ''                                             81732.
         MVC   8(4,13),=A($FIRSTSV)
         L     13,=A($LASTSAV)
&STRCPSP SETC  '$FIRSTSV'                                     81735.
&STRCPSA SETC  '0'                                            81736.
.M737    ANOP
&LABEL   ST    &SAVEREG,8(13)
&LABEL   SETC  ''                                             81739.
         ST    13,4(&SAVEREG)
         LR    13,&SAVEREG
         AIF   (NOT &USING13).M745                            81742.
         USING &STRCPFX.ISV,13
.M745    AIF   (NOT (&STRCDPT AND &PROC1 AND '&SAVE(3)' NE '')).M756
         AIF   ('&WORK' NE 'NONE' OR &WORKUSD).M752           81749.
         LR    0,&WORKREG
.M752    LA    &WORKREG,$TRACE
         ST    &WORKREG,0(13)
&WORKUSD SETB  1                                              81755.
.M756    ANOP
.*       CORP  PROC_GEN_OSSAVE_AREA                           81757.
         AGO   .M717                                          81709.
.M709    AIF   (('&SAVE' EQ 'NONE' OR '&SVTYPE' EQ 'NONE') AND         *
               NOT &STRCDST).M717                             81710.
.*       CALL  PROC_GEN_LOCAL_SAVEAREA                        81713.
         AIF   ('&LABEL' NE '').M842                          81838.
&LABEL   SETC  '&STRCPFX.DD'                                  81840.
         B     &LABEL
.M842    ANOP
&STRCPFX.SV  DS  0F
         AIF   ('&SVTYPE' NE 'FULL' AND '&SVTYPE' NE 'NORMLHDR' AND    *
               '&SVTYPE' NE 'TRUNCHDR').M848                  81844.
         DC    X'FF&IDBYTE.0000' FLAG (FF=FINISHED,FE=ENTERED), ID, COU*
               NT
.M848    AIF   ('&SVTYPE' NE 'FULL').M860                     81849.
&FWDPTR  SETC  '&STRCPFX.NXT'                                 81851.
&STRCPSP EQU   &STRCPFX.SV
         DC    A(&STRCPSA,&FWDPTR)
&STRCPSP SETC  '&FWDPTR'                                      81856.
&STRCPSA SETC  '&STRCPFX.SV'                                  81858.
.M860    DC    (&SVLENG)F'0'
.*       CALL  PROC_MULTIBASE_GEN (COPY B)                    81862.
         AIF   (NOT &MULTIBS).M989B                           81969.
         AIF   ('&LABEL' NE '').M975BB                        81971.
&LABEL   SETC  '&STRCPFX.FF'                                  81973.
         B     &LABEL
.M975BB  ANOP
&I       SETA  2                                              81976.
&J       SETA  4096                                           81977.
&X       SETC  '&STRCPFX.MBR'                                 81978.
.M979B   AIF   (&I GT N'&BASE).M986B                          81979.
&X       DC    A(&STRCPFX.MBP+&J)
&X       SETC  ''                                             81983.
&I       SETA  &I+1                                           81984.
&J       SETA  &J+4096                                        81985.
         AGO   .M979B                                         81986.
.M986B   ANOP
&MULTIBS SETB  0                                              81988.
.M989B   ANOP
.*       CORP  PROC_MULTIBASE_GEN (COPY B)                    81990.
.*       CORP  PROC_GEN_LOCAL_SAVEAREA                        81863.
.M717    ANOP
.*       CORP  PROC_GEN_SAVEAREA                              81718.
.*       CALL  PROC_MULTIBASE_GEN (COPY C)                    81082.
         AIF   (NOT &MULTIBS).M989C                           81969.
         AIF   ('&LABEL' NE '').M975CC                        81971.
&LABEL   SETC  '&STRCPFX.FF'                                  81973.
         B     &LABEL
.M975CC  ANOP
&I       SETA  2                                              81976.
&J       SETA  4096                                           81977.
&X       SETC  '&STRCPFX.MBR'                                 81978.
.M979C   AIF   (&I GT N'&BASE).M986C                          81979.
&X       DC    A(&STRCPFX.MBP+&J)
&X       SETC  ''                                             81983.
&I       SETA  &I+1                                           81984.
&J       SETA  &J+4096                                        81985.
         AGO   .M979C                                         81986.
.M986C   ANOP
&MULTIBS SETB  0                                              81988.
.M989C   ANOP
.*       CORP  PROC_MULTIBASE_GEN (COPY C)                    81990.
.*       CALL  PROC_DEBUG_STUFF                               81084.
         AIF   (NOT &STRCDPT).M907                            81871.
         AIF   (NOT &STRCTVG).M886                            81873.
         AIF   ('&WORK' NE 'NONE' OR &WORKUSD).M879           81875.
&LABEL   LR    0,&WORKREG
&LABEL   SETC  ''                                             81878.
.M879    ANOP
&LABEL   L     &WORKREG,=A($TRACE)
         MVC   0(256,&WORKREG),1(&WORKREG)
         MVI   256(&WORKREG),X'&IDBYTE'
&WORKUSD SETB  1                                              81885.
         AGO   .M905                                          81886.
.M886    AIF   ('&LABEL' NE '').M891                          81887.
&LABEL   SETC  '&STRCPFX.EE'                                  81889.
         B     &LABEL
.M891    DC    C'$TRACE'
$TRACE   DC    258X'FF'
&STRCTVG SETB  1                                              81894.
         AIF   (NOT ((&STRCDPC OR &STRCDBC) AND &PROC1)).M902
&STRCPFX.PCT  DC  H'0' PROC COUNT
&PCTWVEC SETB  1                                              81901.
.M902    ANOP
&LABEL   MVC   $TRACE(256),$TRACE+1
         MVI   $TRACE+256,X'&IDBYTE'
.M905    ANOP
&LABEL   SETC  ''                                             81906.
.M907    AIF   (NOT (&STRCDPC OR &STRCDBC)).M938              81908.
         AIF   (NOT &OSLINK AND                                        *
               ('&SAVE' NE 'NONE' OR &STRCDST)).M923          81910.
         AIF   (&PCTWVEC).M921                                81912.
         AIF   ('&LABEL' NE '').M918                          81914.
         NOP   0
&STRCPFX.PCT  EQU  *-2 PROC COUNT
         AGO   .M921                                          81918.
.M918    ANOP
&STRCPFX.PCT  DC  H'0' PROC COUNT
.M921    ANOP
&SPOT    SETC  'PCT'                                          81922.
         AGO   .M925                                          81923.
.M923    ANOP
&SPOT    SETC  'SV+2'                                         81924.
.M925    AIF   ('&WORK' NE 'NONE' OR &WORKUSD).M930
&LABEL   LR    0,&WORKREG
&LABEL   SETC  ''                                             81929.
.M930    ANOP
&LABEL   LH    &WORKREG,&STRCPFX&SPOT
&LABEL   SETC  ''                                             81933.
         LA    &WORKREG,1(&WORKREG)
         STH   &WORKREG,&STRCPFX&SPOT
&WORKUSD SETB  1                                              81937.
.M938    AIF   (&OSLINK OR NOT &STRCDST).M943                 81939.
&LABEL   MVI   &STRCPFX.SV,X'FE'
&LABEL   SETC  ''                                             81942.
.M943    ANOP
.*       CORP  PROC_DEBUG_STUFF                               81944.
         AIF   (NOT ('&WORK' EQ 'NONE' AND &WORKUSD)).M091    81086.
&LABEL   LR    &WORKREG,0
&LABEL   SETC  ''                                             81090.
.M091    AIF   ('&LABEL' EQ '').M095                          81092.
&LABEL   DS    0H
.M095    AIF   ('&LINKAGE(2)' NE 'CSECT').M100                81096.
         DROP  15
.M100    ANOP
.*       CALL  PROC_INFO_SAVE                                 81101.
&STRCOP1(&STRCNST)  SETC  '&FIRST'                            81951.
&STRCOP2(&STRCNST)  SETC  '&LAST'                             81952.
&STRCOP3(&STRCNST)  SETC  '&SVLENG'                           81953.
&STRCOP4(&STRCNST)  SETC  '&PVDEBUG'                          81954.
&I       SETA  &OFFSET0+50                                    81955.
&BIT     SETB  ('&SAVE(3)' EQ 'DYNAM')                        81957.
&STRCINF(&STRCNST)  SETC  '&I&OSLINK&BIT&FRKNOWN&IDBYTE&SPECPFX'
         AIF   (NOT &STRCDDM).M960                            DEBUGMACS
         MNOTE *,' STRC8199 PROC SAVES OP1=&FIRST,OP2=&LAST,OP3=&SVLENG*
               ,OP4=&PVDEBUG,INF=&STRCINF(&STRCNST)'          DEBUGMACS
.M960    ANOP
.*       CORP  PROC_INFO_SAVE                                 81960.
.FIN     ANOP
         AIF   ('&DSECT' EQ '').EXITPRO
         USING &DSECT,13
.EXITPRO MEND
./ ADD NAME=PROCEND  8512-86097-86097-1148-00005-00005-00000-ISPFDYN
         MACRO
&USRNAME PROCEND  &PROCNAM,&RETURN=,&LINK=14,&RESTORE=,&RC=
&USRNAME CORP     &PROCNAM,RETURN=&RETURN,LINK=&LINK,                  *
               RESTORE=&RESTORE,RC=&RC
         MEND
./ ADD NAME=SELECT   8512-85095-85095-1208-00128-00128-00000-ISPFDYN
         MACRO
&NAME    SELECT &BUFLEN,                BUFFER LENGTH (POS)            *
               &BUF,                    BUFFER ADDRESS (POS)           *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFSELECT               WAS A SELECT GENERATED
         GBLB  &SPFDEBUG                DEBUG MODE SWITCH
         GBLB  &SPFVAR                  WAS ISPF PARMS ISSUED
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS REQUIRED
         GBLA  &SPFVARC                 NUMBER OF FULLWORDS USED
         LCLC  &NDX                     REDEFINE MACRO INDEX SYSNDX
         LCLC  &P1                      INTERNAL- FIRST CALL PARM
         LCLC  &P2                      INTERNAL- SECOND CALL PARM
         LCLA  &LEN                     INTERNAL- LENGTH OF BUFFER GEN
.*
.**********************************************************************
.*       SET INTERNAL GLOBALS
.**********************************************************************
.*
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&BUF' EQ '').ERR1
         AIF   ('&BUF'(1,1) EQ '''' AND '&BUFLEN' NE '').WARN
.CONT    AIF   ('&MF(1)' NE 'I' AND '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFSELECT).GENLIT
         AIF   ('&BUFLEN' EQ '').CNT1
         AIF   (T'&BUFLEN EQ 'N' AND '&BUFLEN'(1,1) NE '(').GENLIT
.CNT1    AIF   ('&BUF' EQ '').CNT2
         AIF   ('&BUF'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFSELECT).BYP20
SELECT   DC    CL8'SELECT'              ISPF KEYWORD
&SPFSELECT SETB 1
.BYP20   ANOP
         AIF   ('&BUFLEN' EQ '').BYP40
         AIF   (T'&BUFLEN NE 'N' OR '&BUFLEN'(1,1) EQ '(').BYP40
         AIF   ('&BUF'(1,1) EQ '''').BYP40
SPFL&NDX DC    F'&BUFLEN'               BUFFER LENGTH GENERATED
.BYP40   ANOP
         AIF   ('&BUF'(1,1) NE '''').BYP50
         CNOP  0,4
&LEN     SETA  K'&BUF+3
&LEN     SETA  &LEN/4*4
SPFB&NDX DC    CL&LEN&BUF               GENERATED SELECT BUFFER
SPFL&NDX DC    F'&LEN'                  GENERATED SELECT LENGTH
.BYP50   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&BUFLEN' EQ '').BYP100
         AIF   ('&BUF'(1,1) EQ '''').BYP100
         AIF   (T'&BUFLEN EQ 'N' AND '&BUFLEN'(1,1) NE '(').BYP100
&P1      SETC  '&BUFLEN'
         AGO   .BYP120
.BYP100  ANOP
&P1      SETC  'SPFL&NDX'
.BYP120  ANOP
         AIF   ('&BUF'(1,1) EQ '(').BYP130
         AIF   ('&BUF'(1,1) NE '''').BYP130
&P2      SETC  'SPFB&NDX'
         AGO   .BYP150
.BYP130  ANOP
&P2      SETC  '&BUF'
.BYP150  ANOP
         L     15,&LOAD                 LOAD ADDRESS OF ISPLINK
         AIF   ('&MF(1)' EQ 'E' AND '&MF(2)' EQ '').CALL2
         CALL  (15),(SELECT,&P1,&P2),VL,MF=&MF
         AGO   .VARIT
.CALL2   ANOP
         CALL  (15),(SELECT,&P1,&P2),VL,MF=(E,SPFPARMS)
.VARIT   AIF   (NOT &SPFVAR).BYVAR      WAS ISPF PARMS ISSUED
         AIF   (&SPFVARC LT 3).ERRVAR   WAS PARMLIST TOO LITTLE
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS  SET PARMLIST SIZE TO AT LEAST
&SPFVARS SETA  3                        3 FULLWORDS
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'BUFFER FOR SELECT COMMAND IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR5    ANOP
         MNOTE 16,'SELECT BUFFER MAY BE REGISTER ONLY WHEN MF=E'
         MEXIT
.WARN    ANOP
         MNOTE 4,'BUFFER LENGTH IS IGNORED FOR LITERAL BUFFER'
         AGO   .CONT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=SETMSG   8512-85095-85095-1208-00136-00136-00000-ISPFDYN
         MACRO
&NAME    SETMSG &P1,&MSG=,              MEMBER NAME                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFSETMSG,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @SETMSG &P1,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P1' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&MSG' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFSETMSG).GENLIT
         AIF   ('&MSG' EQ '').CNT1
         AIF   ('&MSG'(1,1) EQ '''').GENLIT
.CNT1    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFSETMSG).BYP20
SETMSG   DC    CL8'SETMSG'              ISPF KEYWORD
&SPFSETMSG SETB 1
.BYP20   ANOP
         AIF   ('&MSG' EQ '').BYP40
         AIF   ('&MSG'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&MSG                  GENERATED MEMBER NAME
.BYP40   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,SETMSG                GET ADDRESS OF SETMSG KEYWORD
         AIF   ('&MSG' EQ '').BYP100
         AIF   ('&MSG'(1,1) EQ '''').BYP110
         LA    15,&MSG                  GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFS&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         STM   14,15,&TEMP              STORE PARAMETERS
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(SETMSG)                BROWSE LITERAL
         AIF   ('&MSG' EQ '').BYP200
         AIF   ('&MSG'(1,1) EQ '''').BYP210
         DC    A(&MSG+X'80000000')      ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFS&NDX+X'80000000')  ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR MEMBER
.BYP220  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'MSG NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=STRCCEP  8512-86097-86097-1148-00140-00140-00000-ISPFDYN
         MACRO
&FIRSTID STRCCEP
         COPY  STRCGBLS
         LCLA  &CCOUNT            COND_COUNT                  97013.
         LCLA  &DEPTH             DEPTH                       97015.
         LCLA  &INDEX             INDEX                       97017.
         LCLA  &OPCOUNT           OP_COUNT                    97019.
         LCLA  &NXINDEX           NEXT_INDEX                  97021.
         LCLA  &NXDEPTH           NEXT_DEPTH                  97023.
         LCLA  &LADEPTH           LA_DEPTH                    97024.
         LCLA  &I                 I                           97025.
         LCLB  &ANDOR             AND_OR_OUTSTANDING          97028.
         LCLB  &LOCFC             LOCAL_FALLTHRU_CONDITION    97030.
         LCLB  &LOCLAB(20)        LOCAL_LABEL_REQD            97033.
         LCLC  &LABEL             LABEL                       97036.
         LCLC  &LOCBR             LOCAL_BRANCH_LABEL          97037.
         LCLC  &LOOKFOR           LOOKFOR                     97181.
         LCLA  &MXDEPTH           MAX_DEPTH                   97183.
         LCLA  &TARGET            TARGET                      97185.
         STRCTRAC  STRCCEP                                    97041.
         AIF   (NOT &STRCDDM).M043                            DEBUGMACS
         MNOTE *,' STRCCEP SYSLIST=&SYSLIST(1),&SYSLIST(2),&SYSLIST(3),*
               &SYSLIST(4),&SYSLIST(5),...'                   DEBUGMACS
.M043    ANOP
&LABEL   SETC  '&FIRSTID'                                     97043.
&CCOUNT  SETA  0                                              97045.
&DEPTH   SETA  0                                              97046.
&INDEX   SETA  &STRCFRX                                       97047.
.M048    AIF   (&INDEX GT &STRCLSX).M087                      97048.
.*       CALL  CEP_FIND_NEXT_CONDITION                        97050.
&STRCERR SETB  0                                              97106.
.M107    AIF   (&INDEX GT &STRCLSX).M111                      97107.
  AIF  ('&SYSLIST(&INDEX)' NE '<' AND '&SYSLIST(&INDEX)' NE '+').M111
&DEPTH   SETA  &DEPTH+1                                       97109.
&INDEX   SETA  &INDEX+1                                       97110.
         AGO   .M107                                          97111.
.M111    AIF   ('&SYSLIST(&INDEX)'(1,1) EQ '(').M119          97114.
         MNOTE 8,' STRC9706 SYNTAX ERROR--LOOKING FOR SIMPLE' 97116.
         MNOTE 0,'          CONDITIONAL, FOUND "&SYSLIST(&INDEX)"'
&STRCERR SETB  1                                              97118.
.M119    ANOP
&CCOUNT  SETA  &CCOUNT+1                                      97120.
.*       CORP  CEP_FIND_NEXT_CONDITION                        97121.
         AIF   (&STRCERR).FIN                                 97054.
&ANDOR   SETB  0                                              97058.
.*       CALL  CEP_LOOKAHEAD                                  97059.
&STRCERR SETB  0                                              97133.
&LADEPTH SETA  &DEPTH                                         97134.
&I       SETA  &INDEX+1                                       97135.
.M136    AIF   (&I GT &STRCLSX).M145                          97136.
         AIF   ('&SYSLIST(&I)' NE '>' AND '&SYSLIST(&I)' NE '/').M145
&I       SETA  &I+1                                           97138.
         AIF   (&LADEPTH LE 0).M142                           97139.
&LADEPTH SETA  &LADEPTH-1                                     97141.
         AGO   .M144                                          97142.
.M142    MNOTE 8,' STRC9705 SUPERFLUOUS BRACKET IGNORED'      97143.
.M144    AGO   .M136                                          97145.
.M145    ANOP
&NXINDEX SETA  &I+1                                           97148.
&NXDEPTH SETA  &LADEPTH                                       97150.
         AIF   (&I LE &STRCLSX).M155                          97151.
&LOCBR   SETC  '&STRCUBL'                                     97153.
&LOCFC   SETB  (&STRCUFC)                                     97154.
         AGO   .M166                                          97155.
.M155    AIF   ('&SYSLIST(&I)' NE 'AND' AND                            *
               '&SYSLIST(&I)' NE 'OR').M161                   97156.
.*       CALL  CEP_SCAN_FOR_BRANCH                            97158.
&ANDOR   SETB  1                                              97188.
         AIF   ('&SYSLIST(&I)' NE 'AND').M194                 97189.
&LOCFC   SETB  1                                              97191.
&LOOKFOR SETC  'OR'                                           97192.
&MXDEPTH SETA  &LADEPTH                                       97193.
         AGO   .M203                                          97194.
.M194    ANOP
&LOCFC   SETB  0                                              97195.
         AIF   (&LADEPTH NE 0).M200                           97196.
&I       SETA  &STRCLSX+1                                     97198.
.M200    ANOP
&LOOKFOR SETC  'AND'                                          97201.
&MXDEPTH SETA  &LADEPTH-1                                     97202.
.M203    ANOP
&I       SETA  &I+1                                           97204.
&TARGET  SETA  &CCOUNT+1                                      97205.
.M206    AIF   (&I GT &STRCLSX).M236                          97206.
  AIF  ('&SYSLIST(&I)' EQ '&LOOKFOR' AND &LADEPTH LE &MXDEPTH).M236
         AIF   ('&SYSLIST(&I)' NE '<' AND '&SYSLIST(&I)' NE '+').M212
&LADEPTH SETA  &LADEPTH+1                                     97211.
         AGO   .M234                                          97212.
.M212    AIF   ('&SYSLIST(&I)' NE '>' AND '&SYSLIST(&I)' NE '/').M219
         AIF   (&LADEPTH LE 0).M234                           97215.
&LADEPTH SETA  &LADEPTH-1                                     97217.
         AGO   .M234                                          97219.
.M219    AIF   ('&SYSLIST(&I)'(1,1) NE '(').M224              97219.
&TARGET  SETA  &TARGET+1                                      97222.
         AGO   .M234                                          97223.
.M224    AIF ('&SYSLIST(&I)' EQ 'AND' OR '&SYSLIST(&I)' EQ 'OR').M234
         MNOTE 8,' STRC9704 SYNTAX ERROR--"&SYSLIST(&I)" INVALID'
&STRCERR SETB  1                                              97228.
&I       SETA  &STRCLSX+1                                     97229.
.M234    ANOP
&I       SETA  &I+1                                           97235.
         AGO   .M206                                          97236.
.M236    AIF   (&I LE &STRCLSX).M251                          97239.
         AIF   (NOT(('&LOOKFOR' EQ 'OR' AND NOT &STRCUFC) OR           *
               ('&LOOKFOR' EQ 'AND' AND &STRCUFC))).M248      97241.
&LOCBR   SETC  '&STRCUFL'                                     97246.
&STRCFLU SETB  1                                              97247.
         AGO   .M257                                          97248.
.M248    ANOP
&LOCBR   SETC  '&STRCUBL'                                     97249.
         AGO   .M257                                          97251.
.M251    ANOP
&LOCBR   SETC  '&STRCPFX&STRCUID&TARGET'                      97252.
&LOCLAB(&TARGET)  SETB  1                                     97253.
.M257    ANOP
.*       CORP  CEP_SCAN_FOR_BRANCH                            97258.
         AGO   .M166                                          97161.
.M161    MNOTE 8,' STRC9703 SYNTAX ERROR--LOOKING FOR "AND" OR "OR",'
         MNOTE 0,'          FOUND "&SYSLIST(&I)"'             97162.
&STRCERR SETB  1                                              97164.
.M166    ANOP
.*       CORP  CEP_LOOKAHEAD                                  97167.
         AIF   (&STRCERR).FIN                                 97066.
         AIF   (NOT &LOCLAB(&CCOUNT)).M073                    97070.
&LABEL   SETC  '&STRCPFX&STRCUID&CCOUNT'                      97022.
.M073    ANOP
&OPCOUNT SETA  N'&SYSLIST(&INDEX)                             97074.
&LABEL   STRCSCND &SYSLIST(&INDEX,1),&SYSLIST(&INDEX,2),               *
               &SYSLIST(&INDEX,3),&SYSLIST(&INDEX,4),                  *
               &SYSLIST(&INDEX,5),&LOCBR,&LOCFC,&OPCOUNT      97075.
&LABEL   SETC  ''                                             97084.
&INDEX   SETA  &NXINDEX                                       97085.
&DEPTH   SETA  &NXDEPTH                                       97086.
         AGO   .M048                                          97087.
.M087    AIF   (NOT &ANDOR).M093                              97090.
         MNOTE 8,' STRC9701 INSUFFICIENT OPERANDS'            97092.
.M093    AIF   (&DEPTH EQ 0).M097                             97094.
         MNOTE 8,' STRC9702 INSUFFICIENT BRACKETS'            97096.
.M097    ANOP
.FIN     MEND
./ ADD NAME=STRCGBLS 8512-86097-86097-1148-00057-00057-00000-ISPFDYN
.*
.*             GLOBAL VARIABLE SYMBOLS
.*
.* GENERAL
         GBLA  &STRCPCT           PROC_COUNTER                  137.
         GBLA  &STRCLB#           LAST_BLOCK_NO                 139.
         GBLA  &STRCHXI           HEX_IN                        141.
         GBLB  &STRCERR           ERROR_OCCURRED                144.
         GBLB  &STRCTFT           TDL_FALLTHRU_OCCURS           146.
         GBLB  &STRCNFP           NOT_FIRST_PROC                149.
         GBLB  &STRCSFP           SAVETRACE_ON_FIRST_PROC       151.
         GBLB  &STRCTVG           TRACE_VECTOR_GENNED           153.
         GBLC  &STRCPFX           BLOCK_LABEL_PREFIX            158.
         GBLC  &STRCXSV           EXIT_SEVERITY                 160.
         GBLC  &STRCHEX(16)       HEX                           162.
         GBLC  &STRCHXO           HEX_OUT                       163.
         GBLC  &STRCPSA           PREV_SAVETRACE_AREA           164.
         GBLC  &STRCPSP           PREV_SAVETRACE_PTR            166.
.* DEBUG FLAGS
         GBLB  &STRCDBC           DEBUG_BLOCKCOUNTS_REQD        173.
         GBLB  &STRCDBN           DEBUG_BLOCKNAMES_REQD         175.
         GBLB  &STRCDCV           DEBUG_CORPVALUES_REQD         177.
         GBLB  &STRCDDM           DEBUG_DEBUGMACROS_REQD        179.
         GBLB  &STRCDLB           DEBUG_LISTBLOCKS_REQD         181.
         GBLB  &STRCDMN           DEBUG_MACRONAMES_REQD         184.
         GBLB  &STRCDPC           DEBUG_PROCCOUNTS_REQD         187.
         GBLB  &STRCDPN           DEBUG_PROCNAMES_REQD          189.
         GBLB  &STRCDPT           DEBUG_PROCTRACE_REQD          191.
         GBLB  &STRCDST           DEBUG_SAVETRACE_REQD          193.
.* MAIN STACK
         GBLA  &STRCNST           CURRENT_NEST_LEVEL            200.
         GBLA  &STRCNSL           NESTING_LIMIT                 202.
         GBLA  &STRCBL#(100)      BLOCK_NUMBER                  203.
         GBLB  &STRCEND(100)      END_LABEL_REQD                206.
         GBLB  &STRCXIT(100)      EXIT_LABEL_REQD               208.
         GBLC  &STRCNAM(100)      BLOCK_NAME                    212.
         GBLC  &STRCTYP(100)      BLOCK_TYPE                    215.
         GBLC  &STRCOP1(100)      OPERAND1                      217.
         GBLC  &STRCOP2(100)      OPERAND2                      217.
         GBLC  &STRCOP3(100)      OPERAND3                      217.
         GBLC  &STRCOP4(100)      OPERAND4                      217.
         GBLC  &STRCINF(100)      INFORMATION                   217.
.* GCASE STACK
         GBLA  &STRCMCV(9)        MAX_CASE_VALUE                230.
         GBLA  &STRCCL#(9)        NEXT_COMP_LABEL_NO            231.
         GBLA  &STRCGNL           GCASE_NEST_LEVEL              233.
         GBLA  &STRCGNX           GCASE_NEST_LIMIT              236.
         GBLB  &STRCOCC(2304)     CASE_OCCURS                   240.
.* CEP PSEUDOS
         GBLA  &STRCFRX           FIRST_INDEX                   247.
         GBLA  &STRCLSX           LAST_INDEX                    248.
         GBLB  &STRCUFC           ULTIMATE_FALLTHRU_CONDITION   253.
         GBLB  &STRCFLU           FALLTHRU_LABEL_USED           256.
         GBLC  &STRCUBL           ULTIMATE_BRANCH_LABEL         260.
         GBLC  &STRCUFL           ULTIMATE_FALLTHRU_LABEL       263.
         GBLC  &STRCUID           UNIQUE_LABEL_ID               269.
.*
./ ADD NAME=STRCPOP  8512-86097-86097-1148-00025-00025-00000-ISPFDYN
         MACRO
         STRCPOP  &OLDEXIT                                    92002.
         COPY  STRCGBLS
         STRCTRAC  STRCPOP                                    92005.
         AIF   (&STRCNST GT &STRCNSL).M037                    92007.
         AIF   (NOT &STRCEND(&STRCNST)).M012                  92011.
$&STRCBL#(&STRCNST)END  DS  0H
.M012    AIF   (NOT &STRCXIT(&STRCNST) AND '&OLDEXIT' EQ '').M028
         AIF   ('&STRCXSV' NE '').M018                        92015.
&STRCXSV SETC  '0'                                            92017.
.M018    MNOTE &STRCXSV,' STRC9201 ONE OR MORE EXIT''S REFERENCE THIS P*
               OINT'                                          92020.
         AIF   (NOT &STRCXIT(&STRCNST)).M024                  92021.
         MNOTE &STRCXSV,'          VIA $&STRCBL#(&STRCNST)XIT'
$&STRCBL#(&STRCNST)XIT  DS  0H
.M024    AIF   ('&OLDEXIT' EQ '').M028                        92025.
         MNOTE &STRCXSV,'          VIA &OLDEXIT'
&OLDEXIT DS    0H
.M028    AIF   (NOT &STRCDLB).M037                            92030.
         MNOTE *,' STRC9202 END OF BLOCK &STRCBL#(&STRCNST)(&STRCNAM(&S*
               TRCNST)) AT DEPTH &STRCNST'                    92033.
         MNOTE *,'****************************************************'
.M037    ANOP
&STRCNST SETA  &STRCNST-1                                     92038.
         MEND
./ ADD NAME=STRCPUSH 8512-86097-86097-1148-00042-00042-00000-ISPFDYN
         MACRO
&NAMEVAL STRCPUSH  &TYPEVAL=,&OP1VAL=,&OP2VAL=,&OP3VAL=,      93001.   *
               &OP4VAL=,&INFVAL=,&ENDVAL=0                    93001.
         COPY  STRCGBLS
         STRCTRAC  STRCPUSH                                   93013.
&STRCNSL SETA  100                                            93015.
&STRCGNX SETA  9                                              39016.1
&STRCERR SETB  0                                              93021.
&STRCNST SETA  &STRCNST+1                                     93022.
         AIF   (&STRCNST LE &STRCNSL).M028                    93023.
         MNOTE 12,' STRC9301 BLOCK NESTING LIMIT OF &STRCNSL EXCEEDED'
         MNOTE 0,'           MACROS MUST BE MODIFIED'         93025.
&STRCERR SETB  1                                              93027.
         AGO   .M059                                          93028.
.M028    ANOP
&STRCLB# SETA  &STRCLB#+1                                     93029.
&STRCBL#(&STRCNST)  SETA  &STRCLB#                            93031.
&STRCXIT(&STRCNST)  SETB  0                                   93032.
&STRCTYP(&STRCNST)  SETC  '&TYPEVAL'                          93033.
&STRCOP1(&STRCNST)  SETC  '&OP1VAL'                           93034.
&STRCOP2(&STRCNST)  SETC  '&OP2VAL'                           93035.
&STRCOP3(&STRCNST)  SETC  '&OP3VAL'                           93036.
&STRCOP4(&STRCNST)  SETC  '&OP4VAL'                           93037.
&STRCINF(&STRCNST)  SETC  '&INFVAL'                           93038.
&STRCEND(&STRCNST)  SETB  ('&ENDVAL' EQ '1')                  93039.
&STRCNAM(&STRCNST)  SETC  '&NAMEVAL'                          93040.
         AIF   ('&NAMEVAL' NE '').M044                        93041.
&STRCNAM(&STRCNST)  SETC  'BLK&STRCLB#'                       93043.
.M044    ANOP
&STRCPFX SETC  '$&STRCLB#'                                    93045.
         AIF   (&STRCNST LE 1).M52                            93046.
         AIF   ('&STRCTYP(&STRCNST-1)' NE 'DOCASE' OR                  *
               '&TYPEVAL' EQ 'CASE').M52                      93046.
         MNOTE 8,' STRC9302 NON-CASE BLOCK IMMEDIATELY SURROUNDED'
         MNOTE 0,'                BY DOCASE INVALID'
.M52     AIF   (NOT &STRCDLB).M058                            93053.
         MNOTE *,'****************************************************'
         MNOTE *,' STRC9302 START OF BLOCK &STRCLB#.(&STRCNAM(&STRCNST)*
               ) AT DEPTH &STRCNST'                           93056.
.M058    ANOP
.M059    ANOP
         MEND
./ ADD NAME=STRCSCND 8512-86097-86097-1148-00070-00070-00000-ISPFDYN
         MACRO
&LABEL   STRCSCND  &OPCODE,&OPER1,&OPER2,&OPER3,&OPER4,&BRANCH,        *
               &FALTHRU,&OPCOUNT                              94001.
         COPY  STRCGBLS
         LCLC  &LOCMASK           LOCAL_MASK                  94013.
         LCLC  &LOCREL            LOCAL_REL                   94013.
         LCLC  &BCTAG             BC_TAG                      94014.
         STRCTRAC  STRCSCND                                   94016.
.*       CALL  SIMPCOND_GET_MASK_OR_REL                       94018.
         AIF   (&OPCOUNT NE 0).M079                           94075.
         MNOTE 8,' STRC9403 NO CONDITION SPECIFIED--"MASK=0" ASSUMED'
&LOCMASK SETC  '0'                                            94078.
         AGO   .M109                                          94079.
.M079    AIF   ('&SYSLIST(&OPCOUNT)'(1,5) NE 'MASK=').M083    94080.
&LOCMASK SETC  '&SYSLIST(&OPCOUNT)'(6,8)                      94082.
         AGO   .M109                                          94083.
.M083    AIF   ('&SYSLIST(&OPCOUNT)'(1,4) NE 'REL=').M087     94084.
&LOCREL  SETC  '&SYSLIST(&OPCOUNT)'(5,8)                      94086.
         AGO   .M089                                          94087.
.M087    ANOP
&LOCREL  SETC  '&SYSLIST(&OPCOUNT)'                           94088.
.M089    AIF   ('&LOCREL' NE 'GT').M095                       94092.
&LOCREL  SETC  'H'                                            94093.
         AGO   .M109                                          94094.
.M095    AIF   ('&LOCREL' NE 'GE').M098                       94095.
&LOCREL  SETC  'NL'                                           94096.
         AGO   .M109                                          94097.
.M098    AIF   ('&LOCREL' NE 'EQ').M101                       94098.
&LOCREL  SETC  'E'                                            94099.
         AGO   .M109                                          94100.
.M101    AIF   ('&LOCREL' NE 'LT').M104                       94101.
&LOCREL  SETC  'L'                                            94102.
         AGO   .M109                                          94103.
.M104    AIF   ('&LOCREL' NE 'LE').M109                       94104.
&LOCREL  SETC  'NH'                                           94105.
.M109    ANOP
.*       CORP  SIMPCOND_GET_MASK_OR_REL                       94110.
         AIF   (&OPCOUNT NE 1).M027                           94024.
&BCTAG   SETC  '&LABEL'                                       94025.
         AGO   .M046                                          94026.
.M027    AIF   (&OPCOUNT NE 2).M031                           94027.
         MNOTE 8,' STRC9401 INSUFFICIENT OPERANDS FOR TEST "&OPCODE"'
         AGO   .M046                                          94030.
.M031    AIF   (&OPCOUNT NE 3).M034                           94031.
&LABEL   &OPCODE  &OPER1
         AGO   .M046                                          94033.
.M034    AIF   (&OPCOUNT NE 4).M038                           94034.
&LABEL   &OPCODE  &OPER1,&OPER2
         AGO   .M046                                          94037.
.M038    AIF   (&OPCOUNT NE 5).M042                           94038.
&LABEL   &OPCODE  &OPER1,&OPER2,&OPER3
         AGO   .M046                                          94041.
.M042    MNOTE 8,' STRC9402 SUPERFLUOUS OPERANDS FOR TEST "&OPCODE"'
&LABEL   &OPCODE  &OPER1,&OPER2,&OPER3
.M046    AIF   ('&LOCMASK' NE '').M059                        94047.
         AIF   ('&FALTHRU' EQ '0').M057                       94049.
         AIF   ('&LOCREL'(1,1) NE 'N').M054                   94051.
&LOCREL  SETC  '&LOCREL'(2,7)                                 94053.
         AGO   .M057                                          94054.
.M054    ANOP
&LOCREL  SETC  'N&LOCREL'                                     94055.
.M057    ANOP
&BCTAG   B&LOCREL    &BRANCH
         AGO   .M067                                          94059.
.M059    AIF   ('&FALTHRU' EQ '0').M064                       94060.
&BCTAG   BC    X'F'-(&LOCMASK),&BRANCH
         AGO   .M067                                          94064.
.M064    ANOP
&BCTAG   BC    &LOCMASK,&BRANCH
.M067    MEND
./ ADD NAME=STRCTDL  8512-86097-86097-1148-00045-00045-00000-ISPFDYN
         MACRO
         STRCTDL
         COPY  STRCGBLS
         LCLB  &LBLABRQ           LB_LABEL_REQ                98007.
         LCLC  &X                 X                           98010.
         LCLC  &LABEL             LABEL                       98011.
         LCLC  &BR8,&BR10,&BR11   BRANCH8,BRANCH10,BRANCH11   98012.
         LCLC  &LBOPCOD           LB_OPCODE                   98014.
         LCLC  &OPER1,&OPER2      OPER1,OPER2                 98014.
         STRCTRAC  STRCTDL                                    98017.
&X       SETC  '&STRCINF(&STRCNST)'                           98019.
&BR8     SETC  '&X'(1,1)                                      98020.
&BR10    SETC  '&X'(2,1)                                      98021.
&BR11    SETC  '&X'(3,1)                                      98022.
&LBLABRQ SETB  ('&X'(4,1) EQ '1')                             98023.
&OPER1   SETC  '&STRCOP1(&STRCNST)'                           98024.
&OPER2   SETC  '&STRCOP2(&STRCNST)'                           98025.
&LBOPCOD SETC  '&STRCOP3(&STRCNST)'                           98026.
&STRCPFX SETC  '$&STRCBL#(&STRCNST)'                          98027.
         AIF   (NOT &LBLABRQ).M033                            98028.
&LABEL   SETC  '&STRCPFX.LPB'                                 98030.
.M033    AIF   ('&BR8' NE 'W' AND '&BR8' NE 'U').M038         98035.
         B     &STRCPFX&BR8.1
         AGO   .M044                                          98037.
.M038    AIF   ('&BR8' NE 'B').M044                           98038.
         B     &STRCPFX.BEG
.M044    ANOP
&STRCTFT SETB  0                                              98045.
         AIF   ('&LBOPCOD' EQ '').M072                        98046.
&STRCTFT SETB  1                                              98048.
         AIF   ('&BR10' NE 'B').M053                          98050.
&X       SETC  'BEG'                                          98052.
         AGO   .M055                                          98053.
.M053    ANOP
&X       SETC  '&BR10.1'                                      98054.
.M055    AIF   ('&LBOPCOD' NE 'BCT').M060                     98056.
&LABEL   BCT   &OPER1,&STRCPFX&X
         AGO   .M063                                          98060.
.M060    ANOP
&LABEL   &LBOPCOD   &OPER1,&OPER2,&STRCPFX&X
.M063    AIF   ('&BR11' EQ 'N').M071                          98064.
         B     &STRCPFX&BR11.1
&STRCTFT SETB  0                                              98069.
.M071    ANOP
.M072    MEND
./ ADD NAME=STRCTRAC 8512-86097-86097-1148-00006-00006-00000-ISPFDYN
         MACRO
         STRCTRAC  &MACNAME                                   95001.
         COPY  STRCGBLS
         AIF   (NOT &STRCDMN).M007                            95004.
         MNOTE  *,' STRC9500 &MACNAME'                        95006.
.M007    MEND
./ ADD NAME=STRCVERF 8512-86097-86097-1148-00053-00053-00000-ISPFDYN
         MACRO
         STRCVERF  &REQTYPE,&REQNAME                          96001.
         COPY  STRCGBLS
         LCLA  &I                 I                           96006.
         STRCTRAC  STRCVERF                                   96008.
&STRCERR SETB  0                                              96010.
         AIF   ('&REQNAME' NE '').M043                        96011.
         AIF   (&STRCNST GT 0).M017                           96013.
         MNOTE 8,' STRC9607 NO BLOCKS ACTIVE--MACRO IGNORED'  96015.
&STRCERR SETB  1                                              96016.
         AGO   .M076                                          96017.
.M017    AIF   (&STRCNST LT 1).M076                           96018.
         AIF   ('&STRCTYP(&STRCNST)' EQ '&REQTYPE').M076      96018.
         AIF   (&STRCNST LT 2).M027                           96021.
         AIF   ('&STRCTYP(&STRCNST-1)' NE '&REQTYPE').M027    96021.
         MNOTE 8,' STRC9601 ONE BLEND ASSUMED TO GET TO "&REQTYPE" BLOC*
               K'                                             96024.
         BLEND
         AGO   .M076                                          96027.
.M027    AIF   (&STRCNST LT 3).M035                           96028.
         AIF   ('&STRCTYP(&STRCNST-2)' NE '&REQTYPE').M035    96028.
         MNOTE 8,' STRC9602 TWO BLENDS ASSUMED TO GET TO "&REQTYPE" BLO*
               CK'                                            96031.
         BLEND
         BLEND
         AGO   .M076                                          96035.
.M035    MNOTE 8,' STRC9603 CURRENT BLOCK IS NOT "&REQTYPE" BLOCK'
         MNOTE 0,'          MACRO IGNORED'                    96037.
&STRCERR SETB  1                                              96038.
         AGO   .M076                                          96043.
.M043    ANOP
&I       SETA  &STRCNST                                       96044.
.M045    AIF   (&I LE 0).M048                                 96045.
         AIF   ('&REQNAME' EQ '&STRCNAM(&I)').M048            96045.
&I       SETA  &I-1                                           96046.
         AGO   .M045                                          96048.
.M048    AIF   (&I GT 0).M054                                 96050.
         MNOTE 8,' STRC9604 NO ACTIVE BLOCK NAMED "&REQNAME"' 96052.
&STRCERR SETB  1                                              96053.
         AGO   .M076                                          96054.
.M054    AIF   ('&REQTYPE' EQ '&STRCTYP(&I)').M060            96055.
         MNOTE 8,' STRC9605 BLOCK "&REQNAME" IS NOT A "&REQTYPE" BLOCK'
         MNOTE 0,'          MACRO IGNORED'                    96057.
&STRCERR SETB  1                                              96059.
         AGO   .M076                                          96060.
.M060    ANOP
.M061    AIF   (&STRCNST LE &I).M070                          96061.
         MNOTE 8,' STRC9606 END OF BLOCK "&REQNAME" IMPLIES END OF'
         MNOTE 0,'          BLOCK "&STRCNAM(&STRCNST)"'       96063.
         BLEND
         AGO   .M061                                          96070.
.M070    ANOP
.M076    MEND
./ ADD NAME=STRCXFND 8512-86097-86097-1148-00047-00047-00000-ISPFDYN
         MACRO
         STRCXFND  &REQNAME                                   91001.
         COPY  STRCGBLS
         LCLA  &I                 I                           91006.
         STRCTRAC  STRCXFND                                   91008.
&STRCERR SETB  0                                              91010.
&I       SETA  &STRCNST-1                                     91012.
         AIF   ('&REQNAME' EQ '' OR '&REQNAME' EQ '*').M021   91013.
.M015    AIF   (&I LE 0).M019                                 91015.
         AIF   ('&REQNAME' EQ '&STRCNAM(&I)').M019            91015.
         AIF   ('&STRCTYP(&I)' EQ 'PROC').M019                91015.
&I       SETA  &I-1                                           91018.
         AGO   .M015                                          91019.
.M019    ANOP
.M021    AIF   (&I LE 0).M024                                 91022.
         AIF   ('&REQNAME' EQ '&STRCNAM(&I)').M041            91023.
         AIF   ('&REQNAME' EQ '' OR '&REQNAME' EQ '*').M041   91023.
.M024    ANOP
&STRCERR SETB  1                                              91025.
         AIF   ('&REQNAME' NE '' AND '&REQNAME' NE '*').M029
         MNOTE 8,' STRC9101 EXIT MACRO NOT SUFFICIENTLY NESTED'
         AGO   .M057                                          91029.
.M029    AIF   ('&REQNAME' NE '&STRCNAM(&STRCNST)').M033      91030.
         MNOTE 8,' STRC9103 EXIT TO IMMEDIATELY SURROUNDING BLOCK'
         MNOTE 0,'          INVALID'                          91032.
         AGO   .M057                                          91033.
.M033    MNOTE 8,' STRC9102 NO BLOCK ACTIVE NAMED "&REQNAME"' 91034.
         AIF   (&I LE 0).M038                                 91035.
         MNOTE 0,'          WITHIN PROC "&STRCNAM(&I)"'       91037.
.M038    AGO   .M057                                          91038.
.M041    AIF   ('&STRCTYP(&I)' NE 'DO').M049                  91042.
         AIF   ('&STRCINF(&I)'(6,2) EQ '00').M049             91044.
         MNOTE 8,' STRC9104 EXIT TO DO BLOCK INVALID WITHIN ATEND OR'
         MNOTE 0,'                ONEXIT'                     91046.
&STRCERR SETB  1                                              91047.
         AGO   .M057                                          91048.
.M049    AIF   ('&STRCTYP(&I)' NE 'PROC').M053                91049.
         AIF   ('&STRCINF(&I)'(8,1) NE '1').M053              91049.
&STRCUBL SETC  '&STRCINF(&I)'(6,2)                            91051.
&STRCUBL SETC  '$P&STRCUBL.XIT'                               91051.
         AGO   .M054                                          91052.
.M053    ANOP
&STRCUBL SETC  '$&STRCBL#(&I)XIT'                             91053.
.M054    ANOP
&STRCXIT(&I)  SETB  1                                         91055.
.M057    ANOP
         MEND
./ ADD NAME=STRCXHEX 8512-86097-86097-1148-00027-00027-00000-ISPFDYN
         MACRO
         STRCXHEX
         COPY  STRCGBLS
         LCLA  &I,&J              I, J                        99004.
         STRCTRAC  STRCXHEX                                   99006.
         AIF   ('&STRCHEX(1)' EQ '0').M014                    99008.
&STRCHEX(1)  SETC  '0'                                        99010.
&STRCHEX(2)  SETC  '1'                                        99010.
&STRCHEX(3)  SETC  '2'                                        99010.
&STRCHEX(4)  SETC  '3'                                        99010.
&STRCHEX(5)  SETC  '4'                                        99011.
&STRCHEX(6)  SETC  '5'                                        99011.
&STRCHEX(7)  SETC  '6'                                        99011.
&STRCHEX(8)  SETC  '7'                                        99011.
&STRCHEX(9)  SETC  '8'                                        99012.
&STRCHEX(10) SETC  '9'                                        99012.
&STRCHEX(11) SETC  'A'                                        99012.
&STRCHEX(12) SETC  'B'                                        99012.
&STRCHEX(13) SETC  'C'                                        99013.
&STRCHEX(14) SETC  'D'                                        99013.
&STRCHEX(15) SETC  'E'                                        99013.
&STRCHEX(16) SETC  'F'                                        99013.
.M014    ANOP
&I       SETA  &STRCHXI/16                                    99015.
&J       SETA  &STRCHXI-&I*16+1                               99016.
&STRCHXO SETC  '&STRCHEX(&I+1)&STRCHEX(&J)'                   99017.
         MEND
./ ADD NAME=TBADD    8512-85095-85095-1208-00206-00206-00000-ISPFDYN
         MACRO
&NAME    TBADD &TABLE,                  TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &SAVE=,                  SAVE NAME-LIST                 *
               &ORDER=,                 ORDER KEYWORD                  *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBADD,&SPFDEBUG,&SPFVAR,&SPFORDER,&SPFNULLC
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBADD &TABLE,&P2,&P3,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
         AIF   ('&ORDER' EQ '').K1
         AIF   ('&ORDER'(1,1) NE '''' OR '&ORDER' EQ '''ORDER''').K1
         MNOTE 4,'WARNING - ORDER KEYWORD EXPECTED IN QUOTES'
.K1      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBADD).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&SAVE' EQ '').CNT2
         AIF   ('&SAVE'(1,1) EQ '''').GENLIT
.CNT2    AIF   ('&ORDER' EQ '').CNT3
         AIF   ('&ORDER'(1,1) EQ '''').GENLIT
.CNT3    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBADD).BYP20
TBADD    DC    CL8'TBADD'               ISPF KEYWORD
&SPFTBADD SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
         AIF   ('&SAVE' EQ '').BYP50
         AIF   ('&SAVE'(1,1) NE '''').BYP50
SPFS&NDX DC    C&SAVE                   GENERATED NAME-LIST
.BYP50   ANOP
         AIF   ('&ORDER' EQ '').BYP60
         AIF   ('&ORDER'(1,1) NE '''').BYP60
SPFX&NDX DC    CL8&ORDER                ISPF KEYWORD
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8' '                   ISPF DUMMY PARM
&SPFNULLC SETB 1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBADD                 GET ADDRESS OF TBADD KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         AIF   ('&SAVE' EQ '').BYP140
         AIF   ('&SAVE'(1,1) EQ '''').BYP130
         LA    0,&SAVE                  GET ADDRESS OF NAME-LIST
         AGO   .BYP150
.BYP130  ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SAVE
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR NAME-LIST
.BYP150  ANOP
         AIF   ('&ORDER' EQ '').BYP170
         AIF   ('&ORDER'(1,1) EQ '''').BYP175
         LA    1,&ORDER                 GET ADDRESS OF ORDER
         AGO   .BYP180
.BYP170  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ORDER
         AGO   .BYP180
.BYP175  ANOP
         LA    1,SPFX&NDX               GET GENNED ORDER KEYWORD
.BYP180  ANOP
         STM   14,1,&TEMP               STORE PARAMETERS
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBADD)                 BROWSE LITERAL
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE)                ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE
.BYP220  ANOP
         AIF   ('&SAVE' EQ '').BYP240
         AIF   ('&SAVE'(1,1) EQ '''').BYP230
         DC    A(&SAVE)                 ADDRESS OF NAME LIST
         AGO   .BYP250
.BYP230  ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED NAME LIST
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAME LIST
.BYP250  ANOP
         AIF   ('&ORDER' EQ '').BYP270
         AIF   ('&ORDER'(1,1) EQ '''').BYP275
         DC    A(&ORDER+X'80000000')    ADDRESS OF ORDER KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR ORDER
         AGO   .BYP300
.BYP275  ANOP
         DC    A(SPFX&NDX+X'80000000')  GENNED ORDER KEYWORD
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'EXPECTED ORDER KEYWORD - FOUND ''&ORDER'''
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBBOTTOM 8512-85095-85095-1208-00283-00283-00000-ISPFDYN
         MACRO
&NAME    TBBOTTOM &TABLE,               TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &SAVE=,                  SAVE NAME-LIST                 *
               &ROWID=,                 ROW ID NAME                    *
               &NOREAD=,                NOREAD KEYWORD                 *
               &POSITION=,              POSITION NUMBER                *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBBOTTOM,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBBOTTO &TABLE,&P2,&P3,&P4,&P5,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AIF   ('&P5' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NOREAD' EQ '').K1
         AIF   ('&NOREAD'(1,1) NE '''' OR '&NOREAD' EQ '''NOREAD''').K1
         MNOTE 4,'WARNING - NOREAD KEYWORD EXPECTED IN QUOTES'
.K1      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBBOTTOM).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&SAVE' EQ '').CNT2
         AIF   ('&SAVE'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&ROWID' EQ '').CNT3
         AIF   ('&ROWID'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&NOREAD' EQ '').CNT3A
         AIF   ('&NOREAD'(1,1) EQ '''').GENLIT
.CNT3A   ANOP
         AIF   ('&POSITION' EQ '').CNT4
         AIF   ('&POSITION'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&POSITION' EQ '').CNT5
         AIF   ('&POSITION'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBBOTTOM).BYP20
TBBOTTOM DC    CL8'TBBOTTOM'            ISPF KEYWORD
&SPFTBBOTTOM SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&SAVE' EQ '').BYP40
         AIF   ('&SAVE'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&SAVE                 GENERATED SAVE NAME-LIST
.BYP40   ANOP
         AIF   ('&ROWID' EQ '').BYP50
         AIF   ('&ROWID'(1,1) NE '''').BYP50
SPFR&NDX DC    CL8&ROWID                GENERATED ROWID VAR NAME
.BYP50   ANOP
         AIF   ('&NOREAD' EQ '').BYP60
         AIF   ('&NOREAD'(1,1) NE '''').BYP60
SPFX&NDX DC    CL8&NOREAD               GENERATED NOREAD KEYWORD
.BYP60   ANOP
         AIF   ('&POSITION' EQ '').BYP70
         AIF   ('&POSITION'(1,1) NE '''').BYP70
SPFP&NDX DC    CL8&POSITION             GENERATED POSITION VAR
.BYP70   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBBOTTOM              GET ADDRESS OF TBBOTTOM KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&SAVE' EQ '').BYP1100
         AIF   ('&SAVE'(1,1) EQ '''').BYP1110
         LA    0,&SAVE                  GET ADDRESS OF SAVE NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR SAVE
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SAVE
.BYP1150 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP1200
         AIF   ('&ROWID'(1,1) EQ '''').BYP1210
         LA    1,&ROWID                 GET ADDRESS OF ROWID NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ROWID
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFR&NDX               GET ADDRESS OF GENERATED ROWID
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&NOREAD' EQ '').BYP1300
         AIF   ('&NOREAD'(1,1) EQ '''').BYP1305
         LA    14,&NOREAD               GET ADDRESS OF NOREAD KEYWORD
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR NOREAD
         AGO   .BYP1350
.BYP1305 ANOP
         LA    14,SPFX&NDX              GENNED KEYWORD FOR NOREAD
.BYP1350 ANOP
.*
         AIF   ('&POSITION' EQ '').BYP1400
         AIF   ('&POSITION'(1,1) EQ '''').BYP1410
         LA    15,&POSITION             GET ADDRESS OF POSITION NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR POSITION
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFP&NDX              GET ADDRESS OF GENERATED POS
.BYP1450 ANOP
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBBOTTOM)              TBBOTTOM LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&SAVE' EQ '').BYP2100
         AIF   ('&SAVE'(1,1) EQ '''').BYP2110
         DC    A(&SAVE)                 ADDRESS OF SAVE NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR SAVE NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED SAVE
.BYP2150 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP2200
         AIF   ('&ROWID'(1,1) EQ '''').BYP2210
         DC    A(&ROWID)                ADDRESS OF ROWID NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROWID
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROWID
.BYP2250 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP2300
         AIF   ('&NOREAD'(1,1) EQ '''').BYP2305
         DC    A(&NOREAD)               ADDRESS OF NOREAD KEYWORD
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NOREAD
         AGO   .BYP2350
.BYP2305 ANOP
         DC    A(SPFX&NDX)              GENNED KEYWORD FOR NOREAD
.BYP2350 ANOP
.*
         AIF   ('&POSITION' EQ '').BYP2400
         AIF   ('&POSITION'(1,1) EQ '''').BYP2410
         DC    A(&POSITION+X'80000000') ADDRESS OF POSITION NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR POSITION
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFP&NDX+X'80000000')  ADDRESS OF GENERATED POSITION
.BYP2450 ANOP
.*
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'NOREAD KEYWORD EXPECTED - FOUND ''&NOREAD'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBCLOSE  8512-85095-85095-1208-00270-00270-00000-ISPFDYN
         MACRO
&LABEL   TBCLOSE &TABLE,                TABLE NAME                     *
               &NEWCOPY,                NEWCOPY OR REPLCOPY            *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &NAME=,                  NAME FOR SAVE                  *
               &PAD=,                   PAD AMOUNT                     *
               &LIBRARY=,               LIBRARY                        *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBCLOSE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFNEWCOPY,&SPFREPLCOPY
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBCLOSE &TABLE,&NEWCOPY,&P3,&P4,&P5,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AIF   ('&P5' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NEWCOPY' NE '' AND '&NEWCOPY' NE 'NEWCOPY' AND       *
               '&NEWCOPY' NE 'REPLCOPY').ERR2
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBCLOSE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&NEWCOPY' EQ 'NEWCOPY' AND NOT &SPFNEWCOPY).GENLIT
         AIF   ('&NEWCOPY' EQ 'REPLCOPY' AND NOT &SPFREPLCOPY).GENLIT
         AIF   ('&NAME' EQ '').CNT3
         AIF   ('&NAME'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   (T'&PAD EQ 'N').GENLIT
         AIF   ('&LIBRARY' EQ '').CNT5
         AIF   ('&LIBRARY'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBCLOSE).BYP20
TBCLOSE  DC    CL8'TBCLOSE'             ISPF KEYWORD
&SPFTBCLOSE SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&NEWCOPY' EQ '').BYP40
         AIF   ('&NEWCOPY' NE 'NEWCOPY' OR &SPFNEWCOPY).BYP35
NEWCOPY  DC    CL8'NEWCOPY'             ISPF KEYWORD
&SPFNEWCOPY SETB 1
.BYP35   ANOP
         AIF   ('&NEWCOPY' NE 'REPLCOPY' OR &SPFREPLCOPY).BYP40
REPLCOPY DC    CL8'REPLCOPY'            ISPF KEYWORD
&SPFREPLCOPY SETB 1
.BYP40   ANOP
         AIF   ('&NAME' EQ '').BYP50
         AIF   ('&NAME'(1,1) NE '''').BYP50
SPFA&NDX DC    CL8&NAME                 GENERATED NAME NAME
.BYP50   ANOP
         AIF   (T'&PAD NE 'N').BYP60
SPFP&NDX DC    F'&PAD'                  GENERATED PAD AMOUNT
.BYP60   ANOP
         AIF   ('&LIBRARY' EQ '').BYP70
         AIF   ('&LIBRARY'(1,1) NE '''').BYP70
SPFL&NDX DC    CL8&LIBRARY              GENERATED LIBRARY
.BYP70   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBCLOSE               GET ADDRESS OF TBCLOSE KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&NEWCOPY' EQ '').BYP1100
         LA    0,&NEWCOPY               GET ADDRESS OF COPY NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR COPY
.BYP1150 ANOP
.*
         AIF   ('&NAME' EQ '').BYP1200
         AIF   ('&NAME'(1,1) EQ '''').BYP1210
         LA    1,&NAME                  GET ADDRESS OF NAME NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR NAME
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFA&NDX               GET ADDRESS OF GENERATED NAME
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&PAD' EQ '').BYP1300
         AIF   (T'&PAD EQ 'N').BYP1310
         LA    14,&PAD                  GET ADDRESS OF PAD AMOUNT
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR PAD AMT
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFP&NDX              GET ADDRESS OF GENERATED PAD
.BYP1350 ANOP
.*
         AIF   ('&LIBRARY' EQ '').BYP1400
         AIF   ('&LIBRARY'(1,1) EQ '''').BYP1410
         LA    15,&LIBRARY              GET ADDRESS OF LIBRARY NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR LIBRARY
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFL&NDX              GET ADDRESS OF GENERATED LIB
.BYP1450 ANOP
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBCLOSE)               TBCLOSE LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&NEWCOPY' EQ '').BYP2100
         DC    A(&NEWCOPY)              ADDRESS OF COPY NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR COPY NAME
.BYP2150 ANOP
.*
         AIF   ('&NAME' EQ '').BYP2200
         AIF   ('&NAME'(1,1) EQ '''').BYP2210
         DC    A(&NAME)                 ADDRESS OF NAME NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAME
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENERATED NAME
.BYP2250 ANOP
.*
         AIF   ('&PAD' EQ '').BYP2300
         AIF   (T'&PAD EQ 'N').BYP2310
         DC    A(&PAD)                  ADDRESS OF PAD AMOUNT
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PAD AMOUNT
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFP&NDX)              ADDRESS OF GENERATED PAD AMT
.BYP2350 ANOP
.*
         AIF   ('&LIBRARY' EQ '').BYP2400
         AIF   ('&LIBRARY'(1,1) EQ '''').BYP2410
         DC    A(&LIBRARY+X'80000000')  ADDRESS OF LIBRARY NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR LIBRARY
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFL&NDX+X'80000000')  ADDRESS OF GENERATED LIBRARY
.BYP2450 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'NEWCOPY OR REPLCOPY EXPECTED AS KEYWORD - FOUND ''&N*
               EWCOPY'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBCREATE 8512-85095-85095-1208-00361-00361-00000-ISPFDYN
         MACRO
&LBL     TBCREATE &TABLE,               TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &P6,                                                    *
               &P7,                                                    *
               &KEYS=,                  KEYS NAME LIST                 *
               &NAMES=,                 NAMES NAME LIST                *
               &WRITE=,                 WRITE NOWRITE KEYWORD          *
               &REPLACE=,               REPLACE KEYWORD                *
               &LIBRARY=,               LIBRARY                        *
               &SHARE=,                 SHARE STATUS                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBCREATE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBCREAT &TABLE,&P2,&P3,&P4,&P5,&P6,&P7,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AIF   ('&P5' NE '').LVLERR
         AIF   ('&P6' NE '').LVLERR
         AIF   ('&P7' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LBL' EQ '').BYP10
&LBL     DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&REPLACE' EQ '').K1
         AIF   ('&REPLACE'(1,1) NE '''').K1
         AIF   ('&REPLACE' EQ '''REPLACE''').K1
         MNOTE 4,'WARNING - REPLACE KEYWORD EXPECTED IN QUOTES'
.K1      ANOP
         AIF   ('&SHARE' EQ '').K2
         AIF   ('&SHARE'(1,1) NE '''' OR '&SHARE' EQ '''SHARE''').K2
         MNOTE 4,'WARNING - SHARE KEYWORD EXPECTED IN QUOTES'
.K2      ANOP
         AIF   ('&WRITE' EQ '').K3
         AIF   ('&WRITE'(1,1) NE '''').K3
         AIF   ('&WRITE' EQ '''WRITE''').K3
         AIF   ('&WRITE' EQ '''NOWRITE''').K3
         MNOTE 4,'WARNING - WRITE KEYWORD EXPECTED WRITE OR NOWRITE IN *
               QUOTES'
.K3      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBCREATE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&KEYS' EQ '').CNT2
         AIF   ('&KEYS'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&NAMES' EQ '').CNT3
         AIF   ('&NAMES'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&WRITE' EQ '').CNT4
         AIF   ('&WRITE'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&REPLACE' EQ '').CNT5
         AIF   ('&REPLACE'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AIF   ('&LIBRARY' EQ '').CNT6
         AIF   ('&LIBRARY'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AIF   ('&SHARE' EQ '').CNT7
         AIF   ('&SHARE'(1,1) EQ '''').GENLIT
.CNT7    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBCREATE).BYP20
TBCREATE DC    CL8'TBCREATE'            ISPF KEYWORD
&SPFTBCREATE SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&KEYS' EQ '').BYP40
         AIF   ('&KEYS'(1,1) NE '''').BYP40
SPFK&NDX DC    C&KEYS                   GENERATED KEYS NAME LIST
.BYP40   ANOP
         AIF   ('&NAMES' EQ '').BYP50
         AIF   ('&NAMES'(1,1) NE '''').BYP50
SPFN&NDX DC    C&NAMES                  GENERATED NAMELIST
.BYP50   ANOP
         AIF   ('&WRITE' EQ '').BYP60
         AIF   ('&WRITE'(1,1) NE '''').BYP60
SPFW&NDX DC    CL8&WRITE                GENERATED WRITE KEYWORD
.BYP60   ANOP
         AIF   ('&REPLACE' EQ '').BYP70
         AIF   ('&REPLACE'(1,1) NE '''').BYP70
SPFR&NDX DC    CL8&REPLACE              GENERATED REPLACE KEYWORD
.BYP70   ANOP
         AIF   ('&LIBRARY' EQ '').BYP80
         AIF   ('&LIBRARY'(1,1) NE '''').BYP80
SPFL&NDX DC    CL8&LIBRARY              GENERATED LIBRARY
.BYP80   ANOP
         AIF   ('&SHARE' EQ '').BYP90
         AIF   ('&SHARE'(1,1) NE '''').BYP90
SPFS&NDX DC    CL8&SHARE                GENERATED SHARE KEYWORD
.BYP90   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBCREATE              GET ADDRESS OF TBCREATE KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&KEYS' EQ '').BYP1100
         AIF   ('&KEYS'(1,1) EQ '''').BYP1110
         LA    0,&KEYS                  GET ADDRESS OF KEYS NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR KEYS
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFK&NDX               GET ADDRESS OF GENERATED KEYS
.BYP1150 ANOP
.*
         AIF   ('&NAMES' EQ '').BYP1200
         AIF   ('&NAMES'(1,1) EQ '''').BYP1210
         LA    1,&NAMES                 GET ADDRESS OF NAME NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR NAME
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFN&NDX               GET ADDRESS OF GENERATED NAME
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&WRITE' EQ '').BYP1300
         AIF   ('&WRITE'(1,1) EQ '''').BYP1305
         LA    14,&WRITE                GET ADDRESS OF WRITE NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR WRITE
         AGO   .BYP1350
.BYP1305 ANOP
         LA    14,SPFW&NDX              GET GENNED WRITE KEYWORD
.BYP1350 ANOP
.*
         AIF   ('&REPLACE' EQ '').BYP1400
         AIF   ('&REPLACE'(1,1) EQ '''').BYP1405
         LA    15,&REPLACE              GET ADDRESS OF REPLACE KEYWORD
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR REPLACE
         AGO   .BYP1450
.BYP1405 ANOP
         LA    15,SPFR&NDX              GET GENNED REPLACE KEYWORD
.BYP1450 ANOP
.*
         AIF   ('&LIBRARY' EQ '').BYP1500
         AIF   ('&LIBRARY'(1,1) EQ '''').BYP1510
         LA    0,&LIBRARY               GET ADDRESS OF LIB NAME
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR LIB
         AGO   .BYP1550
.BYP1510 ANOP
         LA    0,SPFL&NDX               GET ADDRESS OF GENERATED LIB
.BYP1550 ANOP
.*
         AIF   ('&SHARE' EQ '').BYP1600
         AIF   ('&SHARE'(1,1) EQ '''').BYP1605
         LA    1,&SHARE                 GET ADDRESS OF SHARE NAME
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR SHARE
         AGO   .BYP1650
.BYP1605 ANOP
         LA    1,SPFS&NDX               GET GENNED SHARE KEYWORD
.BYP1650 ANOP
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
         OI    &TEMP+28,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 8).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 8).BYPVARS
&SPFVARS SETA  8
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBCREATE)              TBCREATE LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&KEYS' EQ '').BYP2100
         AIF   ('&KEYS'(1,1) EQ '''').BYP2110
         DC    A(&KEYS)                 ADDRESS OF KEYS NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR KEYS NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFK&NDX)              ADDRESS OF GENERATED KEYS
.BYP2150 ANOP
.*
         AIF   ('&NAMES' EQ '').BYP2200
         AIF   ('&NAMES'(1,1) EQ '''').BYP2210
         DC    A(&NAMES)                ADDRESS OF NAME LIST
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAME
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFN&NDX)              ADDRESS OF GENERATED NAME
.BYP2250 ANOP
.*
         AIF   ('&WRITE' EQ '').BYP2300
         AIF   ('&WRITE'(1,1) EQ '''').BYP2305
         DC    A(&WRITE)                ADDRESS OF WRITE KEYWORD
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR WRITE
         AGO   .BYP2350
.BYP2305 ANOP
         DC    A(SPFW&NDX)              GENNED WRITE KEYWORD
.BYP2350 ANOP
.*
         AIF   ('&REPLACE' EQ '').BYP2400
         AIF   ('&REPLACE'(1,1) EQ '''').BYP2405
         DC    A(&REPLACE)              ADDRESS OF REPLACE KEYWORD
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR REPLACE
         AGO   .BYP2450
.BYP2405 ANOP
         DC    A(SPFR&NDX)              GENNED REPLACE KEYWORD
.BYP2450 ANOP
.*
         AIF   ('&LIBRARY' EQ '').BYP2500
         AIF   ('&LIBRARY'(1,1) EQ '''').BYP2510
         DC    A(&LIBRARY)              ADDRESS OF LIB NAME
         AGO   .BYP2550
.BYP2500 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR LIB
         AGO   .BYP2550
.BYP2510 ANOP
         DC    A(SPFL&NDX)              ADDRESS OF GENERATED LIB
.BYP2550 ANOP
.*
         AIF   ('&SHARE' EQ '').BYP2800
         AIF   ('&SHARE'(1,1) EQ '''').BYP2805
         DC    A(&SHARE+X'80000000')    ADDRESS OF SHARE KEYWORD
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR SHARE
         AGO   .BYP2850
.BYP2805 ANOP
         DC    A(SPFS&NDX+X'80000000')  GENNED SHARE KEYWORD
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'REPLACE KEYWORD EXPECTED - FOUND ''&REP'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'SHARE KEYWORD EXPECTED - FOUND ''&SHARE'''
         MEXIT
.ERR4    ANOP
         MNOTE 16,'WRITE/NOWRITE KEYWORD EXPECTED - FOUND ''&WRITE'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBDELETE 8512-85095-85095-1208-00126-00126-00000-ISPFDYN
         MACRO
&NAME    TBDELETE &TABLE,               TABLE NAME                     *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBDELETE,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBDELETE).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBDELETE).BYP20
TBDELETE DC    CL8'TBDELETE'            ISPF KEYWORD
&SPFTBDELETE SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBDELETE              GET ADDRESS OF TBDELETE KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         STM   14,15,&TEMP              STORE PARAMETERS
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBDELETE)              BROWSE LITERAL
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE+X'80000000')    ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX+X'80000000')  ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR TABLE
.BYP220  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBDISPL  8512-85095-85095-1208-00407-00407-00000-ISPFDYN
         MACRO
&NAME    TBDISPL &TABLE,                TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &P6,                                                    *
               &P7,                                                    *
               &P8,                                                    *
               &P9,                                                    *
               &PANEL=,                 PANEL NAME                     *
               &MSG=,                   MESSAGE ID                     *
               &CURSOR=,                CURSOR POSITION                *
               &CSRROW=,                TABLE ROW NUMBER               *
               &CSRPOS=,                CSR POSITION                   *
               &AUTOSEL=,               AUTOSEL INDICATOR              *
               &POSITION=,              ROW POINTED TO BY CRP          *
               &ROWID=,                 SPECIAL ROWN NUMBER            *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBDISPL,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBDISPL &TABLE,&P2,&P3,&P4,&P5,&P6,&P7,                      *
               &P8,&P9,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AIF   ('&P5' NE '').LVLERR
         AIF   ('&P6' NE '').LVLERR
         AIF   ('&P7' NE '').LVLERR
         AIF   ('&P8' NE '').LVLERR
         AIF   ('&P9' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&AUTOSEL' EQ '').K3
         AIF   ('&AUTOSEL'(1,1) NE '''').K3
         AIF   ('&AUTOSEL' EQ '''YES''').K3
         AIF   ('&AUTOSEL' EQ '''NO''').K3
         MNOTE 4,'WARNING - AUTOSEL KEYWORD EXPECTED TO BE YES OR NO'
.K3      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBDISPL).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&PANEL' EQ '').CNT2
         AIF   ('&PANEL'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&MSG' EQ '').CNT3
         AIF   ('&MSG'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&CURSOR' EQ '').CNT4
         AIF   ('&CURSOR'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&CSRROW' EQ '').CNT5
         AIF   (T'&CSRROW EQ 'N').GENLIT
.CNT5    ANOP
         AIF   ('&CSRPOS' EQ '').CNT6
         AIF   (T'&CSRPOS EQ 'N').GENLIT
.CNT6    ANOP
         AIF   ('&AUTOSEL' EQ '').CNT7
         AIF   ('&AUTOSEL'(1,1) EQ '''').GENLIT
.CNT7    ANOP
         AIF   ('&POSITION' EQ '').CNT8
         AIF   ('&POSITION'(1,1) EQ '''').GENLIT
.CNT8    ANOP
         AIF   ('&ROWID' EQ '').CNT9
         AIF   ('&ROWID'(1,1) EQ '''').GENLIT
.CNT9    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBDISPL).BYP20
TBDISPL  DC    CL8'TBDISPL'             ISPF KEYWORD
&SPFTBDISPL SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&PANEL' EQ '').BYP40
         AIF   ('&PANEL'(1,1) NE '''').BYP40
SPFP&NDX DC    CL8&PANEL                GENERATED PANEL NAME
.BYP40   ANOP
         AIF   ('&MSG' EQ '').BYP50
         AIF   ('&MSG'(1,1) NE '''').BYP50
SPFM&NDX DC    CL8&MSG                  GENERATED MSG NAME
.BYP50   ANOP
         AIF   ('&CURSOR' EQ '').BYP60
         AIF   ('&CURSOR'(1,1) NE '''').BYP60
SPFF&NDX DC    CL8&CURSOR               GENERATED CURSOR NAME
.BYP60   ANOP
         AIF   ('&CSRROW' EQ '').BYP70
         AIF   (T'&CSRROW NE 'N').BYP70
SPFR&NDX DC    F'&CSRROW'               GENERATED ROW NUMBER
.BYP70   ANOP
         AIF   ('&CSRPOS' EQ '').BYP80
         AIF   (T'&CSRPOS NE 'N').BYP80
SPFC&NDX DC    F'&CSRPOS'               GENERATED CSRPOS
.BYP80   ANOP
         AIF   ('&AUTOSEL' EQ '').BYP90
         AIF   ('&AUTOSEL'(1,1) NE '''').BYP90
SPFX&NDX DC    CL8&AUTOSEL              ISPF KEYWORD
.BYP90   ANOP
         AIF   ('&POSITION' EQ '').BYP100
         AIF   ('&POSITION'(1,1) NE '''').BYP100
SPFW&NDX DC    CL8&POSITION             GENERATED POSITION VALUE
.BYP100  ANOP
         AIF   ('&ROWID' EQ '').BYP110
         AIF   ('&ROWID'(1,1) NE '''').BYP110
SPFI&NDX DC    CL8&ROWID                GENERATED ROWID VALUE
.BYP110  ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF CURSOR
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBDISPL               GET ADDRESS OF TBDISPL KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&PANEL' EQ '').BYP1100
         AIF   ('&PANEL'(1,1) EQ '''').BYP1110
         LA    0,&PANEL                 GET ADDRESS OF PANEL NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR PANEL
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFP&NDX               GET ADDRESS OF GENERATED PANEL
.BYP1150 ANOP
.*
         AIF   ('&MSG' EQ '').BYP1200
         AIF   ('&MSG'(1,1) EQ '''').BYP1210
         LA    1,&MSG                   GET ADDRESS OF MSG NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR MSG
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFM&NDX               GET ADDRESS OF GENERATED MSG
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&CURSOR' EQ '').BYP1300
         AIF   ('&CURSOR'(1,1) EQ '''').BYP1310
         LA    14,&CURSOR               GET ADDRESS OF CURSOR NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR CURSOR
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFF&NDX              GET ADDRESS OF GENERATED CURSOR
.BYP1350 ANOP
.*
         AIF   ('&CSRROW' EQ '').BYP1400
         AIF   (T'&CSRROW EQ 'N').BYP1410
         LA    15,&CSRROW               GET ADDRESS OF ROW NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR ROW
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFR&NDX              GET ADDRESS OF GENERATED ROW
.BYP1450 ANOP
.*
         AIF   ('&CSRPOS' EQ '').BYP1500
         AIF   (T'&CSRPOS EQ 'N').BYP1510
         LA    0,&CSRPOS                GET ADDRESS OF CSRPOS NAME
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR CSRPOS
         AGO   .BYP1550
.BYP1510 ANOP
         LA    0,SPFC&NDX               GET ADDRESS OF GENERATED CSRPOS
.BYP1550 ANOP
.*
         AIF   ('&AUTOSEL' EQ '').BYP1600
         AIF   ('&AUTOSEL'(1,1) EQ '''').BYP1605
         LA    1,&AUTOSEL               GET ADDRESS OF AUTOSEL NAME
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR AUTOSEL
         AGO   .BYP1650
.BYP1605 ANOP
         LA    1,SPFX&NDX               GET GENNED AUTOSEL VALUE
.BYP1650 ANOP
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
         AIF   ('&POSITION' EQ '').BYP1700
         AIF   ('&POSITION'(1,1) EQ '''').BYP1710
         LA    14,&POSITION             GET ADDRESS OF POSITION NAME
         AGO   .BYP1750
.BYP1700 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR POSITION
         AGO   .BYP1750
.BYP1710 ANOP
         LA    14,SPFW&NDX              GET ADDRESS OF GENERATED CRPROW
.BYP1750 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP1800
         AIF   ('&ROWID'(1,1) EQ '''').BYP1810
         LA    15,&ROWID                GET ADDRESS OF ROWID NAME
         AGO   .BYP1850
.BYP1800 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR ROWID
         AGO   .BYP1850
.BYP1810 ANOP
         LA    15,SPFI&NDX              GET ADDRESS OF GENERATED ROWID
.BYP1850 ANOP
         STM   14,15,&TEMP+32           STORE PARAMETERS INTO LIST
         OI    &TEMP+36,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 10).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 10).BYPVARS
&SPFVARS SETA  10
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBDISPL)               TBDISPL LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&PANEL' EQ '').BYP2100
         AIF   ('&PANEL'(1,1) EQ '''').BYP2110
         DC    A(&PANEL)                ADDRESS OF PANEL NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PANEL NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFP&NDX)              ADDRESS OF GENERATED PANEL
.BYP2150 ANOP
.*
         AIF   ('&MSG' EQ '').BYP2200
         AIF   ('&MSG'(1,1) EQ '''').BYP2210
         DC    A(&MSG)                  ADDRESS OF MSG NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MSG
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFM&NDX)              ADDRESS OF GENERATED MSG
.BYP2250 ANOP
.*
         AIF   ('&CURSOR' EQ '').BYP2300
         AIF   ('&CURSOR'(1,1) EQ '''').BYP2310
         DC    A(&CURSOR)               ADDRESS OF CURSOR NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR CURSOR
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFF&NDX)              ADDRESS OF GENERATED CURSOR
.BYP2350 ANOP
.*
         AIF   ('&CSRROW' EQ '').BYP2400
         AIF   (T'&CSRROW EQ 'N').BYP2410
         DC    A(&CSRROW)               ADDRESS OF ROW NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROW
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROW
.BYP2450 ANOP
.*
         AIF   ('&CSRPOS' EQ '').BYP2500
         AIF   (T'&CSRPOS EQ 'N').BYP2510
         DC    A(&CSRPOS)               ADDRESS OF CSRPOS NAME
         AGO   .BYP2550
.BYP2500 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR CSRPOS
         AGO   .BYP2550
.BYP2510 ANOP
         DC    A(SPFC&NDX)              ADDRESS OF GENERATED CSRPOS
.BYP2550 ANOP
.*
         AIF   ('&AUTOSEL' EQ '').BYP2600
         AIF   ('&AUTOSEL'(1,1) EQ '''').BYP2605
         DC    A(&AUTOSEL)              ADDRESS OF AUTOSEL NAME
         AGO   .BYP2650
.BYP2600 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR AUTOSEL
         AGO   .BYP2650
.BYP2605 ANOP
         DC    A(SPFX&NDX)              GENNED AUTOSEL KEYWORD
.BYP2650 ANOP
.*
         AIF   ('&POSITION' EQ '').BYP2700
         AIF   ('&POSITION'(1,1) EQ '''').BYP2710
         DC    A(&POSITION)             ADDRESS OF POSITION NAME
         AGO   .BYP2750
.BYP2700 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR POSITION
         AGO   .BYP2750
.BYP2710 ANOP
         DC    A(SPFW&NDX)              ADDRESS OF GENERATED POSITION
.BYP2750 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP2800
         AIF   ('&ROWID'(1,1) EQ '''').BYP2810
         DC    A(&ROWID+X'80000000')    ADDRESS OF ROWID NAME
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR ROWID
         AGO   .BYP2850
.BYP2810 ANOP
         DC    A(SPFI&NDX+X'80000000')  ADDRESS OF GENERATED ROWID
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBEND    8512-85095-85095-1208-00126-00126-00000-ISPFDYN
         MACRO
&NAME    TBEND &TABLE,                  TABLE NAME                     *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBEND,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBEND).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBEND).BYP20
TBEND DC       CL8'TBEND'               ISPF KEYWORD
&SPFTBEND SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBEND                 GET ADDRESS OF TBEND KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         STM   14,15,&TEMP              STORE PARAMETERS
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBEND)                 BROWSE LITERAL
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE+X'80000000')    ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX+X'80000000')  ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR TABLE
.BYP220  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBERASE  8512-85095-85095-1208-00169-00169-00000-ISPFDYN
         MACRO
&NAME    TBERASE &MEM,                  MEMBER NAME                    *
               &P2,                                                    *
               &LIBRARY=,               LIBRARY NAME                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBERASE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBERASE &MEM,&P2,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&MEM' EQ '').ERR1
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBERASE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&MEM' EQ '').CNT1
         AIF   ('&MEM'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&LIBRARY' EQ '').CNT2
         AIF   ('&LIBRARY'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBERASE).BYP20
TBERASE  DC    CL8'TBERASE'             ISPF KEYWORD
&SPFTBERASE SETB 1
.BYP20   ANOP
         AIF   ('&MEM' EQ '').BYP40
         AIF   ('&MEM'(1,1) NE '''').BYP40
SPFM&NDX DC    CL8&MEM                  GENERATED MEMBER NAME
.BYP40   ANOP
         AIF   ('&LIBRARY' EQ '').BYP50
         AIF   ('&LIBRARY'(1,1) NE '''').BYP50
SPFL&NDX DC    CL8&LIBRARY              GENERATED LIBRARY
.BYP50   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBERASE               GET ADDRESS OF TBERASE KEYWORD
         AIF   ('&MEM' EQ '').BYP100
         AIF   ('&MEM'(1,1) EQ '''').BYP110
         LA    15,&MEM                  GET ADDRESS OF MEMBER
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFM&NDX              GET ADDRESS OF GENERATED MEMBER
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR MEMBER
.BYP120  ANOP
         AIF   ('&LIBRARY' EQ '').BYP140
         AIF   ('&LIBRARY'(1,1) NE '''').BYP130
         LA    0,SPFL&NDX               GET ADDRESS OF GENERATED LIB
         AGO   .BYP150
.BYP130  ANOP
         LA    0,&LIBRARY               GET ADDRESS OF LIBRARY
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR LIBRARY
.BYP150  ANOP
         STM   14,0,&TEMP               STORE PARAMETERS
         OI    &TEMP+8,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBERASE)               BROWSE LITERAL
         AIF   ('&MEM' EQ '').BYP200
         AIF   ('&MEM'(1,1) EQ '''').BYP210
         DC    A(&MEM)                  ADDRESS OF MEMBER
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFM&NDX)              ADDRESS OF GENERATED MEMBER
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MEMBER
.BYP220  ANOP
         AIF   ('&LIBRARY' EQ '').BYP240
         AIF   ('&LIBRARY'(1,1) NE '''').BYP230
         DC    A(SPFL&NDX+X'80000000')  ADDRESS OF GENERATED LIBRARY
         AGO   .BYP250
.BYP230  ANOP
         DC    A(&LIBRARY+X'80000000')  ADDRESS OF LIBRARY
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR LIBRARY
.BYP250  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'MEMBER NAME REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBEXIST  8512-85095-85095-1208-00126-00126-00000-ISPFDYN
         MACRO
&NAME    TBEXIST &TABLE,                TABLE NAME                     *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBEXIST,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBEXIST).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBEXIST).BYP20
TBEXIST DC     CL8'TBEXIST'             ISPF KEYWORD
&SPFTBEXIST SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBEXIST               GET ADDRESS OF TBEXIST KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         STM   14,15,&TEMP              STORE PARAMETERS
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBEXIST)               ISPF KEYWORD
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE+X'80000000')    ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX+X'80000000')  ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR TABLE
.BYP220  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBGET    8512-85095-85095-1208-00284-00284-00000-ISPFDYN
         MACRO
&NAME    TBGET &TABLE,                  TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &SAVENAME=,              SAVE NAME-LIST                 *
               &ROWID=,                 ROW ID NAME                    *
               &NOREAD=,                NOREAD KEYWORD                 *
               &POSITION=,              POSITION NUMBER                *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBGET,&SPFNULLC,&SPFDEBUG,&SPFVAR,&SPFNOREAD
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBGET &TABLE,&P2,&P3,&P4,&P5,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AIF   ('&P5' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NOREAD' EQ '').K3
         AIF   ('&NOREAD'(1,1) NE '''').K3
         AIF   ('&NOREAD' EQ '''NOREAD''').K3
         MNOTE 4,'WARNING - NOREAD KEYWORD EXPECTED NOREAD IN QUOTES'
.K3      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBGET).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&SAVENAME' EQ '').CNT2
         AIF   ('&SAVENAME'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&ROWID' EQ '').CNT3
         AIF   ('&ROWID'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&NOREAD' EQ '').CNT3A
         AIF   ('&NOREAD'(1,1) EQ '''').GENLIT
.CNT3A   ANOP
         AIF   ('&POSITION' EQ '').CNT4
         AIF   ('&POSITION'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&POSITION' EQ '').CNT5
         AIF   ('&POSITION'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBGET).BYP20
TBGET DC       CL8'TBGET'               ISPF KEYWORD
&SPFTBGET SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&SAVENAME' EQ '').BYP40
         AIF   ('&SAVENAME'(1,1) NE '''').BYP40
SPFS&NDX DC    CL8&SAVENAME             GENERATED SAVE
.BYP40   ANOP
         AIF   ('&ROWID' EQ '').BYP50
         AIF   ('&ROWID'(1,1) NE '''').BYP50
SPFR&NDX DC    CL8&ROWID                GENERATED ROWID VAR NAME
.BYP50   ANOP
         AIF   ('&NOREAD' EQ '').BYP60
         AIF   ('&NOREAD'(1,1) NE '''').BYP60
SPFX&NDX DC    CL8&NOREAD               GENERATED NOREAD KEYWORD
.BYP60   ANOP
         AIF   ('&POSITION' EQ '').BYP70
         AIF   ('&POSITION'(1,1) NE '''').BYP70
SPFP&NDX DC    CL8&POSITION             GENERATED POSITION VAR
.BYP70   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBGET                 GET ADDRESS OF TBGET KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&SAVENAME' EQ '').BYP1100
         AIF   ('&SAVENAME'(1,1) EQ '''').BYP1110
         LA    0,&SAVENAME              GET ADDRESS OF SAVE
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR SAVE
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SAVE
.BYP1150 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP1200
         AIF   ('&ROWID'(1,1) EQ '''').BYP1210
         LA    1,&ROWID                 GET ADDRESS OF ROWID NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ROWID
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFR&NDX               GET ADDRESS OF GENERATED ROWID
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&NOREAD' EQ '').BYP1300
         AIF   ('&NOREAD'(1,1) EQ '''').BYP1305
         LA    14,&NOREAD               GET ADDRESS OF NOREAD KEYWORD
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR NOREAD
         AGO   .BYP1350
.BYP1305 ANOP
         LA    14,SPFX&NDX              GENNED NOREAD KEYWORD
.BYP1350 ANOP
.*
         AIF   ('&POSITION' EQ '').BYP1400
         AIF   ('&POSITION'(1,1) EQ '''').BYP1410
         LA    15,&POSITION             GET ADDRESS OF POSITION NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR POSITION
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFP&NDX              GET ADDRESS OF GENERATED POS
.BYP1450 ANOP
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBGET)                 TBGET LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&SAVENAME' EQ '').BYP2100
         AIF   ('&SAVENAME'(1,1) EQ '''').BYP2110
         DC    A(&SAVENAME)             ADDRESS OF SAVE NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR SAVE
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED SAVE
.BYP2150 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP2200
         AIF   ('&ROWID'(1,1) EQ '''').BYP2210
         DC    A(&ROWID)                ADDRESS OF ROWID NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROWID
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROWID
.BYP2250 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP2300
         AIF   ('&NOREAD'(1,1) EQ '''').BYP2305
         DC    A(&NOREAD)               ADDRESS OF NOREAD KEYWORD
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NOREAD
         AGO   .BYP2350
.BYP2305 ANOP
         DC    A(SPFX&NDX)              GENNED NOREAD KEYWORD
.BYP2350 ANOP
.*
         AIF   ('&POSITION' EQ '').BYP2400
         AIF   ('&POSITION'(1,1) EQ '''').BYP2410
         DC    A(&POSITION+X'80000000') ADDRESS OF POSITION NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR POSITION
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFP&NDX+X'80000000')  ADDRESS OF GENERATED POSITION
.BYP2450 ANOP
.*
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'NOREAD KEYWORD EXPECTED - FOUND ''&NOREAD'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBMOD    8512-85095-85095-1208-00206-00206-00000-ISPFDYN
         MACRO
&NAME    TBMOD &TABLE,                  TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &SAVE=,                  SAVE NAME-LIST                 *
               &ORDER=,                 ORDER KEYWORD                  *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBMOD,&SPFDEBUG,&SPFVAR,&SPFNULLC
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBMOD &TABLE,&P2,&P3,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&ORDER' EQ '').K3
         AIF   ('&ORDER'(1,1) NE '''').K3
         AIF   ('&ORDER' EQ '''ORDER''').K3
         MNOTE 4,'WARNING - ORDER KEYWORD EXPECTED ENCLOSED IN QUOTES'
.K3      ANOP
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBMOD).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&ORDER' EQ '').CNT1A
         AIF   ('&ORDER'(1,1) EQ '''').GENLIT
.CNT1A   AIF   ('&SAVE' EQ '').CNT2
         AIF   ('&SAVE'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBMOD).BYP20
TBMOD    DC    CL8'TBMOD'               ISPF KEYWORD
&SPFTBMOD SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
         AIF   ('&SAVE' EQ '').BYP50
         AIF   ('&SAVE'(1,1) NE '''').BYP50
SPFS&NDX DC    C&SAVE                   GENERATED NAME-LIST
.BYP50   ANOP
         AIF   ('&ORDER' EQ '').BYP60
         AIF   ('&ORDER'(1,1) NE '''').BYP60
SPFX&NDX DC    CL8&ORDER                ISPF KEYWORD
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8' '                   ISPF DUMMY PARM
&SPFNULLC SETB 1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBMOD                 GET ADDRESS OF TBMOD KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         AIF   ('&SAVE' EQ '').BYP140
         AIF   ('&SAVE'(1,1) EQ '''').BYP130
         LA    0,&SAVE                  GET ADDRESS OF NAME-LIST
         AGO   .BYP150
.BYP130  ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SAVE
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR NAME-LIST
.BYP150  ANOP
         AIF   ('&ORDER' EQ '').BYP170
         AIF   ('&ORDER'(1,1) EQ '''').BYP175
         LA    1,&ORDER                 GET ADDRESS OF ORDER
         AGO   .BYP180
.BYP175  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ORDER
         AGO   .BYP180
.BYP170  ANOP
         LA    1,SPFX&NDX               GENNED ORDER KEYWORD
.BYP180  ANOP
         STM   14,1,&TEMP               STORE PARAMETERS
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBMOD)                 BROWSE LITERAL
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE)                ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE
.BYP220  ANOP
         AIF   ('&SAVE' EQ '').BYP240
         AIF   ('&SAVE'(1,1) EQ '''').BYP230
         DC    A(&SAVE)                 ADDRESS OF NAME LIST
         AGO   .BYP250
.BYP230  ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED NAME LIST
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAME LIST
.BYP250  ANOP
         AIF   ('&ORDER' EQ '').BYP270
         AIF   ('&ORDER'(1,1) EQ '''').BYP275
         DC    A(&ORDER+X'80000000')    ADDRESS OF ORDER KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR ORDER
         AGO   .BYP300
.BYP275  ANOP
         DC    A(SPFX&NDX+X'80000000')  GENNED ORDER KEYWORD
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'ORDER KEYWORD EXPECTED - FOUND ''&ORDER'''
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBOPEN   8512-85095-85095-1208-00258-00258-00000-ISPFDYN
         MACRO
&NAME    TBOPEN &TABLE,                 TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &WRITE=,                 WRITE/NOWRITE PARM             *
               &LIBRARY=,               LIBRARY                        *
               &SHARE=,                 SHARE OPERAND                  *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBOPEN,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFSHARE
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBOPEN &TABLE,&P2,&P3,&P4,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&WRITE' EQ '').K3
         AIF   ('&WRITE'(1,1) NE '''').K3
         AIF   ('&WRITE' EQ '''WRITE''').K3
         AIF   ('&WRITE' EQ '''NOWRITE''').K3
         MNOTE 4,'WARNING - WRITE KEYWORD EXPECTED WRITE OR NOWRITE IN *
               QUOTES'
.K3      ANOP
         AIF   ('&SHARE' EQ '').K2
         AIF   ('&SHARE'(1,1) NE '''').K2
         AIF   ('&SHARE' EQ '''SHARE''').K2
         MNOTE 4,'WARNING - SHARE KEYWORD EXPECTED ENCLOSED IN QUOTES'
.K2      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBOPEN).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&WRITE' EQ '').CNT2
         AIF   ('&WRITE'(1,1) EQ '''').GENLIT
.CNT2    AIF   ('&LIBRARY' EQ '').CNT3
         AIF   ('&LIBRARY'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&SHARE' EQ '').CNT4
         AIF   ('&SHARE'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBOPEN).BYP20
TBOPEN   DC    CL8'TBOPEN'              ISPF KEYWORD
&SPFTBOPEN SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&WRITE' EQ '').BYP40
         AIF   ('&WRITE'(1,1) NE '''').BYP40
SPFW&NDX DC    CL8&WRITE                ISPF KEYWORD
.BYP40   ANOP
         AIF   ('&LIBRARY' EQ '').BYP50
         AIF   ('&LIBRARY'(1,1) NE '''').BYP50
SPFL&NDX DC    CL8&LIBRARY              GENERATED LIBRARY NAME
.BYP50   ANOP
         AIF   ('&SHARE' EQ '').BYP60
         AIF   ('&SHARE'(1,1) NE '''').BYP60
SPFX&NDX DC    CL8&SHARE                ISPF KEYWORD
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBOPEN                GET ADDRESS OF TBOPEN KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&WRITE' EQ '').BYP1100
         AIF   ('&WRITE'(1,1) EQ '''').BYP1105
         LA    0,&WRITE                 GET ADDRESS OF WRITE NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR WRITE
         AGO   .BYP1150
.BYP1105 ANOP
         LA    0,SPFW&NDX               GENNED WRITE KEYWORD
.BYP1150 ANOP
.*
         AIF   ('&LIBRARY' EQ '').BYP1200
         AIF   ('&LIBRARY'(1,1) EQ '''').BYP1210
         LA    1,&LIBRARY               GET ADDRESS OF LIBRARY NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR LIBRARY
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFL&NDX               GET ADDRESS OF GENERATED LIB
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&SHARE' EQ '').BYP1300
         AIF   ('&SHARE'(1,1) EQ '''').BYP1305
         LA    14,&SHARE                GET ADDRESS OF FIELD NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR FIELD
         AGO   .BYP1350
.BYP1305 ANOP
         LA    14,SPFX&NDX              GENNED SHARE KEYWORD
.BYP1350 ANOP
.*
         ST    14,&TEMP+16              STORE PARAMETERS INTO LIST
         OI    &TEMP+16,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 5).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 5).BYPVARS
&SPFVARS SETA  5
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBOPEN)                TBOPEN LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&WRITE' EQ '').BYP2100
         AIF   ('&WRITE'(1,1) EQ '''').BYP2105
         DC    A(&WRITE)                ADDRESS OF WRITE NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR WRITE NAME
         AGO   .BYP2150
.BYP2105 ANOP
         DC    A(SPFW&NDX)              WRITE KEYWORD
.BYP2150 ANOP
.*
         AIF   ('&LIBRARY' EQ '').BYP2200
         AIF   ('&LIBRARY'(1,1) EQ '''').BYP2210
         DC    A(&LIBRARY)              ADDRESS OF LIBRARY NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR LIBRARY
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFL&NDX)              ADDRESS OF GENERATED LIBRARY
.BYP2250 ANOP
.*
         AIF   ('&SHARE' EQ '').BYP2300
         AIF   ('&SHARE'(1,1) EQ '''').BYP2305
         DC    A(&SHARE+X'80000000')    ADDRESS OF SHARE NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR SHARE
         AGO   .BYP2350
.BYP2305 ANOP
         DC    A(SPFX&NDX+X'80000000')  GENNED SHARE KEYWORD
.BYP2350 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'SHARE KEYWORD EXPECTED - FOUND ''&SHARE'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'WRITE NOWRITE KEYWORD EXPECTED - FOUND ''&WRITE'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBPUT    8512-85095-85095-1208-00206-00206-00000-ISPFDYN
         MACRO
&NAME    TBPUT &TABLE,                  TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &SAVE=,                  SAVE NAME-LIST                 *
               &ORDER=,                 ORDER KEYWORD                  *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBPUT,&SPFDEBUG,&SPFVAR,&SPFNULLC
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBPUT &TABLE,&P2,&P3,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&ORDER' EQ '').K3
         AIF   ('&ORDER'(1,1) NE '''').K3
         AIF   ('&ORDER' EQ '''ORDER''').K3
         MNOTE 4,'WARNING - ORDER KEYWORD EXPECTED ENCLOSED IN QUOTES'
.K3      ANOP
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBPUT).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    AIF   ('&ORDER' EQ '').CNT1A
         AIF   ('&ORDER'(1,1) EQ '''').GENLIT
.CNT1A   AIF   ('&SAVE' EQ '').CNT2
         AIF   ('&SAVE'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBPUT).BYP20
TBPUT    DC    CL8'TBPUT'               ISPF KEYWORD
&SPFTBPUT SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
         AIF   ('&SAVE' EQ '').BYP50
         AIF   ('&SAVE'(1,1) NE '''').BYP50
SPFS&NDX DC    C&SAVE                   GENERATED NAME-LIST
.BYP50   ANOP
         AIF   ('&ORDER' EQ '').BYP60
         AIF   ('&ORDER'(1,1) NE '''').BYP60
SPFX&NDX DC    CL8&ORDER                ISPF KEYWORD
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP70
SPFNULLC DC    CL8' '                   ISPF DUMMY PARM
&SPFNULLC SETB 1
.BYP70   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBPUT                 GET ADDRESS OF TBPUT KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         AIF   ('&SAVE' EQ '').BYP140
         AIF   ('&SAVE'(1,1) EQ '''').BYP130
         LA    0,&SAVE                  GET ADDRESS OF NAME-LIST
         AGO   .BYP150
.BYP130  ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENERATED SAVE
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR NAME-LIST
.BYP150  ANOP
         AIF   ('&ORDER' EQ '').BYP170
         AIF   ('&ORDER'(1,1) EQ '''').BYP175
         LA    1,&ORDER                 GET ADDRESS OF ORDER
         AGO   .BYP180
.BYP170  ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ORDER
         AGO   .BYP180
.BYP175  ANOP
         LA    1,SPFX&NDX               GENNED ORDER KEYWORD
.BYP180  ANOP
         STM   14,1,&TEMP               STORE PARAMETERS
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBPUT)                 BROWSE LITERAL
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE)                ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE
.BYP220  ANOP
         AIF   ('&SAVE' EQ '').BYP240
         AIF   ('&SAVE'(1,1) EQ '''').BYP230
         DC    A(&SAVE)                 ADDRESS OF NAME LIST
         AGO   .BYP250
.BYP230  ANOP
         DC    A(SPFS&NDX)              ADDRESS OF GENERATED NAME LIST
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAME LIST
.BYP250  ANOP
         AIF   ('&ORDER' EQ '').BYP270
         AIF   ('&ORDER'(1,1) EQ '''').BYP275
         DC    A(&ORDER+X'80000000')    ADDRESS OF ORDER KEYWORD
         AGO   .BYP300
.BYP270  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR ORDER
         AGO   .BYP300
.BYP275  ANOP
         DC    A(SPFX&NDX+X'80000000')  GENNED ORDER KEYWORD
.BYP300  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR1    ANOP
         MNOTE 16,'ORDER KEYWORD EXPECTED - FOUND ''&ORDER'''
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBQUERY  8512-85095-85095-1208-00320-00320-00000-ISPFDYN
         MACRO
&NAME    TBQUERY &TABLE,                TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &P6,                                                    *
               &P7,                                                    *
               &KEYS=,                  KEY NAME                       *
               &NAMES=,                 NAMES NAME                     *
               &ROWNUM=,                NUMBER OF ROWS                 *
               &KEYNUM=,                NUMBER OF KEYS                 *
               &NAMENUM=,               NUMBER OF NAMES                *
               &POSITION=,              CURRENT CRP                    *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBQUERY,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBQUERY).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&KEYS' EQ '').CNT2
         AIF   ('&KEYS'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&NAMES' EQ '').CNT3
         AIF   ('&NAMES'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&ROWNUM' EQ '').CNT4
         AIF   ('&ROWNUM'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&KEYNUM' EQ '').CNT5
         AIF   ('&KEYNUM'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AIF   ('&NAMENUM' EQ '').CNT6
         AIF   ('&NAMENUM'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AIF   ('&POSITION' EQ '').CNT7
         AIF   ('&POSITION'(1,1) EQ '''').GENLIT
.CNT7    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBQUERY).BYP20
TBQUERY  DC    CL8'TBQUERY'             ISPF KEYWORD
&SPFTBQUERY SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&KEYS' EQ '').BYP40
         AIF   ('&KEYS'(1,1) NE '''').BYP40
SPFK&NDX DC    CL8&KEYS                 GENERATED KEY NAMES NAME
.BYP40   ANOP
         AIF   ('&NAMES' EQ '').BYP50
         AIF   ('&NAMES'(1,1) NE '''').BYP50
SPFV&NDX DC    CL8&NAMES                GENERATED NAMES NAME
.BYP50   ANOP
         AIF   ('&ROWNUM' EQ '').BYP60
         AIF   ('&ROWNUM'(1,1) NE '''').BYP60
SPFR&NDX DC    CL8&ROWNUM               GENERATED ROWNUM NAMES
.BYP60   ANOP
         AIF   ('&KEYNUM' EQ '').BYP70
         AIF   ('&KEYNUM'(1,1) NE '''').BYP70
SPFE&NDX DC    CL8&KEYNUM               GENERATED KEYNUM NAMES
.BYP70   ANOP
         AIF   ('&NAMENUM' EQ '').BYP80
         AIF   ('&NAMENUM'(1,1) NE '''').BYP80
SPFA&NDX DC    CL8&NAMENUM              GENERATED VARNUM NAMES
.BYP80   ANOP
         AIF   ('&POSITION' EQ '').BYP90
         AIF   ('&POSITION'(1,1) NE '''').BYP90
SPFC&NDX DC    CL8&POSITION             GENERATED CRP NAMES
.BYP90   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBQUERY               GET ADDRESS OF TBQUERY KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&KEYS' EQ '').BYP1100
         AIF   ('&KEYS'(1,1) EQ '''').BYP1110
         LA    0,&KEYS                  GET ADDRESS OF KEY NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR KEY
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFK&NDX               GET ADDRESS OF GENERATED KEY
.BYP1150 ANOP
.*
         AIF   ('&NAMES' EQ '').BYP1200
         AIF   ('&NAMES'(1,1) EQ '''').BYP1210
         LA    1,&NAMES                 GET ADDRESS OF NAMES NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR NAMES
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFV&NDX               GET ADDRESS OF GENERATED NAMES
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&ROWNUM' EQ '').BYP1300
         AIF   ('&ROWNUM'(1,1) EQ '''').BYP1310
         LA    14,&ROWNUM               GET ADDRESS OF ROW NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR ROW
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFR&NDX              GET ADDRESS OF GENERATED ROW
.BYP1350 ANOP
.*
         AIF   ('&KEYNUM' EQ '').BYP1400
         AIF   ('&KEYNUM'(1,1) EQ '''').BYP1410
         LA    15,&KEYNUM               GET ADDRESS OF KEYNUM NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR KEYNUM
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFE&NDX              GET ADDRESS OF GENERATED KEY
.BYP1450 ANOP
.*
         AIF   ('&NAMENUM' EQ '').BYP1500
         AIF   ('&NAMENUM'(1,1) EQ '''').BYP1510
         LA    0,&NAMENUM               GET ADDRESS OF VARN NAME
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR VARN
         AGO   .BYP1550
.BYP1510 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENERATED VARN
.BYP1550 ANOP
.*
         AIF   ('&POSITION' EQ '').BYP1600
         AIF   ('&POSITION'(1,1) EQ '''').BYP1610
         LA    1,&POSITION              GET ADDRESS OF CRP NAME
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR CRP
         AGO   .BYP1650
.BYP1610 ANOP
         LA    1,SPFC&NDX               GET ADDRESS OF GENERATED CRP
.BYP1650 ANOP
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
         OI    &TEMP+28,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 8).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 8).BYPVARS
&SPFVARS SETA  8
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFQ&NDX               BRANCH AROUND LITERALS
         DC    A(TBQUERY)               TBQUERY LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&KEYS' EQ '').BYP2100
         AIF   ('&KEYS'(1,1) EQ '''').BYP2110
         DC    A(&KEYS)                 ADDRESS OF KEY NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR KEY NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFK&NDX)              ADDRESS OF GENERATED KEY
.BYP2150 ANOP
.*
         AIF   ('&NAMES' EQ '').BYP2200
         AIF   ('&NAMES'(1,1) EQ '''').BYP2210
         DC    A(&NAMES)                ADDRESS OF NAMES NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAMES
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED NAMES
.BYP2250 ANOP
.*
         AIF   ('&ROWNUM' EQ '').BYP2300
         AIF   ('&ROWNUM'(1,1) EQ '''').BYP2310
         DC    A(&ROWNUM)               ADDRESS OF ROW NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROW
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROW
.BYP2350 ANOP
.*
         AIF   ('&KEYNUM' EQ '').BYP2400
         AIF   ('&KEYNUM'(1,1) EQ '''').BYP2410
         DC    A(&KEYNUM)               ADDRESS OF KEYN NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR KEYN
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFE&NDX)              ADDRESS OF GENERATED KEYN
.BYP2450 ANOP
.*
         AIF   ('&NAMENUM' EQ '').BYP2500
         AIF   ('&NAMENUM'(1,1) EQ '''').BYP2510
         DC    A(&NAMENUM)              ADDRESS OF VARN NAME
         AGO   .BYP2550
.BYP2500 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VARN
         AGO   .BYP2550
.BYP2510 ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENERATED VARN
.BYP2550 ANOP
.*
         AIF   ('&POSITION' EQ '').BYP2600
         AIF   ('&POSITION'(1,1) EQ '''').BYP2610
         DC    A(&POSITION+X'80000000') ADDRESS OF CRP NAME
         AGO   .BYP2650
.BYP2600 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR CRP
         AGO   .BYP2650
.BYP2610 ANOP
         DC    A(SPFC&NDX+X'80000000')  ADDRESS OF GENERATED AUTOSE
.BYP2650 ANOP
SPFQ&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBSARG   8512-85095-85095-1208-00245-00245-00000-ISPFDYN
         MACRO
&NAME    TBSARG &TABLE,                 TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &ARGLIST=,               NAME LIST                      *
               &DIRECTION=,             NEXT OR PREVIOUS               *
               &NAMECOND=,              NAME COND PAIRS                *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBSARG,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBSARG &TABLE,&P2,&P3,&P4,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&DIRECTION' EQ '').K3
         AIF   ('&DIRECTION'(1,1) NE '''').K3
         AIF   ('&DIRECTION' EQ '''NEXT''').K3
         AIF   ('&DIRECTION' EQ '''PREVIOUS''').K3
         MNOTE 4,'WARNING - DIRECTION KEYWORD EXPECTED NEXT OR PREVIOUS*
                ENCLOSED IN QUOTES'
.K3      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBSARG).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&ARGLIST' EQ '').CNT2
         AIF   ('&ARGLIST'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&DIRECTION' EQ '').CNT3
         AIF   ('&DIRECTION'(1,1) EQ '''').GENLIT
.CNT3    AIF   ('&NAMECOND' EQ '').CNT4
         AIF   ('&NAMECOND'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBSARG).BYP20
TBSARG   DC    CL8'TBSARG'              ISPF KEYWORD
&SPFTBSARG SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&ARGLIST' EQ '').BYP40
         AIF   ('&ARGLIST'(1,1) NE '''').BYP40
SPFV&NDX DC    C&ARGLIST                GENERATED NAMELIST
.BYP40   ANOP
         AIF   ('&DIRECTION' EQ '').BYP50
         AIF   ('&DIRECTION'(1,1) NE '''').BYP50
SPFD&NDX DC    CL8&DIRECTION            ISPF KEYWORD
.BYP50   ANOP
         AIF   ('&NAMECOND' EQ '').BYP60
         AIF   ('&NAMECOND'(1,1) NE '''').BYP60
SPFC&NDX DC    C&NAMECOND               GENERATED CONDITIONS
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBSARG                GET ADDRESS OF TBSARG KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&ARGLIST' EQ '').BYP1100
         AIF   ('&ARGLIST'(1,1) EQ '''').BYP1110
         LA    0,&ARGLIST               GET ADDRESS OF VAR NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR VAR
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFV&NDX               GET ADDRESS OF GENERATED VAR
.BYP1150 ANOP
.*
         AIF   ('&DIRECTION' EQ '').BYP1200
         AIF   ('&DIRECTION'(1,1) EQ '''').BYP1205
         LA    1,&DIRECTION             GET ADDRESS OF KEYWORD
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM
         AGO   .BYP1250
.BYP1205 ANOP
         LA    1,SPFD&NDX               GENNED NEXT/PREVIOUS KEYWORD
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&NAMECOND' EQ '').BYP1300
         AIF   ('&NAMECOND'(1,1) EQ '''').BYP1310
         LA    14,&NAMECOND             GET ADDRESS OF COND NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR COND
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENERATED COND
.BYP1350 ANOP
         ST    14,&TEMP+16              STORE PARAMETERS INTO LIST
         OI    &TEMP+16,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 5).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 5).BYPVARS
&SPFVARS SETA  5
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBSARG)                TBSARG LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&ARGLIST' EQ '').BYP2100
         AIF   ('&ARGLIST'(1,1) EQ '''').BYP2110
         DC    A(&ARGLIST)              ADDRESS OF VAR NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VAR NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VAR
.BYP2150 ANOP
.*
         AIF   ('&DIRECTION' EQ '').BYP2200
         AIF   ('&DIRECTION'(1,1) EQ '''').BYP2205
         DC    A(&DIRECTION)            ISPF KEYWORD
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR MSG
         AGO   .BYP2250
.BYP2205 ANOP
         DC    A(SPFD&NDX)              GENNED NEXT/PREVIOUS KEYWORD
.BYP2250 ANOP
.*
         AIF   ('&NAMECOND' EQ '').BYP2300
         AIF   ('&NAMECOND'(1,1) EQ '''').BYP2310
         DC    A(&NAMECOND+X'80000000') ADDRESS OF COND NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR COND
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFC&NDX+X'80000000')  ADDRESS OF GENERATED COND
.BYP2350 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBSAVE   8512-85095-85095-1208-00270-00270-00000-ISPFDYN
         MACRO
&LABEL   TBSAVE &TABLE,                 TABLE NAME                     *
               &NEWCOPY,                NEWCOPY OR REPLCOPY            *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &NAME=,                  NAME FOR SAVE                  *
               &PAD=,                   PAD AMOUNT                     *
               &LIBRARY=,               LIBRARY                        *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBSAVE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFNEWCOPY,&SPFREPLCOPY
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBSAVE &TABLE,&NEWCOPY,&P3,&P4,&P5,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AIF   ('&P5' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NEWCOPY' NE '' AND '&NEWCOPY' NE 'NEWCOPY' AND       *
               '&NEWCOPY' NE 'REPLCOPY').ERR2
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBSAVE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&NEWCOPY' EQ 'NEWCOPY' AND NOT &SPFNEWCOPY).GENLIT
         AIF   ('&NEWCOPY' EQ 'REPLCOPY' AND NOT &SPFREPLCOPY).GENLIT
         AIF   ('&NAME' EQ '').CNT3
         AIF   ('&NAME'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   (T'&PAD EQ 'N').GENLIT
         AIF   ('&LIBRARY' EQ '').CNT5
         AIF   ('&LIBRARY'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBSAVE).BYP20
TBSAVE   DC    CL8'TBSAVE'              ISPF KEYWORD
&SPFTBSAVE SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&NEWCOPY' EQ '').BYP40
         AIF   ('&NEWCOPY' NE 'NEWCOPY' OR &SPFNEWCOPY).BYP35
NEWCOPY  DC    CL8'NEWCOPY'             ISPF KEYWORD
&SPFNEWCOPY SETB 1
.BYP35   ANOP
         AIF   ('&NEWCOPY' NE 'REPLCOPY' OR &SPFREPLCOPY).BYP40
REPLCOPY DC    CL8'REPLCOPY'            ISPF KEYWORD
&SPFREPLCOPY SETB 1
.BYP40   ANOP
         AIF   ('&NAME' EQ '').BYP50
         AIF   ('&NAME'(1,1) NE '''').BYP50
SPFA&NDX DC    CL8&NAME                 GENERATED NAME NAME
.BYP50   ANOP
         AIF   (T'&PAD NE 'N').BYP60
SPFP&NDX DC    F'&PAD'                  GENERATED PAD AMOUNT
.BYP60   ANOP
         AIF   ('&LIBRARY' EQ '').BYP70
         AIF   ('&LIBRARY'(1,1) NE '''').BYP70
SPFL&NDX DC    CL8&LIBRARY              GENERATED LIBRARY
.BYP70   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBSAVE                GET ADDRESS OF TBSAVE KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&NEWCOPY' EQ '').BYP1100
         LA    0,&NEWCOPY               GET ADDRESS OF COPY NAME
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR COPY
.BYP1150 ANOP
.*
         AIF   ('&NAME' EQ '').BYP1200
         AIF   ('&NAME'(1,1) EQ '''').BYP1210
         LA    1,&NAME                  GET ADDRESS OF NAME NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR NAME
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFA&NDX               GET ADDRESS OF GENERATED NAME
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&PAD' EQ '').BYP1300
         AIF   (T'&PAD EQ 'N').BYP1310
         LA    14,&PAD                  GET ADDRESS OF PAD AMOUNT
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR PAD AMT
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFP&NDX              GET ADDRESS OF GENERATED PAD
.BYP1350 ANOP
.*
         AIF   ('&LIBRARY' EQ '').BYP1400
         AIF   ('&LIBRARY'(1,1) EQ '''').BYP1410
         LA    15,&LIBRARY              GET ADDRESS OF LIBRARY NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR LIBRARY
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFL&NDX              GET ADDRESS OF GENERATED LIB
.BYP1450 ANOP
.*
         STM   14,15,&TEMP+16           STORE PARAMETERS INTO LIST
         OI    &TEMP+20,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 6).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 6).BYPVARS
&SPFVARS SETA  6
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBSAVE)                TBSAVE LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&NEWCOPY' EQ '').BYP2100
         DC    A(&NEWCOPY)              ADDRESS OF COPY NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR COPY NAME
.BYP2150 ANOP
.*
         AIF   ('&NAME' EQ '').BYP2200
         AIF   ('&NAME'(1,1) EQ '''').BYP2210
         DC    A(&NAME)                 ADDRESS OF NAME NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAME
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENERATED NAME
.BYP2250 ANOP
.*
         AIF   ('&PAD' EQ '').BYP2300
         AIF   (T'&PAD EQ 'N').BYP2310
         DC    A(&PAD)                  ADDRESS OF PAD AMOUNT
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR PAD AMOUNT
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFP&NDX)              ADDRESS OF GENERATED PAD AMT
.BYP2350 ANOP
.*
         AIF   ('&LIBRARY' EQ '').BYP2400
         AIF   ('&LIBRARY'(1,1) EQ '''').BYP2410
         DC    A(&LIBRARY+X'80000000')  ADDRESS OF LIBRARY NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR LIBRARY
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFL&NDX+X'80000000')  ADDRESS OF GENERATED LIBRARY
.BYP2450 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'NEWCOPY OR REPLCOPY EXPECTED AS KEYWORD - FOUND ''&N*
               EWCOPY'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBSCAN   8512-85095-85095-1208-00382-00382-00000-ISPFDYN
         MACRO
&NAME    TBSCAN &TABLE,                 TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &P6,                                                    *
               &P7,                                                    *
               &P8,                                                    *
               &ARGLIST=,               ARGLIST                        *
               &SAVENAME=,              EXTENSION VAR LIST             *
               &ROWID=,                 SAVE THE ROWID                 *
               &DIRECTION=,             NEXT OR PREVIOUS               *
               &NOREAD=,                NOREAD KEYWORD                 *
               &POSITION=,              POSITION OF CRP                *
               &CONDLIST=,              CONDITIONS FOR SEARCH          *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBSCAN,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBSCAN &TABLE,&P2,&P3,&P4,&P5,&P6,&P7,&P8,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AIF   ('&P5' NE '').LVLERR
         AIF   ('&P6' NE '').LVLERR
         AIF   ('&P7' NE '').LVLERR
         AIF   ('&P8' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&DIRECTION' EQ '').K3
         AIF   ('&DIRECTION'(1,1) NE '''').K3
         AIF   ('&DIRECTION' EQ '''NEXT''').K3
         AIF   ('&DIRECTION' EQ '''PREVIOUS''').K3
         MNOTE 4,'WARNING - DIRECTION KEYWORD EXPECTED NEXT OR PREVIOUS*
                ENCLOSED IN QUOTES'
.K3      ANOP
         AIF   ('&NOREAD' EQ '').K2
         AIF   ('&NOREAD'(1,1) NE '''').K2
         AIF   ('&NOREAD' EQ '''NOREAD''').K2
         MNOTE 4,'WARNING - NOREAD KEYWORD EXPECTED NOREAD IN QUOTES'
.K2      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBSCAN).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&ARGLIST' EQ '').CNT2
         AIF   ('&ARGLIST'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&SAVENAME' EQ '').CNT3
         AIF   ('&SAVENAME'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&ROWID' EQ '').CNT4
         AIF   ('&ROWID'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&DIRECTION' EQ '').CNT5
         AIF   ('&DIRECTION'(1,1) EQ '''').GENLIT
.CNT5    AIF   ('&NOREAD' EQ '').CNT6
         AIF   ('&NOREAD'(1,1) EQ '''').GENLIT
.CNT6    AIF   ('&POSITION' EQ '').CNT8
         AIF   ('&POSITION'(1,1) EQ '''').GENLIT
.CNT8    ANOP
         AIF   ('&CONDLIST' EQ '').CNT9
         AIF   ('&CONDLIST'(1,1) EQ '''').GENLIT
.CNT9    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBSCAN).BYP20
TBSCAN   DC    CL8'TBSCAN'              ISPF KEYWORD
&SPFTBSCAN SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   ('&ARGLIST' EQ '').BYP40
         AIF   ('&ARGLIST'(1,1) NE '''').BYP40
SPFA&NDX DC    C&ARGLIST                GENERATED ARGLIST-LIST
.BYP40   ANOP
         AIF   ('&SAVENAME' EQ '').BYP50
         AIF   ('&SAVENAME'(1,1) NE '''').BYP50
SPFV&NDX DC    CL8&SAVENAME             GENERATED VARIABLE NAME
.BYP50   ANOP
         AIF   ('&ROWID' EQ '').BYP60
         AIF   ('&ROWID'(1,1) NE '''').BYP60
SPFR&NDX DC    CL8&ROWID                GENERATED ROWID VAR NAME
.BYP60   ANOP
         AIF   ('&DIRECTION' EQ '').BYP70
         AIF   ('&DIRECTION'(1,1) NE '''').BYP70
SPFD&NDX  DC   CL8&DIRECTION            ISPF KEYWORD
.BYP70   ANOP
         AIF   ('&NOREAD' EQ '').BYP80
         AIF   ('&NOREAD'(1,1) NE '''').BYP80
SPFN&NDX DC    CL8&NOREAD               ISPF KEYWORD
.BYP80   ANOP
         AIF   ('&POSITION' EQ '').BYP100
         AIF   ('&POSITION'(1,1) NE '''').BYP100
SPFP&NDX DC    CL8&POSITION             GENERATED POSITION VAR
.BYP100  ANOP
         AIF   ('&CONDLIST' EQ '').BYP110
         AIF   ('&CONDLIST'(1,1) NE '''').BYP110
SPFC&NDX DC    C&CONDLIST               GENERATED COND LIST
.BYP110  ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBSCAN                GET ADDRESS OF TBSCAN KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&ARGLIST' EQ '').BYP1100
         AIF   ('&ARGLIST'(1,1) EQ '''').BYP1110
         LA    0,&ARGLIST               GET ADDRESS OF ARGLIST LIST
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR ARGLIST
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENERATED ARG
.BYP1150 ANOP
.*
         AIF   ('&SAVENAME' EQ '').BYP1200
         AIF   ('&SAVENAME'(1,1) EQ '''').BYP1210
         LA    1,&SAVENAME              GET ADDRESS OF VAR NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR VAR
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFV&NDX               GET ADDRESS OF GENERATED VAR
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&ROWID' EQ '').BYP1300
         AIF   ('&ROWID'(1,1) EQ '''').BYP1310
         LA    14,&ROWID                GET ADDRESS OF ROWID NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR ROWID
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFR&NDX              GET ADDRESS OF GENERATED ROWID
.BYP1350 ANOP
.*
         AIF   ('&DIRECTION' EQ '').BYP1400
         AIF   ('&DIRECTION'(1,1) EQ '''').BYP1405
         LA    15,&DIRECTION            GET ADDRESS OF KEYWORD
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR ROW
         AGO   .BYP1450
.BYP1405 ANOP
         LA    15,SPFD&NDX              GET GENNED NEXT/PREVIOUS
.BYP1450 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP1500
         AIF   ('&NOREAD'(1,1) EQ '''').BYP1505
         LA    0,&NOREAD                GET ADDRESS OF KEYWORD
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR CSRPOS
         AGO   .BYP1550
.BYP1505 ANOP
         LA    0,SPFN&NDX               GET GENNED NOREAD KEYWORD
.BYP1550 ANOP
.*
         AIF   ('&POSITION' EQ '').BYP1600
         AIF   ('&POSITION'(1,1) EQ '''').BYP1610
         LA    1,&POSITION              GET ADDRESS OF POS VAR NAME
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR POS VAR
         AGO   .BYP1650
.BYP1610 ANOP
         LA    1,SPFP&NDX               GET GENERATED POS VAR NAME
.BYP1650 ANOP
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
         AIF   ('&CONDLIST' EQ '').BYP1700
         AIF   ('&CONDLIST'(1,1) EQ '''').BYP1710
         LA    14,&CONDLIST             GET ADDRESS OF COND NAME
         AGO   .BYP1750
.BYP1700 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR COND
         AGO   .BYP1750
.BYP1710 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENERATED COND
.BYP1750 ANOP
.*
         ST    14,&TEMP+32              STORE PARAMETERS INTO LIST
         OI    &TEMP+32,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 9).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 9).BYPVARS
&SPFVARS SETA  9
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBSCAN)                TBSCAN LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&ARGLIST' EQ '').BYP2100
         AIF   ('&ARGLIST'(1,1) EQ '''').BYP2110
         DC    A(&ARGLIST)              ADDRESS OF ARGLIST NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ARGLIST NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFA&NDX)              ADDRESS OF GENERATED ARGLIST
.BYP2150 ANOP
.*
         AIF   ('&SAVENAME' EQ '').BYP2200
         AIF   ('&SAVENAME'(1,1) EQ '''').BYP2210
         DC    A(&SAVENAME)             ADDRESS OF VAR NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VAR
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VAR
.BYP2250 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP2300
         AIF   ('&ROWID'(1,1) EQ '''').BYP2310
         DC    A(&ROWID)                ADDRESS OF ROWID NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROWID
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROWID
.BYP2350 ANOP
.*
         AIF   ('&DIRECTION' EQ '').BYP2400
         AIF   ('&DIRECTION'(1,1) EQ '''').BYP2405
         DC    A(&DIRECTION)            ADDRESS OF ISPF KEYWORD
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROW
         AGO   .BYP2450
.BYP2405 ANOP
         DC    A(SPFD&NDX)              GENNED NEXT/PREVIOUS
.BYP2450 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP2500
         AIF   ('&NOREAD'(1,1) EQ '''').BYP2505
         DC    A(&NOREAD)               ADDRESS OF ISPF KEYWORD
         AGO   .BYP2550
.BYP2500 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR CSRPOS
         AGO   .BYP2550
.BYP2505 ANOP
         DC    A(SPFN&NDX)              GENNED NOREAD KEYWORD
.BYP2550 ANOP
.*
         AIF   ('&POSITION' EQ '').BYP2600
         AIF   ('&POSITION'(1,1) EQ '''').BYP2610
         DC    A(&POSITION)             ADDRESS OF POS NAME
         AGO   .BYP2650
.BYP2600 ANOP
         DC    A(SPFNULLC)              ADDRESS OF DUMMY PARM
         AGO   .BYP2650
.BYP2610 ANOP
         DC    A(SPFP&NDX)              GENERATED POS VAR NAME
.BYP2650 ANOP
.*
         AIF   ('&CONDLIST' EQ '').BYP2800
         AIF   ('&CONDLIST'(1,1) EQ '''').BYP2810
         DC    A(&CONDLIST+X'80000000') ADDRESS OF COND NAME
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR COND
         AGO   .BYP2850
.BYP2810 ANOP
         DC    A(SPFC&NDX+X'80000000')  ADDRESS OF GENERATED COND
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR3    ANOP
         MNOTE 16,'EXPECTED NOREAD KEYWORD - FOUND ''&NOREAD'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBSKIP   8512-85133-85339-1341-00345-00345-00001-ISPFDYN
         MACRO
&NAME    TBSKIP &TABLE,                 TABLE NAME                     *
               &P2,                                                    *
               &P3,                                                    *
               &P4,                                                    *
               &P5,                                                    *
               &P6,                                                    *
               &P7,                                                    *
               &NUMBER=SPFNULLC,        NUMBER                         *
               &SAVENAME=,              VARIABLE FOR EXT VARS          *
               &ROWID=,                 VARIABLE NAME FOR ROWID        *
               &ROW=,                   ROWID TO GET                   *
               &NOREAD=,                NOREAD KEYWORD                 *
               &POSITION=,              CRP VARIABLE                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBSKIP,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFNOREAD,&SPFF1
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
         GBLC  &SPFLVL
         AIF   ('&SPFLVL' NE '1').NL1
&NAME    @TBSKIP &TABLE,&P2,&P3,&P4,&P5,&P6,&P7,LOAD=&LOAD,MF=&MF
         MEXIT
.NL1     ANOP
         AIF   ('&P2' NE '').LVLERR
         AIF   ('&P3' NE '').LVLERR
         AIF   ('&P4' NE '').LVLERR
         AIF   ('&P5' NE '').LVLERR
         AIF   ('&P6' NE '').LVLERR
         AIF   ('&P7' NE '').LVLERR
         AGO   .NL2
.LVLERR  ANOP
         MNOTE 12,'POSITIONAL PARAMETER FOUND - NOT ALLOWED'
         MEXIT
.NL2     ANOP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
         AIF   ('&NOREAD' EQ '').K3
         AIF   ('&NOREAD'(1,1) NE '''').K3
         AIF   ('&NOREAD' EQ '''NOREAD''').K3
         MNOTE 4,'WARNING - NOREAD KEYWORD INVALID - EXPECTED NOREAD EN*
               CLOSED IN QUOTES'
.K3      ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBSKIP).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   (T'&NUMBER EQ 'N').GENLIT
         AIF   ('&NUMBER' EQ '' AND NOT &SPFF1).GENLIT
         AIF   ('&SAVENAME' EQ '').CNT3
         AIF   ('&SAVENAME'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&ROWID' EQ '').CNT4
         AIF   ('&ROWID'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   (T'&ROW EQ 'N').GENLIT
         AIF   ('&NOREAD' EQ '').CNT6
         AIF   ('&NOREAD'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AIF   ('&POSITION' EQ '').CNT8
         AIF   ('&POSITION'(1,1) EQ '''').GENLIT
.CNT8    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBSKIP).BYP20
TBSKIP   DC    CL8'TBSKIP'              ISPF KEYWORD
&SPFTBSKIP SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
         AIF   (T'&NUMBER NE 'N').BYP40
SPFN&NDX DC    F'&NUMBER'               GENERATED NUMBER
.BYP40   ANOP
         AIF   ('&NUMBER' NE '' OR &SPFF1).BYP45
SPFF1    DC    F'1'
&SPFF1   SETB  1
.BYP45   ANOP
         AIF   ('&SAVENAME' EQ '').BYP50
         AIF   ('&SAVENAME'(1,1) NE '''').BYP50
SPFV&NDX DC    CL8&SAVENAME             GENERATED EXT VAR NAME
.BYP50   ANOP
         AIF   ('&ROWID' EQ '').BYP60
         AIF   ('&ROWID'(1,1) NE '''').BYP60
SPFI&NDX DC    CL8&ROWID                GENERATED ROWID VAR NAME
.BYP60   ANOP
         AIF   (T'&ROW NE 'N').BYP70
SPFR&NDX DC    F'&ROW'                  GENERATED ROWID
.BYP70   ANOP
         AIF   ('&NOREAD' EQ '').BYP80
         AIF   ('&NOREAD'(1,1) NE '''').BYP80
SPFX&NDX DC    CL8&NOREAD               ISPF KEYWORD
.BYP80   ANOP
         AIF   ('&POSITION' EQ '').BYP100
         AIF   ('&POSITION'(1,1) NE '''').BYP100
SPFC&NDX DC    CL8&POSITION             GENERATED CRP VARIABLE NAME
.BYP100  ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBSKIP                GET ADDRESS OF TBSKIP KEYWORD
.*
         AIF   ('&TABLE' EQ '').BYP1000
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
         AIF   ('&NUMBER' EQ '').BYP1100
         AIF   (T'&NUMBER EQ 'N').BYP1110
         LA    0,&NUMBER                GET ADDRESS OF NUMBER FIELD
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFF1                  GET DUMMY PARM FOR NUMBER
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFN&NDX               GET ADDRESS OF GENERATED NUMBER
.BYP1150 ANOP
.*
         AIF   ('&SAVENAME' EQ '').BYP1200
         AIF   ('&SAVENAME'(1,1) EQ '''').BYP1210
         LA    1,&SAVENAME              GET ADDRESS OF VAR NAME
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR VAR
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFV&NDX               GET ADDRESS OF GENERATED VAR
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   ('&ROWID' EQ '').BYP1300
         AIF   ('&ROWID'(1,1) EQ '''').BYP1310
         LA    14,&ROWID                GET ADDRESS OF ROWID NAME
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR ROWID
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFI&NDX              GET ADDRESS OF GENERATED ROWID
.BYP1350 ANOP
.*
         AIF   ('&ROW' EQ '').BYP1400
         AIF   (T'&ROW EQ 'N').BYP1410
         LA    15,&ROW                  GET ADDRESS OF ROW NAME
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR ROW
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFR&NDX              GET ADDRESS OF GENERATED ROW
.BYP1450 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP1500
         AIF   ('&NOREAD'(1,1) EQ '''').BYP1505
         LA    0,&NOREAD                GET ADDRESS OF NOREAD
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR NOREAD
         AGO   .BYP1550
.BYP1505 ANOP
         LA    0,SPFX&NDX               GENNED NOREAD KEYWORD
.BYP1550 ANOP
.*
         AIF   ('&POSITION' EQ '').BYP1600
         AIF   ('&POSITION'(1,1) EQ '''').BYP1610
         LA    1,&POSITION              GET ADDRESS OF CRP NAME
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR POS
         AGO   .BYP1650
.BYP1610 ANOP
         LA    1,SPFC&NDX               GET DUMMY PARM FOR POS
.BYP1650 ANOP
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
         OI    &TEMP+28,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 8).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 8).BYPVARS
&SPFVARS SETA  8
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBSKIP)                TBSKIP LITERAL
.*
         AIF   ('&TABLE' EQ '').BYP2000
         AIF   ('&TABLE'(1,1) EQ '''').BYP2010
         DC    A(&TABLE)                ADDRESS OF TABLE NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
.BYP2050 ANOP
.*
         AIF   ('&NUMBER' EQ '').BYP2100
         AIF   (T'&NUMBER EQ 'N').BYP2110
         DC    A(&NUMBER)               ADDRESS OF NUMBER NAME
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFF1)                 DUMMY PARM FOR NUMBER NAME
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFN&NDX)              ADDRESS OF GENERATED NUMBER
.BYP2150 ANOP
.*
         AIF   ('&SAVENAME' EQ '').BYP2200
         AIF   ('&SAVENAME'(1,1) EQ '''').BYP2210
         DC    A(&SAVENAME)             ADDRESS OF VAR NAME
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VAR
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VAR
.BYP2250 ANOP
.*
         AIF   ('&ROWID' EQ '').BYP2300
         AIF   ('&ROWID'(1,1) EQ '''').BYP2310
         DC    A(&ROWID)                ADDRESS OF ROWID NAME
         AGO   .BYP2350
.BYP2300 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROWID
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFI&NDX)              ADDRESS OF GENERATED ROWID
.BYP2350 ANOP
.*
         AIF   ('&ROW' EQ '').BYP2400
         AIF   ('&ROW'(1,1) EQ '''').BYP2410
         DC    A(&ROW)                  ADDRESS OF ROW NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR ROW
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFR&NDX)              ADDRESS OF GENERATED ROW
.BYP2450 ANOP
.*
         AIF   ('&NOREAD' EQ '').BYP2500
         AIF   ('&NOREAD'(1,1) EQ '''').BYP2505
         DC    A(&NOREAD)               ADDRESS OF NOREAD
         AGO   .BYP2550
.BYP2500 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NOREAD
         AGO   .BYP2550
.BYP2505 ANOP
         DC    A(SPFX&NDX)              GENNED NOREAD KEYWORD
.BYP2550 ANOP
.*
         AIF   ('&POSITION' EQ '').BYP2800
         AIF   ('&POSITION'(1,1) EQ '''').BYP2810
         DC    A(&POSITION+X'80000000') ADDRESS OF CRP NAME
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR CRP
         AGO   .BYP2850
.BYP2810 ANOP
         DC    A(SPFI&NDX+X'80000000')  ADDRESS OF GENERATED CRP
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'EXPECTED NOREAD KEYWORD - FOUND ''&NOREAD'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBSORT   8512-85095-85095-1208-00157-00157-00000-ISPFDYN
         MACRO
&NAME    TBSORT &TABLE,                 TABLE NAME                     *
               &FIELDS=,                FIELDS NAME-LIST               *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBSORT,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&FIELDS' EQ '').ERR4
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBSORT).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&FIELDS' EQ '').CNT2
         AIF   ('&FIELDS'(1,1) EQ '''').GENLIT
.CNT2    AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBSORT).BYP20
TBSORT   DC    CL8'TBSORT'              ISPF KEYWORD
&SPFTBSORT SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
         AIF   ('&FIELDS' EQ '').BYP50
         AIF   ('&FIELDS'(1,1) NE '''').BYP50
SPFS&NDX DC    C&FIELDS                 GENERATED SORT KEYS
.BYP50   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBSORT                GET ADDRESS OF TBSORT KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         AIF   ('&FIELDS' EQ '').BYP140
         AIF   ('&FIELDS'(1,1) EQ '''').BYP130
         LA    0,&FIELDS                GET ADDRESS OF SORT KEYS
         AGO   .BYP150
.BYP130  ANOP
         LA    0,SPFS&NDX               GET ADDRESS OF GENNED FIELDS
         AGO   .BYP150
.BYP140  ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR SORT KEY
.BYP150  ANOP
         STM   14,0,&TEMP               STORE PARAMETERS
         OI    &TEMP+8,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBSORT)                BROWSE LITERAL
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE)                ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX)              ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR TABLE
.BYP220  ANOP
         AIF   ('&FIELDS' EQ '').BYP240
         AIF   ('&FIELDS'(1,1) EQ '''').BYP230
         DC    A(&FIELDS+X'80000000')   ADDRESS OF FIELDS
         AGO   .BYP250
.BYP230  ANOP
         DC    A(SPFS&NDX+X'80000000')  ADDRESS OF GENERATED SORT KEYS
         AGO   .BYP250
.BYP240  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR SORT KEYS
.BYP250  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERR4    ANOP
         MNOTE 16,'SORT KEYS ARE REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBSTATS  8512-85095-85095-1208-00673-00673-00000-ISPFDYN
         MACRO
&LABEL   TBSTATS &TABLE,                TABLE NAME                     *
               &CDATE=,                 CREATE DATE                    *
               &CTIME=,                 CREATE TIME                    *
               &UDATE=,                 UPDATE DATE                    *
               &UTIME=,                 UPDATE TIME                    *
               &USER=,                  USER ID                        *
               &ROWCREAT=,              ROWS CREATED                   *
               &ROWCURR=,               CURRENT NUMBER OF ROWS         *
               &ROWUPD=,                ROWS UPDATED                   *
               &TABLEUPD=,              TABLE UPDATED                  *
               &SERVICE=,               LAST SERVICE                   *
               &RETCODE=,               RETURN CODE                    *
               &STATUS1=,               STATUS 1                       *
               &STATUS2=,               STATUS 2                       *
               &STATUS3=,               STATUS 3                       *
               &LIBRARY=,               DDNAME FOR TABLE               *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBSTATS              GLOBAL FOR TBSTATS LITERAL
         GBLB  &SPFNULLC                DUMMY PARAMTER FOR CALL
         GBLB  &SPFDEBUG                DEBUG MODE
         GBLB  &SPFVAR                  NUMBER OF REQUIRED FULLWORDS
         GBLA  &SPFVARS                 NUMBER OF FULLWORDS
         GBLA  &SPFVARC                 PREVIOUS FULLWORDS USED
         LCLC  &NDX                     USED IN PLACE OF SYSNDX
         LCLC  &TEMP                    USED AS TEMPORARY VARIABLE
.*
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LABEL' EQ '').BYP10
&LABEL   DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&TABLE' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBSTATS).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
         AIF   ('&CDATE' EQ '').CNT1
         AIF   ('&CDATE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&CTIME' EQ '').CNT2
         AIF   ('&CTIME'(1,1) EQ '''').GENLIT
.CNT2    ANOP
         AIF   ('&UDATE' EQ '').CNT3
         AIF   ('&UDATE'(1,1) EQ '''').GENLIT
.CNT3    ANOP
         AIF   ('&UTIME' EQ '').CNT4
         AIF   ('&UTIME'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AIF   ('&USER' EQ '').CNT5
         AIF   ('&USER'(1,1) EQ '''').GENLIT
.CNT5    ANOP
         AIF   ('&ROWCREAT' EQ '').CNT6
         AIF   ('&ROWCREAT'(1,1) EQ '''').GENLIT
.CNT6    ANOP
         AIF   ('&ROWCURR' EQ '').CNT7
         AIF   ('&ROWCURR'(1,1) EQ '''').GENLIT
.CNT7    ANOP
         AIF   ('&ROWUPD' EQ '').CNT8
         AIF   ('&ROWUPD'(1,1) EQ '''').GENLIT
.CNT8    ANOP
         AIF   ('&TABLEUPD' EQ '').CNT9
         AIF   ('&TABLEUPD'(1,1) EQ '''').GENLIT
.CNT9    ANOP
         AIF   ('&SERVICE' EQ '').CNT10
         AIF   ('&SERVICE'(1,1) EQ '''').GENLIT
.CNT10   ANOP
         AIF   ('&RETCODE' EQ '').CNT11
         AIF   ('&RETCODE'(1,1) EQ '''').GENLIT
.CNT11   ANOP
         AIF   ('&STATUS1' EQ '').CNT12
         AIF   ('&STATUS1'(1,1) EQ '''').GENLIT
.CNT12   ANOP
         AIF   ('&STATUS2' EQ '').CNT13
         AIF   ('&STATUS2'(1,1) EQ '''').GENLIT
.CNT13   ANOP
         AIF   ('&STATUS3' EQ '').CNT14
         AIF   ('&STATUS3'(1,1) EQ '''').GENLIT
.CNT14   ANOP
         AIF   ('&LIBRARY' EQ '').CNT15
         AIF   ('&LIBRARY'(1,1) EQ '''').GENLIT
.CNT15   ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFNULLC).BYP001
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP001  ANOP
.*
.*
         AIF   (&SPFTBSTATS).BYP20
TBSTATS  DC    CL8'TBSTATS'             ISPF KEYWORD
&SPFTBSTATS SETB 1
.BYP20   ANOP
.*
.*
         AIF   ('&TABLE' EQ '').BYP30
         AIF   ('&TABLE'(1,1) NE '''').BYP30
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP30   ANOP
.*
.*
         AIF   ('&CDATE' EQ '').BYP40
         AIF   ('&CDATE'(1,1) NE '''').BYP40
SPFA&NDX DC    CL8&CDATE                CDATE VARIABLE NAME
.BYP40   ANOP
.*
.*
         AIF   ('&CTIME' EQ '').BYP50
         AIF   ('&CTIME'(1,1) NE '''').BYP50
SPFB&NDX DC    CL8&CTIME                CTIME VARIABLE NAME
.BYP50   ANOP
.*
.*
         AIF   ('&UDATE' EQ '').BYP60
         AIF   ('&UDATE'(1,1) NE '''').BYP60
SPFC&NDX DC    CL8&UDATE                UDATE VARIABLE NAME
.BYP60   ANOP
.*
.*
         AIF   ('&UTIME' EQ '').BYP70
         AIF   ('&UTIME'(1,1) NE '''').BYP70
SPFD&NDX DC    CL8&UTIME                UTIME VARIABLE NAME
.BYP70   ANOP
.*
.*
         AIF   ('&USER' EQ '').BYP80
         AIF   ('&USER'(1,1) NE '''').BYP80
SPFE&NDX DC    CL8&USER                 USERE VARIABLE NAME
.BYP80   ANOP
.*
.*
         AIF   ('&ROWCREAT' EQ '').BYP90
         AIF   ('&ROWCREAT'(1,1) NE '''').BYP90
SPFF&NDX DC    CL8&ROWCREAT             ROWCREAT VARIABLE NAME
.BYP90   ANOP
.*
.*
         AIF   ('&ROWCURR' EQ '').BYP100
         AIF   ('&ROWCURR'(1,1) NE '''').BYP100
SPFG&NDX DC    CL8&ROWCURR              ROWCURR VARIABLE NAME
.BYP100  ANOP
.*
.*
         AIF   ('&ROWUPD' EQ '').BYP110
         AIF   ('&ROWUPD'(1,1) NE '''').BYP110
SPFH&NDX DC    CL8&ROWUPD               ROWUPD VARIABLE NAME
.BYP110  ANOP
.*
.*
         AIF   ('&TABLEUPD' EQ '').BYP120
         AIF   ('&TABLEUPD'(1,1) NE '''').BYP120
SPFI&NDX DC    CL8&TABLEUPD             TABLEUPD VARIABLE NAME
.BYP120  ANOP
.*
.*
         AIF   ('&SERVICE' EQ '').BYP130
         AIF   ('&SERVICE'(1,1) NE '''').BYP130
SPFJ&NDX DC    CL8&SERVICE              SERVICE VARIABLE NAME
.BYP130  ANOP
.*
.*
         AIF   ('&RETCODE' EQ '').BYP140
         AIF   ('&RETCODE'(1,1) NE '''').BYP140
SPFK&NDX DC    CL8&RETCODE              RETCODE VARIABLE NAME
.BYP140  ANOP
.*
.*
         AIF   ('&STATUS1' EQ '').BYP150
         AIF   ('&STATUS1'(1,1) NE '''').BYP150
SPFL&NDX DC    CL8&STATUS1              STATUS1 VARIABLE NAME
.BYP150  ANOP
.*
.*
         AIF   ('&STATUS2' EQ '').BYP160
         AIF   ('&STATUS2'(1,1) NE '''').BYP160
SPFM&NDX DC    CL8&STATUS2              STATUS2 VARIABLE NAME
.BYP160  ANOP
.*
.*
         AIF   ('&STATUS3' EQ '').BYP170
         AIF   ('&STATUS3'(1,1) NE '''').BYP170
SPFN&NDX DC    CL8&STATUS3              STATUS3 VARIABLE NAME
.BYP170  ANOP
.*
.*
         AIF   ('&LIBRARY' EQ '').BYP180
         AIF   ('&LIBRARY'(1,1) NE '''').BYP180
SPFO&NDX DC    CL8&LIBRARY              LIBRARY NAME
.BYP180  ANOP
.*
.*
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
.*
.*
         LA    14,TBSTATS               GET ADDRESS OF TBSTATS KEYWORD
.*
.*
         AIF   ('&TABLE'(1,1) EQ '''').BYP1010
         LA    15,&TABLE                GET ADDRESS OF TABLE NAME
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
.BYP1050 ANOP
.*
.*
         AIF   ('&CDATE' EQ '').BYP1100
         AIF   ('&CDATE'(1,1) EQ '''').BYP1110
         LA    0,&CDATE                 GET ADDRESS OF CDATE VARIABLE
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR CDATE
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFA&NDX               GET ADDRESS OF GENNED CDATE
.BYP1150 ANOP
.*
.*
         AIF   ('&CTIME' EQ '').BYP1200
         AIF   ('&CTIME'(1,1) EQ '''').BYP1210
         LA    1,&CTIME                 GET ADDRESS OF CTIME VARIABLE
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR CTIME
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFB&NDX               GET ADDRESS OF GENNED CTIME
.BYP1250 ANOP
.*
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&UDATE' EQ '').BYP1300
         AIF   ('&UDATE'(1,1) EQ '''').BYP1310
         LA    14,&UDATE                GET ADDRESS OF UDATE VARIABLE
         AGO   .BYP1350
.BYP1300 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR UDATE
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFC&NDX              GET ADDRESS OF GENNED UDATE
.BYP1350 ANOP
.*
.*
         AIF   ('&UTIME' EQ '').BYP1400
         AIF   ('&UTIME'(1,1) EQ '''').BYP1410
         LA    15,&UTIME                GET ADDRESS OF UTIME VARIABLE
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR UTIME
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFD&NDX              GET ADDRESS OF GENNED UTIME
.BYP1450 ANOP
.*
.*
         AIF   ('&USER' EQ '').BYP1500
         AIF   ('&USER'(1,1) EQ '''').BYP1510
         LA    0,&USER                  GET ADDRESS OF USER VARIABLE
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR USER
         AGO   .BYP1550
.BYP1510 ANOP
         LA    0,SPFE&NDX               GET ADDRESS OF GENNED USER
.BYP1550 ANOP
.*
.*
         AIF   ('&ROWCREAT' EQ '').BYP1600
         AIF   ('&ROWCREAT'(1,1) EQ '''').BYP1610
         LA    1,&ROWCREAT              ADDRESS OF ROWCREAT VARIABLE
         AGO   .BYP1650
.BYP1600 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR ROWCREAT
         AGO   .BYP1650
.BYP1610 ANOP
         LA    1,SPFF&NDX               GET ADDRESS OF GENNED ROWCREAT
.BYP1650 ANOP
.*
.*
         STM   14,1,&TEMP+16            STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&ROWCURR' EQ '').BYP1700
         AIF   ('&ROWCURR'(1,1) EQ '''').BYP1710
         LA    14,&ROWCURR              ADDRESS OF ROWCURR VARIABLE
         AGO   .BYP1750
.BYP1700 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR ROWCURR
         AGO   .BYP1750
.BYP1710 ANOP
         LA    14,SPFG&NDX              GET ADDRESS OF GENNED ROWCURR
.BYP1750 ANOP
.*
.*
         AIF   ('&ROWUPD' EQ '').BYP1800
         AIF   ('&ROWUPD'(1,1) EQ '''').BYP1810
         LA    15,&ROWUPD               ADDRESS OF ROWUPD VARIABLE
         AGO   .BYP1850
.BYP1800 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR ROWUPD
         AGO   .BYP1850
.BYP1810 ANOP
         LA    15,SPFH&NDX              GET ADDRESS OF GENNED ROWUPD
.BYP1850 ANOP
.*
.*
         AIF   ('&TABLEUPD' EQ '').BYP1900
         AIF   ('&TABLEUPD'(1,1) EQ '''').BYP1910
         LA    0,&TABLEUPD              ADDRESS OF TABLEUPD VARIABLE
         AGO   .BYP1950
.BYP1900 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR TABLEUPD
         AGO   .BYP1950
.BYP1910 ANOP
         LA    0,SPFI&NDX               GET ADDRESS OF GENNED TABLEUPD
.BYP1950 ANOP
.*
.*
         AIF   ('&SERVICE' EQ '').BYP2000
         AIF   ('&SERVICE'(1,1) EQ '''').BYP2010
         LA    1,&SERVICE               ADDRESS OF SERVICE VARIABLE
         AGO   .BYP2050
.BYP2000 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR SERVICE
         AGO   .BYP2050
.BYP2010 ANOP
         LA    1,SPFJ&NDX               GET ADDRESS OF GENNED SERVICE
.BYP2050 ANOP
.*
.*
         STM   14,1,&TEMP+32            STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&RETCODE' EQ '').BYP2100
         AIF   ('&RETCODE'(1,1) EQ '''').BYP2110
         LA    14,&RETCODE              ADDRESS OF RETCODE VARIABLE
         AGO   .BYP2150
.BYP2100 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR RETCODE
         AGO   .BYP2150
.BYP2110 ANOP
         LA    14,SPFK&NDX              GET ADDRESS OF GENNED RETCODE
.BYP2150 ANOP
.*
.*
         AIF   ('&STATUS1' EQ '').BYP2200
         AIF   ('&STATUS1'(1,1) EQ '''').BYP2210
         LA    15,&STATUS1              ADDRESS OF STATUS1 VARIABLE
         AGO   .BYP2250
.BYP2200 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR STATUS1
         AGO   .BYP2250
.BYP2210 ANOP
         LA    15,SPFL&NDX              GET ADDRESS OF GENNED STATUS1
.BYP2250 ANOP
.*
.*
         AIF   ('&STATUS2' EQ '').BYP2300
         AIF   ('&STATUS2'(1,1) EQ '''').BYP2310
         LA    0,&STATUS2               ADDRESS OF STATUS2 VARIABLE
         AGO   .BYP2350
.BYP2300 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR STATUS2
         AGO   .BYP2350
.BYP2310 ANOP
         LA    0,SPFM&NDX               GET ADDRESS OF GENNED STATUS2
.BYP2350 ANOP
.*
.*
         AIF   ('&STATUS3' EQ '').BYP2400
         AIF   ('&STATUS3'(1,1) EQ '''').BYP2410
         LA    1,&STATUS3               ADDRESS OF STATUS3 VARIABLE
         AGO   .BYP2450
.BYP2400 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR STATUS3
         AGO   .BYP2450
.BYP2410 ANOP
         LA    1,SPFN&NDX               GET ADDRESS OF GENNED STATUS3
.BYP2450 ANOP
.*
.*
         STM   14,1,&TEMP+48            STORE PARAMETERS INTO LIST
.*
.*
.*
         AIF   ('&LIBRARY' EQ '').BYP2500
         AIF   ('&LIBRARY'(1,1) EQ '''').BYP2510
         LA    14,&LIBRARY              ADDRESS OF LIBRARY VARIABLE
         AGO   .BYP2550
.BYP2500 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR LIBRARY
         AGO   .BYP2550
.BYP2510 ANOP
         LA    14,SPFO&NDX              GET ADDRESS OF GENNED LIBRARY
.BYP2550 ANOP
.*
.*
         ST    14,&TEMP+64              STORE PARAMETERS INTO LIST
.*
.*
.*
         OI    &TEMP+64,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 17).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 17).BYPVARS
&SPFVARS SETA  17
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
.*
.*
         DC    A(TBSTATS)               GET ADDRESS OF TBSTATS KEYWORD
.*
.*
         AIF   ('&TABLE'(1,1) EQ '''').BY1010
         DC    A(&TABLE)                GET ADDRESS OF TABLE NAME
         AGO   .BY1050
.BY1010 ANOP
         DC    A(SPFT&NDX)              GET ADDRESS OF GENERATED TABLE
.BY1050 ANOP
.*
.*
         AIF   ('&CDATE' EQ '').BY1100
         AIF   ('&CDATE'(1,1) EQ '''').BY1110
         DC    A(&CDATE)                GET ADDRESS OF CDATE VARIABLE
         AGO   .BY1150
.BY1100 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR CDATE
         AGO   .BY1150
.BY1110 ANOP
         DC    A(SPFA&NDX)              GET ADDRESS OF GENNED CDATE
.BY1150 ANOP
.*
.*
         AIF   ('&CTIME' EQ '').BY1200
         AIF   ('&CTIME'(1,1) EQ '''').BY1210
         DC    A(&CTIME)                GET ADDRESS OF CTIME VARIABLE
         AGO   .BY1250
.BY1200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR CTIME
         AGO   .BY1250
.BY1210 ANOP
         DC    A(SPFB&NDX)              GET ADDRESS OF GENNED CTIME
.BY1250 ANOP
.*
.*
         AIF   ('&UDATE' EQ '').BY1300
         AIF   ('&UDATE'(1,1) EQ '''').BY1310
         DC    A(&UDATE)                GET ADDRESS OF UDATE VARIABLE
         AGO   .BY1350
.BY1300 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR UDATE
         AGO   .BY1350
.BY1310 ANOP
         DC    A(SPFC&NDX)              GET ADDRESS OF GENNED UDATE
.BY1350 ANOP
.*
.*
         AIF   ('&UTIME' EQ '').BY1400
         AIF   ('&UTIME'(1,1) EQ '''').BY1410
         DC    A(&UTIME)                GET ADDRESS OF UTIME VARIABLE
         AGO   .BY1450
.BY1400 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR UTIME
         AGO   .BY1450
.BY1410 ANOP
         DC    A(SPFD&NDX)              GET ADDRESS OF GENNED UTIME
.BY1450 ANOP
.*
.*
         AIF   ('&USER' EQ '').BY1500
         AIF   ('&USER'(1,1) EQ '''').BY1510
         DC    A(&USER)                 GET ADDRESS OF USER VARIABLE
         AGO   .BY1550
.BY1500 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR USER
         AGO   .BY1550
.BY1510 ANOP
         DC    A(SPFE&NDX)              GET ADDRESS OF GENNED USER
.BY1550 ANOP
.*
.*
         AIF   ('&ROWCREAT' EQ '').BY1600
         AIF   ('&ROWCREAT'(1,1) EQ '''').BY1610
         DC    A(&ROWCREAT)             ADDRESS OF ROWCREAT VARIABLE
         AGO   .BY1650
.BY1600 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR ROWCREAT
         AGO   .BY1650
.BY1610 ANOP
         DC    A(SPFF&NDX)              GET ADDRESS OF GENNED ROWCREAT
.BY1650 ANOP
.*
.*
         AIF   ('&ROWCURR' EQ '').BY1700
         AIF   ('&ROWCURR'(1,1) EQ '''').BY1710
         DC    A(&ROWCURR)              ADDRESS OF ROWCURR VARIABLE
         AGO   .BY1750
.BY1700 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR ROWCURR
         AGO   .BY1750
.BY1710 ANOP
         DC    A(SPFG&NDX)              GET ADDRESS OF GENNED ROWCURR
.BY1750 ANOP
.*
.*
         AIF   ('&ROWUPD' EQ '').BY1800
         AIF   ('&ROWUPD'(1,1) EQ '''').BY1810
         DC    A(&ROWUPD)               ADDRESS OF ROWUPD VARIABLE
         AGO   .BY1850
.BY1800 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR ROWUPD
         AGO   .BY1850
.BY1810 ANOP
         DC    A(SPFH&NDX)              GET ADDRESS OF GENNED ROWUPD
.BY1850 ANOP
.*
.*
         AIF   ('&TABLEUPD' EQ '').BY1900
         AIF   ('&TABLEUPD'(1,1) EQ '''').BY1910
         DC    A(&TABLEUPD)             ADDRESS OF TABLEUPD VARIABLE
         AGO   .BY1950
.BY1900 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR TABLEUPD
         AGO   .BY1950
.BY1910 ANOP
         DC    A(SPFI&NDX)              GET ADDRESS OF GENNED TABLEUPD
.BY1950 ANOP
.*
.*
         AIF   ('&SERVICE' EQ '').BY2000
         AIF   ('&SERVICE'(1,1) EQ '''').BY2010
         DC    A(&SERVICE)              ADDRESS OF SERVICE VARIABLE
         AGO   .BY2050
.BY2000 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR SERVICE
         AGO   .BY2050
.BY2010 ANOP
         DC    A(SPFJ&NDX)              GET ADDRESS OF GENNED SERVICE
.BY2050 ANOP
.*
.*
         AIF   ('&RETCODE' EQ '').BY2100
         AIF   ('&RETCODE'(1,1) EQ '''').BY2110
         DC    A(&RETCODE)              ADDRESS OF RETCODE VARIABLE
         AGO   .BY2150
.BY2100 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR RETCODE
         AGO   .BY2150
.BY2110 ANOP
         DC    A(SPFK&NDX)              GET ADDRESS OF GENNED RETCODE
.BY2150 ANOP
.*
.*
         AIF   ('&STATUS1' EQ '').BY2200
         AIF   ('&STATUS1'(1,1) EQ '''').BY2210
         DC    A(&STATUS1)              ADDRESS OF STATUS1 VARIABLE
         AGO   .BY2250
.BY2200 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR STATUS1
         AGO   .BY2250
.BY2210 ANOP
         DC    A(SPFL&NDX)              GET ADDRESS OF GENNED STATUS1
.BY2250 ANOP
.*
.*
         AIF   ('&STATUS2' EQ '').BY2300
         AIF   ('&STATUS2'(1,1) EQ '''').BY2310
         DC    A(&STATUS2)              ADDRESS OF STATUS2 VARIABLE
         AGO   .BY2350
.BY2300 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR STATUS2
         AGO   .BY2350
.BY2310 ANOP
         DC    A(SPFM&NDX)              GET ADDRESS OF GENNED STATUS2
.BY2350 ANOP
.*
.*
         AIF   ('&STATUS3' EQ '').BY2400
         AIF   ('&STATUS3'(1,1) EQ '''').BY2410
         DC    A(&STATUS3)              ADDRESS OF STATUS3 VARIABLE
         AGO   .BY2450
.BY2400 ANOP
         DC    A(SPFNULLC)              GET DUMMY PARM FOR STATUS3
         AGO   .BY2450
.BY2410 ANOP
         DC    A(SPFN&NDX)              GET ADDRESS OF GENNED STATUS3
.BY2450 ANOP
.*
.*
         AIF   ('&LIBRARY' EQ '').BY2500
         AIF   ('&LIBRARY'(1,1) EQ '''').BY2510
         DC    A(&LIBRARY+X'80000000')  ADDRESS OF LIBRARY VARIABLE
         AGO   .BY2550
.BY2500 ANOP
         DC    A(SPFNULLC+X'80000000')  GET DUMMY PARM FOR LIBRARY
         AGO   .BY2550
.BY2510 ANOP
         DC    A(SPFO&NDX+X'80000000')  GET ADDRESS OF GENNED LIBRARY
.BY2550 ANOP
.*
.*
SPFE&NDX DS    0H
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBTOP    8512-85095-85095-1208-00126-00126-00000-ISPFDYN
         MACRO
&NAME    TBTOP &TABLE,                  TABLE NAME                     *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBTOP,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBTOP).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBTOP).BYP20
TBTOP DC       CL8'TBTOP'               ISPF KEYWORD
&SPFTBTOP SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBTOP                 GET ADDRESS OF TBTOP KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         STM   14,15,&TEMP              STORE PARAMETERS
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBTOP)                 BROWSE LITERAL
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE+X'80000000')    ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX+X'80000000')  ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR TABLE
.BYP220  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TBVCLEAR 8512-85095-85095-1208-00126-00126-00000-ISPFDYN
         MACRO
&NAME    TBVCLEAR &TABLE,               TABLE NAME                     *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFTBVCLEAR,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
.*
.**********************************************************************
.*       GENERAL EDITS
.**********************************************************************
.*
         AIF   ('&TABLE' EQ '').ERR3
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERR2
.*
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
         AIF   ('&MF(2)' NE '').BYP15
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP17
.BYP15   ANOP
&TEMP    SETC  '&MF(2)'
.BYP17   ANOP
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFTBVCLEAR).GENLIT
         AIF   ('&TABLE' EQ '').CNT1
         AIF   ('&TABLE'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFTBVCLEAR).BYP20
TBVCLEAR DC    CL8'TBVCLEAR'            ISPF KEYWORD
&SPFTBVCLEAR SETB 1
.BYP20   ANOP
         AIF   ('&TABLE' EQ '').BYP40
         AIF   ('&TABLE'(1,1) NE '''').BYP40
SPFT&NDX DC    CL8&TABLE                GENERATED TABLE NAME
.BYP40   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,TBVCLEAR              GET ADDRESS OF TBVCLEAR KEYWORD
         AIF   ('&TABLE' EQ '').BYP100
         AIF   ('&TABLE'(1,1) EQ '''').BYP110
         LA    15,&TABLE                GET ADDRESS OF TABLE
         AGO   .BYP120
.BYP110  ANOP
         LA    15,SPFT&NDX              GET ADDRESS OF GENERATED TABLE
         AGO   .BYP120
.BYP100  ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR TABLE
.BYP120  ANOP
         STM   14,15,&TEMP              STORE PARAMETERS
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  2
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(TBVCLEAR)              BROWSE LITERAL
         AIF   ('&TABLE' EQ '').BYP200
         AIF   ('&TABLE'(1,1) EQ '''').BYP210
         DC    A(&TABLE+X'80000000')    ADDRESS OF TABLE
         AGO   .BYP220
.BYP210  ANOP
         DC    A(SPFT&NDX+X'80000000')  ADDRESS OF GENERATED TABLE
         AGO   .BYP220
.BYP200  ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR TABLE
.BYP220  ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERR2    ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR3    ANOP
         MNOTE 16,'TABLE NAME IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=TPUTE    8512-85095-85095-1208-00006-00006-00000-ISPFDYN
         MACRO
&NAME    TPUTE &COMMAND,&PARMS=
         LCLA  &NDX
&NDX     SETA  K'&COMMAND-2
&NAME    TPUT  =C&COMMAND,&NDX,&PARMS
         MEND
./ ADD NAME=VCOPY    8512-85095-85095-1208-00231-00231-00000-ISPFDYN
         MACRO
&NAME    VCOPY &VAR,                    NAME LIST                      *
               &LEN,                    LENGTH ARRAY                   *
               &VAL,                    VALUE ARRAYS                   *
               &MOVE,                   FIELD FOR CURSOR               *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFVCOPY,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFLOCATE,&SPFMOVE
         GBLA  &SPFVARS,&SPFVARC
         LCLA  &COUNT,&LIMIT
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&VAR' EQ '').ERR1
         AIF   ('&LEN' EQ '').ERR2
         AIF   ('&VAL' EQ '').ERR3
         AIF   ('&VAL'(1,1) EQ '''').ERR3
         AIF   ('&MOVE' NE '' AND '&MOVE' NE 'MOVE' AND                *
               '&MOVE' NE 'LOCATE').ERR4
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFVCOPY).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&VAR' EQ '').CNT1
         AIF   ('&VAR'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&LEN' EQ '').CNT2
         AIF   (T'&LEN EQ 'N').GENLIT
         AIF   (N'&LEN GT 1).GENLIT
.CNT2    ANOP
         AIF   ('&MOVE' EQ '').CNT4
         AIF   ('&MOVE' EQ 'MOVE' AND NOT &SPFMOVE).GENLIT
         AIF   ('&MOVE' EQ 'LOCATE' AND NOT &SPFLOCATE).GENLIT
.CNT4    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFVCOPY).BYP20
VCOPY    DC    CL8'VCOPY'               ISPF KEYWORD
&SPFVCOPY SETB 1
.BYP20   ANOP
         AIF   ('&VAR' EQ '').BYP30
         AIF   ('&VAR'(1,1) NE '''').BYP30
SPFV&NDX DC    C&VAR                    GENERATED NAME LIST{
.BYP30   ANOP
         AIF   ('&LEN' EQ '').BYP40
         AIF   (T'&LEN NE 'N' AND N'&LEN EQ 1).BYP40
&COUNT   SETA  1
SPFL&NDX DC    F'&LEN(1)'
.BYP32   ANOP
&COUNT   SETA  &COUNT+1
         AIF   (&COUNT GT N'&LEN).BYP40
         DC    F'&LEN(&COUNT)'
         AGO   .BYP32
.BYP40   ANOP
         AIF   ('&MOVE' EQ '').BYP90
         AIF   ('&MOVE' NE 'MOVE' OR &SPFMOVE).BYP85
MOVE     DC    CL8'MOVE'                ISPF KEYWORD
&SPFMOVE SETB  1
.BYP85   ANOP
         AIF   ('&MOVE' NE 'LOCATE' OR &SPFLOCATE).BYP90
LOCATE   DC    CL8'LOCATE'              ISPF KEYWORD
&SPFLOCATE SETB 1
.BYP90   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,VCOPY                 GET ADDRESS OF VCOPY KEYWORD
.*
         AIF   ('&VAR' EQ '').BYP1000
         AIF   ('&VAR'(1,1) EQ '''').BYP1010
         LA    15,&VAR                  GET ADDRESS OF NAMELIST
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR NAMELIST
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFV&NDX              GET ADDRESS OF GENERATED NAME
.BYP1050 ANOP
.*
         AIF   (T'&LEN EQ 'N' OR N'&LEN GT 1).BYP1110
         LA    0,&LEN                   GET ADDRESS OF LENGTH ARRAY
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFL&NDX               GET ADDRESS OF GENERATED LENGTH
.BYP1150 ANOP
.*
         AIF   ('&VAL' EQ '').BYP1200
         AIF   ('&VAL'(1,1) EQ '''').BYP1210
         LA    1,&VAL                   GET ADDRESS OF VALUE ADDRESS
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR VALUE ADDRE
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFA&NDX               GET ADDRESS OF GENERATED VALUE
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
         AIF   ('&MOVE' EQ '').BYP1600
         LA    14,&MOVE                 GET ADDRESS OF KEYWORD
         AGO   .BYP1650
.BYP1600 ANOP
         LA    14,SPFNULLC              GET DUMMY PARM FOR AUTOSEL
.BYP1650 ANOP
.*
         ST    14,&TEMP+16              STORE PARAMETERS INTO LIST
         OI    &TEMP+16,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 5).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 5).BYPVARS
&SPFVARS SETA  5
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(VCOPY)                 VCOPY LITERAL
.*
         AIF   ('&VAR' EQ '').BYP2000
         AIF   ('&VAR'(1,1) EQ '''').BYP2010
         DC    A(&VAR)                  ADDRESS OF NAMELIST
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAMELIST
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED NAMELIST
.BYP2050 ANOP
.*
         AIF   (T'&LEN EQ 'N' OR N'&LEN GT 1).BYP2110
         DC    A(&LEN)                  ADDRESS OF LENGTH ARRAY
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFL&NDX)              ADDRESS OF GENERATED LENGTHS
.BYP2150 ANOP
.*
         AIF   ('&VAL' EQ '').BYP2200
         AIF   ('&VAL'(1,1) EQ '''').BYP2210
         DC    A(&VAL)                  ADDRESS OF STORAGE ADDRESS
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR STORAGE ADDRESS
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFA&NDX)
.BYP2250 ANOP
         AIF   ('&MOVE' EQ '').BYP2600
         DC    A(&MOVE+X'80000000')     ADDRESS OF KEYWORD
         AGO   .BYP2650
.BYP2600 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR KEYWORD
.BYP2650 ANOP
.*
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'VCOPY REQUIRES A NAME LIST'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'VCOPY REQUIRES A LENGTH ARRAY'
         MEXIT
.ERR3    ANOP
         MNOTE 16,'VCOPY REQUIRES STORAGE ADDRESS TO STORE DATA IN'
         MEXIT
.ERR4    ANOP
         MNOTE 16,'EXPECTED MOVE/LOCATE KEYWORD - FOUND ''&MOVE'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=VDEFINE  8512-85095-85095-1208-00267-00267-00000-ISPFDYN
         MACRO
&LBL     VDEFINE &NAME,                 NAME LIST                      *
               &VAR,                    POINTER TO STORAGE             *
               &FOR,                    FORMAT OF DATA                 *
               &LEN,                    LENGTH OF FIELD                *
               &OPT,                    OPTIONS LIST                   *
               &USER,                   USER DATA FOR EXIT             *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFVDEFINE,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFCHAR,&SPFFIXED,&SPFBIT,&SPFHEX,&SPFUSER
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&LBL' EQ '').BYP10
&LBL     DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&NAME' EQ '').ERR1
         AIF   ('&VAR' EQ '').ERR2
         AIF   ('&VAR'(1,1) EQ '''').ERR3
         AIF   ('&FOR' NE '' AND                                       *
               '&FOR' NE 'CHAR' AND                                    *
               '&FOR' NE 'BIT' AND                                     *
               '&FOR' NE 'FIXED' AND                                   *
               '&FOR' NE 'USER' AND                                    *
               '&FOR' NE 'HEX').ERR4
         AIF   ('&LEN' EQ '').ERR5
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFVDEFINE).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&NAME' EQ '').CNT1
         AIF   ('&NAME'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&FOR' EQ 'CHAR' AND NOT &SPFCHAR).GENLIT
         AIF   ('&FOR' EQ 'BIT' AND NOT &SPFBIT).GENLIT
         AIF   ('&FOR' EQ 'FIXED' AND NOT &SPFFIXED).GENLIT
         AIF   ('&FOR' EQ 'USER' AND NOT &SPFUSER).GENLIT
         AIF   ('&FOR' EQ 'HEX' AND NOT &SPFHEX).GENLIT
         AIF   ('&LEN' EQ '').CNT3
         AIF   (T'LEN EQ 'N').GENLIT
.CNT3    ANOP
         AIF   ('&OPT' EQ '').CNT4
         AIF   ('&OPT'(1,1) EQ '''').GENLIT
.CNT4    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFVDEFINE).BYP20
VDEFINE  DC    CL8'VDEFINE'             ISPF KEYWORD
&SPFVDEFINE SETB 1
.BYP20   ANOP
         AIF   ('&NAME' EQ '').BYP30
         AIF   ('&NAME'(1,1) NE '''').BYP30
SPFN&NDX DC    C&NAME                   GENERATED NAME LIST
.BYP30   ANOP
         AIF   ('&FOR' EQ 'CHAR' AND &SPFCHAR).BYP40
         AIF   ('&FOR' EQ 'FIXED' AND &SPFFIXED).BYP40
         AIF   ('&FOR' EQ 'BIT' AND &SPFBIT).BYP40
         AIF   ('&FOR' EQ 'USER' AND &SPFUSER).BYP40
         AIF   ('&FOR' EQ 'HEX' AND &SPFHEX).BYP40
&FOR     DC    CL8'&FOR'                ISPF KEYWORD
         AIF   ('&FOR' NE 'CHAR').BYP32
&SPFCHAR SETB  1
.BYP32   ANOP
         AIF   ('&FOR' NE 'FIXED').BYP33
&SPFFIXED SETB  1
.BYP33   ANOP
         AIF   ('&FOR' NE 'CHAR').BYP34
&SPFCHAR SETB  1
.BYP34   ANOP
         AIF   ('&FOR' NE 'BIT').BYP35
&SPFBIT SETB  1
.BYP35   ANOP
         AIF   ('&FOR' NE 'USER').BYP36
&SPFUSER SETB  1
.BYP36   ANOP
         AIF   ('&FOR' NE 'HEX').BYP40
&SPFHEX  SETB  1
.BYP40   ANOP
         AIF   ('&LEN' EQ '').BYP50
         AIF   (T'&LEN NE 'N').BYP50
SPFL&NDX DC    F'&LEN'                  GENERATED LENGTH
.BYP50   ANOP
         AIF   ('&OPT' EQ '').BYP60
         AIF   ('&OPT'(1,1) NE '''').BYP60
SPFO&NDX DC    C&OPT                    GENERATED OPTION LIST
.BYP60   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,VDEFINE               GET ADDRESS OF VDEFINE KEYWORD
.*
         AIF   ('&NAME' EQ '').BYP1000
         AIF   ('&NAME'(1,1) EQ '''').BYP1010
         LA    15,&NAME                 GET ADDRESS OF NAMELIST
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR NAMELIST
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFN&NDX              GET ADDRESS OF GENERATED NAME
.BYP1050 ANOP
.*
         LA    0,&VAR                   GET ADDRESS OF STORAGE
.*
         LA    1,&FOR                   GET ADDRESS OF FORMAT
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
         AIF   (T'&LEN EQ 'N').BYP1310
         LA    14,&LEN                  GET ADDRESS OF LENGTH
         AGO   .BYP1350
.BYP1310 ANOP
         LA    14,SPFL&NDX              GET ADDRESS OF GENERATED LEN
.BYP1350 ANOP
.*
         AIF   ('&OPT' EQ '').BYP1400
         AIF   ('&OPT'(1,1) EQ '''').BYP1410
         LA    15,&OPT                  GET ADDRESS OF OPTION LIST
         AGO   .BYP1450
.BYP1400 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR OPTION
         AGO   .BYP1450
.BYP1410 ANOP
         LA    15,SPFO&NDX              GET ADDRESS OF GENERATED OPT
.BYP1450 ANOP
.*
         AIF   ('&USER' EQ '').BYP1500
         LA    0,&USER                  GET ADDRESS OF USER DATA
         AGO   .BYP1550
.BYP1500 ANOP
         LA    0,SPFNULLC               DUMMY USER DATA
.BYP1550 ANOP
.*
         STM   14,0,&TEMP+16            STORE PARAMETERS INTO LIST
         OI    &TEMP+24,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 7).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 7).BYPVARS
&SPFVARS SETA  7
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(VDEFINE)               VDEFINE LITERAL
.*
         AIF   ('&NAME' EQ '').BYP2000
         AIF   ('&NAME'(1,1) EQ '''').BYP2010
         DC    A(&NAME)                 ADDRESS OF NAMELIST
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAMELIST
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFN&NDX)              ADDRESS OF GENERATED NAMELIST
.BYP2050 ANOP
.*
         DC    A(&VAR)                  ADDRESS OF STORAGE AREA
.*
         DC    A(&FOR)                  ADDRESS OF FORMAT TYPE
.*
         AIF   (T'&LEN EQ 'N').BYP2310
         DC    A(&LEN)                  ADDRESS OF LENGTH
         AGO   .BYP2350
.BYP2310 ANOP
         DC    A(SPFL&NDX)              ADDRESS OF GENERATED LENGTH
.BYP2350 ANOP
.*
         AIF   ('&OPT' EQ '').BYP2400
         AIF   ('&OPT'(1,1) EQ '''').BYP2410
         DC    A(&OPT)                  ADDRESS OF OPT NAME
         AGO   .BYP2450
.BYP2400 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR OPT
         AGO   .BYP2450
.BYP2410 ANOP
         DC    A(SPFO&NDX)              ADDRESS OF GENERATED OPT
.BYP2450 ANOP
.*
         AIF   ('&USER' EQ '').BYP2800
         DC    A(&USER+X'80000000')     ADDRESS OF ROWID NAME
         AGO   .BYP2850
.BYP2800 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR ROWID
.BYP2850 ANOP
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'NAME LIST IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'AN ADDRESS POINTING TO STORAGE MAPPING VARIABLES IS *
               REQUIRED'
         MEXIT
.ERR3    ANOP
         MNOTE 16,'AN ADDRESS POINTING TO STORAGE MAPPING VARIABLES IS *
               REQUIRED - MUST NOT BE A LITERAL'
         MEXIT
.ERR4    ANOP
         MNOTE 16,'INVALID FORMAT SPECIFIED'
         MEXIT
.ERR5    ANOP
         MNOTE 16,'LENGTH FIELD IS REQUIRED'
         MEXIT
.ERR6    ANOP
         MNOTE 16,'USER DATA FIELD MUST NOT BE A LITERAL'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=VDELETE  8512-85095-85095-1208-00129-00129-00000-ISPFDYN
         MACRO
&NAME    VDELETE &VAR,                  NAMELIST                       *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFVDELETE,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&VAR' EQ '').ERR1
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFVDELETE).GENLIT
         AIF   ('&VAR' EQ '').CNT1
         AIF   ('&VAR'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFVDELETE).BYP20
VDELETE  DC    CL8'VDELETE'             ISPF KEYWORD
&SPFVDELETE SETB 1
.BYP20   ANOP
         AIF   ('&VAR' EQ '').BYP30
         AIF   ('&VAR'(1,1) NE '''').BYP30
SPFV&NDX DC    C&VAR                    GENERATED VAR LIST
.BYP30   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,VDELETE               GET ADDRESS OF VDELETE KEYWORD
.*
         AIF   ('&VAR' EQ '').BYP1000
         AIF   ('&VAR'(1,1) EQ '''').BYP1010
         LA    15,&VAR                  GET ADDRESS OF VAR NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR VAR
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFV&NDX              GET ADDRESS OF GENERATED VAR
.BYP1050 ANOP
         STM   14,15,&TEMP              STORE PARAMETERS INTO LIST
         OI    &TEMP+4,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 2).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 2).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(VDELETE)               VDELETE LITERAL
.*
         AIF   ('&VAR' EQ '').BYP2000
         AIF   ('&VAR'(1,1) EQ '''').BYP2010
         DC    A(&VAR+X'80000000')      ADDRESS OF VAR NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR VAR NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFV&NDX+X'80000000')  ADDRESS OF GENERATED VAR
.BYP2050 ANOP
.*
.*
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'THE NAME LIST PARAMETER IS REQUIRED'
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=VGET     8512-85095-85095-1208-00171-00171-00000-ISPFDYN
         MACRO
&NAME    VGET &VAR,                     NAMELIST                       *
               &POOL,                   VARIABLE POOL                  *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFVGET,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFASIS,&SPFSHARED,&SPFPROFILE
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&VAR' EQ '').ERR1
         AIF   ('&POOL' NE '' AND '&POOL' NE 'ASIS' AND                *
               '&POOL' NE 'SHARED' AND  '&POOL' NE 'PROFILE').ERR2
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFVGET).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&VAR' EQ '').CNT1
         AIF   ('&VAR'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&POOL' EQ 'ASIS' AND NOT &SPFASIS).GENLIT
         AIF   ('&POOL' EQ 'PROFILE' AND NOT &SPFPROFILE).GENLIT
         AIF   ('&POOL' EQ 'SHARED' AND NOT &SPFSHARED).GENLIT
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFVGET).BYP20
VGET     DC    CL8'VGET'                ISPF KEYWORD
&SPFVGET SETB 1
.BYP20   ANOP
         AIF   ('&VAR' EQ '').BYP30
         AIF   ('&VAR'(1,1) NE '''').BYP30
SPFV&NDX DC    C&VAR                    GENERATED VAR LIST
.BYP30   ANOP
         AIF   ('&POOL' EQ '').BYP90
         AIF   ('&POOL' NE 'ASIS' OR &SPFASIS).BYP82
ASIS     DC    CL8'ASIS'                ISPF KEYWORD
&SPFASIS SETB  1
.BYP82   ANOP
         AIF   ('&POOL' NE 'PROFILE' OR &SPFPROFILE).BYP84
PROFILE  DC    CL8'PROFILE'             ISPF KEYWORD
&SPFPROFILE SETB 1
.BYP84   ANOP
         AIF   ('&POOL' NE 'SHARED' OR  &SPFSHARED).BYP90
SHARED   DC    CL8'SHARED'              ISPF KEYWORD
&SPFSHARED SETB 1
.BYP90   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,VGET                  GET ADDRESS OF VGET KEYWORD
.*
         AIF   ('&VAR' EQ '').BYP1000
         AIF   ('&VAR'(1,1) EQ '''').BYP1010
         LA    15,&VAR                  GET ADDRESS OF VAR NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR VAR
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFV&NDX              GET ADDRESS OF GENERATED VAR
.BYP1050 ANOP
.*
         AIF   ('&POOL' EQ '').BYP1100
         LA    0,&POOL                  GET POOL TYPE
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR PANEL
.BYP1150 ANOP
.*
         STM   14,0,&TEMP               STORE PARAMETERS INTO LIST
         OI    &TEMP+8,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(VGET)                  VGET LITERAL
.*
         AIF   ('&VAR' EQ '').BYP2000
         AIF   ('&VAR'(1,1) EQ '''').BYP2010
         DC    A(&VAR)                  ADDRESS OF VAR NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VAR NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VAR
.BYP2050 ANOP
.*
         AIF   ('&POOL' EQ '').BYP2100
         DC    A(&POOL+X'80000000')     POOL TYPE
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR PANEL NAME
.BYP2150 ANOP
.*
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'THE NAME LIST PARAMETER IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID POOL SPECIFIED - FOUND ''&POOL'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=VPUT     8512-85095-85095-1208-00171-00171-00000-ISPFDYN
         MACRO
&NAME    VPUT &VAR,                     NAMELIST                       *
               &POOL,                   VARIABLE POOL                  *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFVPUT,&SPFNULLC,&SPFDEBUG,&SPFVAR
         GBLB  &SPFASIS,&SPFSHARED,&SPFPROFILE
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&VAR' EQ '').ERR1
         AIF   ('&POOL' NE '' AND '&POOL' NE 'ASIS' AND                *
               '&POOL' NE 'SHARED' AND  '&POOL' NE 'PROFILE').ERR2
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFVPUT).GENLIT
         AIF   (NOT &SPFNULLC).GENLIT
         AIF   ('&VAR' EQ '').CNT1
         AIF   ('&VAR'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&POOL' EQ 'ASIS' AND NOT &SPFASIS).GENLIT
         AIF   ('&POOL' EQ 'PROFILE' AND NOT &SPFPROFILE).GENLIT
         AIF   ('&POOL' EQ 'SHARED' AND NOT &SPFSHARED).GENLIT
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFVPUT).BYP20
VPUT     DC    CL8'VPUT'                ISPF KEYWORD
&SPFVPUT SETB 1
.BYP20   ANOP
         AIF   ('&VAR' EQ '').BYP30
         AIF   ('&VAR'(1,1) NE '''').BYP30
SPFV&NDX DC    C&VAR                    GENERATED VAR LIST
.BYP30   ANOP
         AIF   ('&POOL' EQ '').BYP90
         AIF   ('&POOL' NE 'ASIS' OR &SPFASIS).BYP82
ASIS     DC    CL8'ASIS'                ISPF KEYWORD
&SPFASIS SETB  1
.BYP82   ANOP
         AIF   ('&POOL' NE 'PROFILE' OR &SPFPROFILE).BYP84
PROFILE  DC    CL8'PROFILE'             ISPF KEYWORD
&SPFPROFILE SETB 1
.BYP84   ANOP
         AIF   ('&POOL' NE 'SHARED' OR  &SPFSHARED).BYP90
SHARED   DC    CL8'SHARED'              ISPF KEYWORD
&SPFSHARED SETB 1
.BYP90   ANOP
         AIF   (&SPFNULLC).BYP120
SPFNULLC DC    CL8'        '            DUMMY ISPF FIELD
&SPFNULLC SETB  1
.BYP120  ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,VPUT                  GET ADDRESS OF VPUT KEYWORD
.*
         AIF   ('&VAR' EQ '').BYP1000
         AIF   ('&VAR'(1,1) EQ '''').BYP1010
         LA    15,&VAR                  GET ADDRESS OF VAR NAME
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR VAR
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFV&NDX              GET ADDRESS OF GENERATED VAR
.BYP1050 ANOP
.*
         AIF   ('&POOL' EQ '').BYP1100
         LA    0,&POOL                  GET POOL TYPE
         AGO   .BYP1150
.BYP1100 ANOP
         LA    0,SPFNULLC               GET DUMMY PARM FOR PANEL
.BYP1150 ANOP
.*
         STM   14,0,&TEMP               STORE PARAMETERS INTO LIST
         OI    &TEMP+8,X'80'            MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 3).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 3).BYPVARS
&SPFVARS SETA  3
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(VPUT)                  VPUT LITERAL
.*
         AIF   ('&VAR' EQ '').BYP2000
         AIF   ('&VAR'(1,1) EQ '''').BYP2010
         DC    A(&VAR)                  ADDRESS OF VAR NAME
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR VAR NAME
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED VAR
.BYP2050 ANOP
.*
         AIF   ('&POOL' EQ '').BYP2100
         DC    A(&POOL+X'80000000')     POOL TYPE
         AGO   .BYP2150
.BYP2100 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR PANEL NAME
.BYP2150 ANOP
.*
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'THE NAME LIST PARAMETER IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'INVALID POOL SPECIFIED - FOUND ''&POOL'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=VREPLACE 8512-85095-85095-1208-00195-00195-00000-ISPFDYN
         MACRO
&NAME    VREPLACE &VAR,                 NAME LIST                      *
               &LEN,                    LENGTH ARRAY                   *
               &VAL,                    VALUE ARRAYS                   *
               &LOAD=ISPLINK,           ISPLINK ADDRESS                *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFVREPLACE,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLA  &COUNT,&LIMIT
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
         AIF   ('&VAR' EQ '').ERR1
         AIF   ('&LEN' EQ '').ERR2
         AIF   ('&VAL' EQ '').ERR3
         AIF   ('&VAL'(1,1) EQ '''').ERR3
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFVREPLACE).GENLIT
         AIF   ('&VAR' EQ '').CNT1
         AIF   ('&VAR'(1,1) EQ '''').GENLIT
.CNT1    ANOP
         AIF   ('&LEN' EQ '').CNT2
         AIF   (T'&LEN EQ 'N').GENLIT
         AIF   (N'&LEN GT 1).GENLIT
.CNT2    ANOP
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFVREPLACE).BYP20
VREPLACE DC    CL8'VREPLACE'            ISPF KEYWORD
&SPFVREPLACE SETB 1
.BYP20   ANOP
         AIF   ('&VAR' EQ '').BYP30
         AIF   ('&VAR'(1,1) NE '''').BYP30
SPFV&NDX DC    C&VAR                    GENERATED NAME LIST{
.BYP30   ANOP
         AIF   ('&LEN' EQ '').BYP40
         AIF   (T'&LEN NE 'N' AND N'&LEN EQ 1).BYP40
&COUNT   SETA  1
SPFL&NDX DC    F'&LEN(1)'
.BYP32   ANOP
&COUNT   SETA  &COUNT+1
         AIF   (&COUNT GT N'&LEN).BYP40
         DC    F'&LEN(&COUNT)'
         AGO   .BYP32
.BYP40   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,VREPLACE              GET ADDRESS OF VREPLACE KEYWORD
.*
         AIF   ('&VAR' EQ '').BYP1000
         AIF   ('&VAR'(1,1) EQ '''').BYP1010
         LA    15,&VAR                  GET ADDRESS OF NAMELIST
         AGO   .BYP1050
.BYP1000 ANOP
         LA    15,SPFNULLC              GET DUMMY PARM FOR NAMELIST
         AGO   .BYP1050
.BYP1010 ANOP
         LA    15,SPFV&NDX              GET ADDRESS OF GENERATED NAME
.BYP1050 ANOP
.*
         AIF   (T'&LEN EQ 'N' OR N'&LEN GT 1).BYP1110
         LA    0,&LEN                   GET ADDRESS OF LENGTH ARRAY
         AGO   .BYP1150
.BYP1110 ANOP
         LA    0,SPFL&NDX               GET ADDRESS OF GENERATED LENGTH
.BYP1150 ANOP
.*
         AIF   ('&VAL' EQ '').BYP1200
         AIF   ('&VAL'(1,1) EQ '''').BYP1210
         LA    1,&VAL                   GET ADDRESS OF VALUE ADDRESS
         AGO   .BYP1250
.BYP1200 ANOP
         LA    1,SPFNULLC               GET DUMMY PARM FOR VALUE ADDRE
         AGO   .BYP1250
.BYP1210 ANOP
         LA    1,SPFA&NDX               GET ADDRESS OF GENERATED VALUE
.BYP1250 ANOP
.*
         STM   14,1,&TEMP               STORE PARAMETERS INTO LIST
.*
         OI    &TEMP+12,X'80'           MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 4).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 4).BYPVARS
&SPFVARS SETA  4
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(VREPLACE)              VREPLACE LITERAL
.*
         AIF   ('&VAR' EQ '').BYP2000
         AIF   ('&VAR'(1,1) EQ '''').BYP2010
         DC    A(&VAR)                  ADDRESS OF NAMELIST
         AGO   .BYP2050
.BYP2000 ANOP
         DC    A(SPFNULLC)              DUMMY PARM FOR NAMELIST
         AGO   .BYP2050
.BYP2010 ANOP
         DC    A(SPFV&NDX)              ADDRESS OF GENERATED NAMELIST
.BYP2050 ANOP
.*
         AIF   (T'&LEN EQ 'N' OR N'&LEN GT 1).BYP2110
         DC    A(&LEN)                  ADDRESS OF LENGTH ARRAY
         AGO   .BYP2150
.BYP2110 ANOP
         DC    A(SPFL&NDX)              ADDRESS OF GENERATED LENGTHS
.BYP2150 ANOP
.*
         AIF   ('&VAL' EQ '').BYP2200
         AIF   ('&VAL'(1,1) EQ '''').BYP2210
         DC    A(&VAL+X'80000000')      ADDRESS OF STORAGE ADDRESS
         AGO   .BYP2250
.BYP2200 ANOP
         DC    A(SPFNULLC+X'80000000')  DUMMY PARM FOR STORAGE ADDRESS
         AGO   .BYP2250
.BYP2210 ANOP
         DC    A(SPFA&NDX+X'80000000')
.BYP2250 ANOP
.*
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERR1    ANOP
         MNOTE 16,'NAME LIST IS REQUIRED'
         MEXIT
.ERR2    ANOP
         MNOTE 16,'LENGTH VALUES OR ADDRESS REQUIRED'
         MEXIT
.ERR3    ANOP
         MNOTE 16,'VALUE ADDRESS REQUIRED'
         MEXIT
.ERR4    ANOP
         MNOTE 16,'EXPECTED MOVE/LOCATE KEYWORD - FOUND ''&MOVE'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=VRESET   8512-85095-85095-1208-00094-00094-00000-ISPFDYN
         MACRO
&NAME    VRESET &LOAD=ISPLINK,          ISPF ADDRESS                   *
               &MF=I                    MACRO FORMAT
.*
.**********************************************************************
.*       GLOBALS
.**********************************************************************
.*
         GBLB  &SPFVRESET,&SPFDEBUG,&SPFVAR
         GBLA  &SPFVARS,&SPFVARC
         LCLC  &NDX,&TEMP
&NDX     SETC  '&SYSNDX'
         AIF   ('&MF(2)' NE '').BYP0
&TEMP    SETC  'SPFPARMS'
         AGO   .BYP00
.BYP0    ANOP
&TEMP    SETC  '&MF(2)'
.BYP00   ANOP
         AIF   ('&NAME' EQ '').BYP10
&NAME    DS    0H
.BYP10   ANOP
.*
.**********************************************************************
.*       EDITS
.**********************************************************************
.*
         AIF   ('&MF(1)' NE 'I' AND                                    *
               '&MF(1)' NE 'E').ERRMF
.*
.**********************************************************************
.*       CHECK TO SEE IF A BRANCH AROUND LITERALS IS REQUIRED
.**********************************************************************
.*
         AIF   (NOT &SPFVRESET).GENLIT
         AGO   .BRAREA
.GENLIT  ANOP
.*
.*********************************************************************
.*       GENERATE THE BRANCH AROUND LITERALS AND THE LITERALS
.*********************************************************************
.*
         B     SPF&NDX
         AIF   (&SPFVRESET).BYP20
VRESET   DC    CL8'VRESET'              ISPF KEYWORD
&SPFVRESET SETB 1
.BYP20   ANOP
SPF&NDX  DS    0H
.BRAREA  ANOP
.*
.*********************************************************************
.*       GENERATE THE CALL
.*********************************************************************
.*
         AIF   ('&MF(1)' EQ 'I').MFI
         LA    14,VRESET                GET ADDRESS OF VRESET KEYWORD
         ST    14,&TEMP                 STORE PARAMETERS INTO LIST
         OI    &TEMP,X'80'              MARK LAST PARM
         LA    1,&TEMP                  GET PARAMETER LIST ADDRESS
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         AIF   (NOT &SPFVAR).BYVAR
         AIF   (&SPFVARC LT 0).ERRVAR
         AGO   .BYPVARS
.BYVAR   AIF   (&SPFVARS GE 0).BYPVARS
&SPFVARS SETA  0
.BYPVARS ANOP
         MEXIT
.*
.**********************************************************************
.*       MACRO FORMAT I
.**********************************************************************
.*
.MFI     ANOP
         CNOP  0,4
         BAL   1,SPFE&NDX               BRANCH AROUND LITERALS
         DC    A(VRESET+X'80000000')    VRESET LITERAL
.*
SPFE&NDX DS    0H                       MARK LAST PARM
         L     15,&LOAD                 LOAD ADDRESS OF ISPF
         BALR  14,15                    CALL ISPF
         MEXIT
.*
.**********************************************************************
.*       MACRO ERRORS
.**********************************************************************
.*
.ERRMF   ANOP
         MNOTE 16,'INVALID MACRO FORMAT SPECIFIED - FOUND ''&MF(1)'''
         MEXIT
.ERRVAR  ANOP
         MNOTE 16,'ISPF PARMS MACRO WILL NOT HOLD FULL PARMLIST'
         MNOTE *,' ISPF PARMS MACRO GENERATE PARMLIST TOO SMALL'
         MEXIT
         MEND
./ ADD NAME=WS       8512-86097-86097-1148-00024-00024-00000-ISPFDYN
         MACRO
&NAME    WS    &TYPE,                   DSECT NAME AND BEGIN/END       *
               &LENGTH=WSLEN            WHAT TO CALL LENGTH OF DSECT
.**********************************************************************
.*       GLOBALS
.**********************************************************************
         GBLC  &WS$NAME
         GBLC  &WS$CAME
         AIF   ('&TYPE' EQ 'BEGIN').BEG
         AIF   ('&TYPE' EQ 'END').END
         MNOTE 16,'INVALID TYPE FOUND - EXPECTED BEGIN OR END'
         MEXIT
.BEG     ANOP
&WS$NAME SETC  '&NAME'
&WS$CAME SETC  '&SYSECT'
&WS$NAME DSECT ,
SAVEAREA DS    18F
         MEXIT
.END     ANOP
         DS    0D
WS$LEN   EQU   *-&WS$NAME
&LENGTH  EQU   (WS$LEN+2)/4
&WS$CAME CSECT ,
         MEND
